#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemSlotWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "TslGame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ItemSlotWidget.ItemSlotWidget_C.ExecuteUbergraph_ItemSlotWidget
// 0x0418 (0x0418 - 0x0000)
struct ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotInterface>        CallFunc_GetSlotItem_SlotItem;                     // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStackCount_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStackable_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPopupButtonID ButtonID)>      K2Node_CreateDelegate_OutputDelegate2;             // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry2;                          // 0x0070(0x0034)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent2;                          // 0x00A8(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0120(0x0078)(ConstParm)
	TScriptInterface<class ISlotInterface>        K2Node_ComponentBoundEvent_Slot;                   // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotWidgetBaseInterface_C> K2Node_DynamicCast_AsSlot_Widget_Base_Interface;   // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_GetSlotContainer_SlotContainer;           // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        CallFunc_GetSlotItem_SlotItem2;                    // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue2;      // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputA_ReturnValue;                       // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocus_ReturnValue;                      // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F3[0x1];                                      // 0x01F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetTimeSeconds_ReturnValue2;              // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputA_ReturnValue2;                      // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocus_ReturnValue2;                     // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputB_ReturnValue;                       // 0x0206(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_207[0x1];                                      // 0x0207(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AInventory*                             K2Node_DynamicCast_AsInventory;                    // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocus_ReturnValue3;                     // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_212[0x2];                                      // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue3;              // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocus_ReturnValue4;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue4;              // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0220(0x0034)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue2;        // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue5;              // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue3;         // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslHUD*                                CallFunc_GetTslHUD_ReturnValue;                    // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPopupButtonID                                K2Node_CustomEvent_ButtonID;                       // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_273[0x5];                                      // 0x0273(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate5;             // 0x0278(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_GetSlotContainer_SlotContainer2;          // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        CallFunc_GetSlotItem_SlotItem3;                    // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue3;      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate6;             // 0x02B0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ANearbyInteractiveItemExplorer*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x02C8(0x0010)(ZeroConstructor, ReferenceParm)
	class ANearbyInteractiveItemExplorer*         CallFunc_Array_Get_Item;                           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_NotifyDropSlotOnOtherContainer_OtherContainer_CastInput; // 0x02E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotContainerInterface> CallFunc_GetSlotContainer_SlotContainer3;          // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_GetSlotContainer_SlotContainer4;          // 0x0308(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AInventory*                             K2Node_DynamicCast_AsInventory2;                   // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AInventory*                             K2Node_DynamicCast_AsInventory3;                   // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotContainerInterface> CallFunc_GetSlotContainer_SlotContainer5;          // 0x0338(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AInventory*                             K2Node_DynamicCast_AsInventory4;                   // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue6;              // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue4;         // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryWidget_C*                     CallFunc_GetInventoryWidget_InventoryWidget;       // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartSelfAttachmentPut_bResult;           // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36A[0x6];                                      // 0x036A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotInterface>        CallFunc_GetSlotItem_SlotItem4;                    // 0x0370(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAttachableItem*                        K2Node_DynamicCast_AsAttachable_Item;              // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelfAttachmentPutMode_bResult;          // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelfAttachmentPutMode_bResult2;         // 0x038A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B[0x5];                                      // 0x038B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate7;             // 0x0390(0x0010)(ZeroConstructor, NoDestructor)
	class UInventoryWidget_C*                     CallFunc_GetInventoryWidget_InventoryWidget2;      // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x03A8(0x0008)()
	bool                                          CallFunc_IsFocus_ReturnValue5;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelfAttachmentPutMode_bResult3;         // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B2[0x6];                                      // 0x03B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryWidget_C*                     CallFunc_GetInventoryWidget_InventoryWidget3;      // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslHUD*                                CallFunc_GetTslHUD_ReturnValue2;                   // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslHUD*                                K2Node_DynamicCast_AsTsl_HUD;                      // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UItemToolTipWidget_Bp_C*                K2Node_DynamicCast_AsItem_Tool_Tip_Widget_Bp;      // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputB_ReturnValue2;                      // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_402[0x6];                                      // 0x0402(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AInventory*                             K2Node_DynamicCast_AsInventory5;                   // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget) == 0x000008, "Wrong alignment on ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget");
static_assert(sizeof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget) == 0x000418, "Wrong size on ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, EntryPoint) == 0x000000, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetSlotItem_SlotItem) == 0x000008, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetSlotItem_SlotItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000018, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetStackCount_ReturnValue) == 0x000034, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_IsStackable_ReturnValue) == 0x000038, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_IsStackable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000039, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_CreateDelegate_OutputDelegate2) == 0x000040, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_CreateDelegate_OutputDelegate3) == 0x000050, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_CreateDelegate_OutputDelegate4) == 0x000060, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_Event_MyGeometry2) == 0x000070, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_Event_MyGeometry2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_Event_MouseEvent2) == 0x0000A8, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_Event_MouseEvent2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_Event_MouseEvent) == 0x000120, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_ComponentBoundEvent_Slot) == 0x000198, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_ComponentBoundEvent_Slot' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_DynamicCast_AsSlot_Widget_Base_Interface) == 0x0001A8, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_DynamicCast_AsSlot_Widget_Base_Interface' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0001C0, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetSlotContainer_SlotContainer) == 0x0001C8, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetSlotContainer_SlotContainer' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetSlotItem_SlotItem2) == 0x0001D8, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetSlotItem_SlotItem2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_Conv_InterfaceToObject_ReturnValue2) == 0x0001E8, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_Conv_InterfaceToObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_IsValid_ReturnValue2) == 0x0001F0, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_InputA_ReturnValue) == 0x0001F1, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_InputA_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_IsFocus_ReturnValue) == 0x0001F2, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_IsFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetTimeSeconds_ReturnValue) == 0x0001F4, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetTimeSeconds_ReturnValue2) == 0x0001F8, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetTimeSeconds_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_InputA_ReturnValue2) == 0x0001FC, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_InputA_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000200, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000204, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_IsFocus_ReturnValue2) == 0x000205, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_IsFocus_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_InputB_ReturnValue) == 0x000206, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_InputB_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_DynamicCast_AsInventory) == 0x000208, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_DynamicCast_AsInventory' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_DynamicCast_bSuccess2) == 0x000210, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_IsFocus_ReturnValue3) == 0x000211, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_IsFocus_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetTimeSeconds_ReturnValue3) == 0x000214, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetTimeSeconds_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_IsFocus_ReturnValue4) == 0x000218, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_IsFocus_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetTimeSeconds_ReturnValue4) == 0x00021C, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetTimeSeconds_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_Event_MyGeometry) == 0x000220, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_Event_InDeltaTime) == 0x000254, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x000258, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_LessEqual_FloatFloat_ReturnValue2) == 0x00025C, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_LessEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetTimeSeconds_ReturnValue5) == 0x000260, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetTimeSeconds_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_Subtract_FloatFloat_ReturnValue3) == 0x000264, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_Subtract_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetTslHUD_ReturnValue) == 0x000268, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetTslHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000270, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_IsValid_ReturnValue3) == 0x000271, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_CustomEvent_ButtonID) == 0x000272, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_CustomEvent_ButtonID' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_CreateDelegate_OutputDelegate5) == 0x000278, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetSlotContainer_SlotContainer2) == 0x000288, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetSlotContainer_SlotContainer2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetSlotItem_SlotItem3) == 0x000298, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetSlotItem_SlotItem3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_Conv_InterfaceToObject_ReturnValue3) == 0x0002A8, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_Conv_InterfaceToObject_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_CreateDelegate_OutputDelegate6) == 0x0002B0, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_IsValid_ReturnValue4) == 0x0002C0, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetAllActorsOfClass_OutActors) == 0x0002C8, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_Array_Get_Item) == 0x0002D8, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_NotifyDropSlotOnOtherContainer_OtherContainer_CastInput) == 0x0002E0, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_NotifyDropSlotOnOtherContainer_OtherContainer_CastInput' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0002F0, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetSlotContainer_SlotContainer3) == 0x0002F8, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetSlotContainer_SlotContainer3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetSlotContainer_SlotContainer4) == 0x000308, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetSlotContainer_SlotContainer4' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_DynamicCast_AsInventory2) == 0x000318, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_DynamicCast_AsInventory2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_DynamicCast_bSuccess3) == 0x000320, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_DynamicCast_AsInventory3) == 0x000328, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_DynamicCast_AsInventory3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_DynamicCast_bSuccess4) == 0x000330, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetSlotContainer_SlotContainer5) == 0x000338, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetSlotContainer_SlotContainer5' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_DynamicCast_AsInventory4) == 0x000348, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_DynamicCast_AsInventory4' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_DynamicCast_bSuccess5) == 0x000350, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetTimeSeconds_ReturnValue6) == 0x000354, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetTimeSeconds_ReturnValue6' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_Subtract_FloatFloat_ReturnValue4) == 0x000358, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_Subtract_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetInventoryWidget_InventoryWidget) == 0x000360, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetInventoryWidget_InventoryWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x000368, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_StartSelfAttachmentPut_bResult) == 0x000369, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_StartSelfAttachmentPut_bResult' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetSlotItem_SlotItem4) == 0x000370, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetSlotItem_SlotItem4' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_DynamicCast_AsAttachable_Item) == 0x000380, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_DynamicCast_AsAttachable_Item' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_DynamicCast_bSuccess6) == 0x000388, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_IsSelfAttachmentPutMode_bResult) == 0x000389, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_IsSelfAttachmentPutMode_bResult' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_IsSelfAttachmentPutMode_bResult2) == 0x00038A, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_IsSelfAttachmentPutMode_bResult2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_CreateDelegate_OutputDelegate7) == 0x000390, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetInventoryWidget_InventoryWidget2) == 0x0003A0, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetInventoryWidget_InventoryWidget2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0003A8, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_IsFocus_ReturnValue5) == 0x0003B0, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_IsFocus_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_IsSelfAttachmentPutMode_bResult3) == 0x0003B1, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_IsSelfAttachmentPutMode_bResult3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetInventoryWidget_InventoryWidget3) == 0x0003B8, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetInventoryWidget_InventoryWidget3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetTslHUD_ReturnValue2) == 0x0003C0, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetTslHUD_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x0003C8, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_IsValid_ReturnValue5) == 0x0003D0, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetHUD_ReturnValue) == 0x0003D8, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_DynamicCast_AsTsl_HUD) == 0x0003E0, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_DynamicCast_AsTsl_HUD' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_DynamicCast_bSuccess7) == 0x0003E8, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_GetWidget_ReturnValue) == 0x0003F0, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_DynamicCast_AsItem_Tool_Tip_Widget_Bp) == 0x0003F8, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_DynamicCast_AsItem_Tool_Tip_Widget_Bp' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_DynamicCast_bSuccess8) == 0x000400, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, CallFunc_InputB_ReturnValue2) == 0x000401, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::CallFunc_InputB_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_DynamicCast_AsInventory5) == 0x000408, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_DynamicCast_AsInventory5' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget, K2Node_DynamicCast_bSuccess9) == 0x000410, "Member 'ItemSlotWidget_C_ExecuteUbergraph_ItemSlotWidget::K2Node_DynamicCast_bSuccess9' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.OnButtonClicked
// 0x0001 (0x0001 - 0x0000)
struct ItemSlotWidget_C_OnButtonClicked final
{
public:
	EPopupButtonID                                ButtonID;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_OnButtonClicked) == 0x000001, "Wrong alignment on ItemSlotWidget_C_OnButtonClicked");
static_assert(sizeof(ItemSlotWidget_C_OnButtonClicked) == 0x000001, "Wrong size on ItemSlotWidget_C_OnButtonClicked");
static_assert(offsetof(ItemSlotWidget_C_OnButtonClicked, ButtonID) == 0x000000, "Member 'ItemSlotWidget_C_OnButtonClicked::ButtonID' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.Tick
// 0x0038 (0x0038 - 0x0000)
struct ItemSlotWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_Tick) == 0x000004, "Wrong alignment on ItemSlotWidget_C_Tick");
static_assert(sizeof(ItemSlotWidget_C_Tick) == 0x000038, "Wrong size on ItemSlotWidget_C_Tick");
static_assert(offsetof(ItemSlotWidget_C_Tick, MyGeometry) == 0x000000, "Member 'ItemSlotWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_Tick, InDeltaTime) == 0x000034, "Member 'ItemSlotWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.BndEvt__InnerItemSlotListWidget_K2Node_ComponentBoundEvent_0_OnChildSlotFocus__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ItemSlotWidget_C_BndEvt__InnerItemSlotListWidget_K2Node_ComponentBoundEvent_0_OnChildSlotFocus__DelegateSignature final
{
public:
	TScriptInterface<class ISlotInterface>        Slot_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_BndEvt__InnerItemSlotListWidget_K2Node_ComponentBoundEvent_0_OnChildSlotFocus__DelegateSignature) == 0x000008, "Wrong alignment on ItemSlotWidget_C_BndEvt__InnerItemSlotListWidget_K2Node_ComponentBoundEvent_0_OnChildSlotFocus__DelegateSignature");
static_assert(sizeof(ItemSlotWidget_C_BndEvt__InnerItemSlotListWidget_K2Node_ComponentBoundEvent_0_OnChildSlotFocus__DelegateSignature) == 0x000010, "Wrong size on ItemSlotWidget_C_BndEvt__InnerItemSlotListWidget_K2Node_ComponentBoundEvent_0_OnChildSlotFocus__DelegateSignature");
static_assert(offsetof(ItemSlotWidget_C_BndEvt__InnerItemSlotListWidget_K2Node_ComponentBoundEvent_0_OnChildSlotFocus__DelegateSignature, Slot_0) == 0x000000, "Member 'ItemSlotWidget_C_BndEvt__InnerItemSlotListWidget_K2Node_ComponentBoundEvent_0_OnChildSlotFocus__DelegateSignature::Slot_0' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct ItemSlotWidget_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ItemSlotWidget_C_OnMouseLeave) == 0x000008, "Wrong alignment on ItemSlotWidget_C_OnMouseLeave");
static_assert(sizeof(ItemSlotWidget_C_OnMouseLeave) == 0x000078, "Wrong size on ItemSlotWidget_C_OnMouseLeave");
static_assert(offsetof(ItemSlotWidget_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'ItemSlotWidget_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct ItemSlotWidget_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ItemSlotWidget_C_OnMouseEnter) == 0x000008, "Wrong alignment on ItemSlotWidget_C_OnMouseEnter");
static_assert(sizeof(ItemSlotWidget_C_OnMouseEnter) == 0x0000B0, "Wrong size on ItemSlotWidget_C_OnMouseEnter");
static_assert(offsetof(ItemSlotWidget_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'ItemSlotWidget_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'ItemSlotWidget_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetUseButtonVisibility
// 0x01A8 (0x01A8 - 0x0000)
struct ItemSlotWidget_C_GetUseButtonVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FName                                   m__name_Variable;                                  // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                   m__name_Variable2;                                 // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                   m__name_Variable3;                                 // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue2;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue3;              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m__text_Variable;                                  // 0x0028(0x0018)()
	bool                                          m__bool_Variable2;                                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m__text_Variable2;                                 // 0x0048(0x0018)()
	class UEquipableItem*                         K2Node_DynamicCast_AsEquipable_Item;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select2_Default;                            // 0x0070(0x0018)()
	bool                                          m__bool_Variable3;                                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AEquipment*                             CallFunc_GetEquipment_ReturnValue;                 // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FEquipPosition                         CallFunc_FindEquipPosition_ReturnValue;            // 0x00B0(0x0008)()
	class UEquipableItem*                         CallFunc_GetItem_ReturnValue;                      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select3_Default;                            // 0x00C8(0x0018)()
	bool                                          CallFunc_IsUsableItemSlot_ReturnValue;             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAttachableItemSlot_return_node;         // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isPickupableDropItemSlot_return_value;    // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAttachment_ReturnValue;                 // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IDroppedItemInterface> K2Node_DynamicCast_AsDropped_Item_Interface;       // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem*                                  K2Node_DynamicCast_AsItem;                         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem*                                  CallFunc_GetDroppedItem_ReturnValue;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipable_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWeapon_ReturnValue;                     // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue2;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue3;      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FName>                           CallFunc_GetAvailableSlotActions_ReturnValue;      // 0x0140(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   PickUpText;                                        // 0x0158(0x0018)(Edit)
	bool                                          bIsAttachment;                                     // 0x0170(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsEquipment;                                      // 0x0171(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsDroppedItem;                                    // 0x0172(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_173[0x5];                                      // 0x0173(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem*                                  RefSlotItem;                                       // 0x0178(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FName>                           AvailableSlotActions;                              // 0x0180(0x0010)(Edit, ZeroConstructor)
	class FText                                   InteractionText;                                   // 0x0190(0x0018)(Edit)
};
static_assert(alignof(ItemSlotWidget_C_GetUseButtonVisibility) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetUseButtonVisibility");
static_assert(sizeof(ItemSlotWidget_C_GetUseButtonVisibility) == 0x0001A8, "Wrong size on ItemSlotWidget_C_GetUseButtonVisibility");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, m__name_Variable) == 0x000008, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::m__name_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, m__name_Variable2) == 0x000010, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::m__name_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, m__name_Variable3) == 0x000018, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::m__name_Variable3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_Array_Contains_ReturnValue) == 0x000020, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_Array_Contains_ReturnValue2) == 0x000021, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_Array_Contains_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_Array_Contains_ReturnValue3) == 0x000022, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_Array_Contains_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, m__bool_Variable) == 0x000023, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, m__byte_Variable) == 0x000024, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, m__byte_Variable2) == 0x000025, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, m__text_Variable) == 0x000028, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::m__text_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, m__bool_Variable2) == 0x000040, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, m__text_Variable2) == 0x000048, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::m__text_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, K2Node_DynamicCast_AsEquipable_Item) == 0x000060, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::K2Node_DynamicCast_AsEquipable_Item' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000069, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_TextIsEmpty_ReturnValue) == 0x00006A, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, K2Node_Select_Default) == 0x00006B, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_BooleanAND_ReturnValue) == 0x00006C, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, K2Node_Select2_Default) == 0x000070, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, m__bool_Variable3) == 0x000088, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::m__bool_Variable3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000090, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_GetInventoryFacade_ReturnValue) == 0x0000A0, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_GetInventoryFacade_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_GetEquipment_ReturnValue) == 0x0000A8, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_GetEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_FindEquipPosition_ReturnValue) == 0x0000B0, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_FindEquipPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_GetItem_ReturnValue) == 0x0000B8, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_GetItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_IsValid_ReturnValue2) == 0x0000C0, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, K2Node_Select3_Default) == 0x0000C8, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_IsUsableItemSlot_ReturnValue) == 0x0000E0, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_IsUsableItemSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_IsAttachableItemSlot_return_node) == 0x0000E1, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_IsAttachableItemSlot_return_node' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_isPickupableDropItemSlot_return_value) == 0x0000E2, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_isPickupableDropItemSlot_return_value' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_IsAttachment_ReturnValue) == 0x0000E3, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_IsAttachment_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x0000E8, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, K2Node_DynamicCast_AsDropped_Item_Interface) == 0x0000F0, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::K2Node_DynamicCast_AsDropped_Item_Interface' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, K2Node_DynamicCast_bSuccess2) == 0x000100, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, K2Node_DynamicCast_AsItem) == 0x000108, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::K2Node_DynamicCast_AsItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, K2Node_DynamicCast_bSuccess3) == 0x000110, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_GetDroppedItem_ReturnValue) == 0x000118, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_GetDroppedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_IsEquipable_ReturnValue) == 0x000120, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_IsEquipable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_IsWeapon_ReturnValue) == 0x000121, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_IsWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_Conv_InterfaceToObject_ReturnValue2) == 0x000128, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_Conv_InterfaceToObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000130, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_IsValid_ReturnValue3) == 0x000131, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_Conv_InterfaceToObject_ReturnValue3) == 0x000138, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_Conv_InterfaceToObject_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_GetAvailableSlotActions_ReturnValue) == 0x000140, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_GetAvailableSlotActions_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, CallFunc_IsValid_ReturnValue4) == 0x000150, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, PickUpText) == 0x000158, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::PickUpText' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, bIsAttachment) == 0x000170, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::bIsAttachment' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, bIsEquipment) == 0x000171, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::bIsEquipment' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, bIsDroppedItem) == 0x000172, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::bIsDroppedItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, RefSlotItem) == 0x000178, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::RefSlotItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, AvailableSlotActions) == 0x000180, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::AvailableSlotActions' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetUseButtonVisibility, InteractionText) == 0x000190, "Member 'ItemSlotWidget_C_GetUseButtonVisibility::InteractionText' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetAmmountTextVisibility
// 0x0018 (0x0018 - 0x0000)
struct ItemSlotWidget_C_GetAmmountTextVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStackable_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetAmmountTextVisibility) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetAmmountTextVisibility");
static_assert(sizeof(ItemSlotWidget_C_GetAmmountTextVisibility) == 0x000018, "Wrong size on ItemSlotWidget_C_GetAmmountTextVisibility");
static_assert(offsetof(ItemSlotWidget_C_GetAmmountTextVisibility, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_GetAmmountTextVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetAmmountTextVisibility, m__bool_Variable) == 0x000001, "Member 'ItemSlotWidget_C_GetAmmountTextVisibility::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetAmmountTextVisibility, m__byte_Variable) == 0x000002, "Member 'ItemSlotWidget_C_GetAmmountTextVisibility::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetAmmountTextVisibility, m__byte_Variable2) == 0x000003, "Member 'ItemSlotWidget_C_GetAmmountTextVisibility::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetAmmountTextVisibility, CallFunc_IsStackable_ReturnValue) == 0x000004, "Member 'ItemSlotWidget_C_GetAmmountTextVisibility::CallFunc_IsStackable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetAmmountTextVisibility, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000008, "Member 'ItemSlotWidget_C_GetAmmountTextVisibility::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetAmmountTextVisibility, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ItemSlotWidget_C_GetAmmountTextVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetAmmountTextVisibility, K2Node_Select_Default) == 0x000011, "Member 'ItemSlotWidget_C_GetAmmountTextVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetIconVisibility
// 0x0018 (0x0018 - 0x0000)
struct ItemSlotWidget_C_GetIconVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetIconVisibility) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetIconVisibility");
static_assert(sizeof(ItemSlotWidget_C_GetIconVisibility) == 0x000018, "Wrong size on ItemSlotWidget_C_GetIconVisibility");
static_assert(offsetof(ItemSlotWidget_C_GetIconVisibility, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_GetIconVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetIconVisibility, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000008, "Member 'ItemSlotWidget_C_GetIconVisibility::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetIconVisibility, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ItemSlotWidget_C_GetIconVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetPackagedLabelVisibility
// 0x0005 (0x0005 - 0x0000)
struct ItemSlotWidget_C_GetPackagedLabelVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetPackagedLabelVisibility) == 0x000001, "Wrong alignment on ItemSlotWidget_C_GetPackagedLabelVisibility");
static_assert(sizeof(ItemSlotWidget_C_GetPackagedLabelVisibility) == 0x000005, "Wrong size on ItemSlotWidget_C_GetPackagedLabelVisibility");
static_assert(offsetof(ItemSlotWidget_C_GetPackagedLabelVisibility, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_GetPackagedLabelVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetPackagedLabelVisibility, m__bool_Variable) == 0x000001, "Member 'ItemSlotWidget_C_GetPackagedLabelVisibility::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetPackagedLabelVisibility, m__byte_Variable) == 0x000002, "Member 'ItemSlotWidget_C_GetPackagedLabelVisibility::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetPackagedLabelVisibility, m__byte_Variable2) == 0x000003, "Member 'ItemSlotWidget_C_GetPackagedLabelVisibility::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetPackagedLabelVisibility, K2Node_Select_Default) == 0x000004, "Member 'ItemSlotWidget_C_GetPackagedLabelVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetInnerContainerVisibility
// 0x0028 (0x0028 - 0x0000)
struct ItemSlotWidget_C_GetInnerContainerVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningTslCharacter_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPackageItem_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemPackage*                           K2Node_DynamicCast_AsItem_Package;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpenedBy_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetInnerContainerVisibility) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetInnerContainerVisibility");
static_assert(sizeof(ItemSlotWidget_C_GetInnerContainerVisibility) == 0x000028, "Wrong size on ItemSlotWidget_C_GetInnerContainerVisibility");
static_assert(offsetof(ItemSlotWidget_C_GetInnerContainerVisibility, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_GetInnerContainerVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetInnerContainerVisibility, m__bool_Variable) == 0x000001, "Member 'ItemSlotWidget_C_GetInnerContainerVisibility::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetInnerContainerVisibility, m__byte_Variable) == 0x000002, "Member 'ItemSlotWidget_C_GetInnerContainerVisibility::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetInnerContainerVisibility, m__byte_Variable2) == 0x000003, "Member 'ItemSlotWidget_C_GetInnerContainerVisibility::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetInnerContainerVisibility, CallFunc_GetOwningTslCharacter_ReturnValue) == 0x000008, "Member 'ItemSlotWidget_C_GetInnerContainerVisibility::CallFunc_GetOwningTslCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetInnerContainerVisibility, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ItemSlotWidget_C_GetInnerContainerVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetInnerContainerVisibility, CallFunc_IsPackageItem_ReturnValue) == 0x000011, "Member 'ItemSlotWidget_C_GetInnerContainerVisibility::CallFunc_IsPackageItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetInnerContainerVisibility, K2Node_DynamicCast_AsItem_Package) == 0x000018, "Member 'ItemSlotWidget_C_GetInnerContainerVisibility::K2Node_DynamicCast_AsItem_Package' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetInnerContainerVisibility, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ItemSlotWidget_C_GetInnerContainerVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetInnerContainerVisibility, CallFunc_IsOpenedBy_ReturnValue) == 0x000021, "Member 'ItemSlotWidget_C_GetInnerContainerVisibility::CallFunc_IsOpenedBy_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetInnerContainerVisibility, K2Node_Select_Default) == 0x000022, "Member 'ItemSlotWidget_C_GetInnerContainerVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.Refresh
// 0x0020 (0x0020 - 0x0000)
struct ItemSlotWidget_C_Refresh final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class AItemExplorer*                          K2Node_DynamicCast_AsItem_Explorer;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_Refresh) == 0x000008, "Wrong alignment on ItemSlotWidget_C_Refresh");
static_assert(sizeof(ItemSlotWidget_C_Refresh) == 0x000020, "Wrong size on ItemSlotWidget_C_Refresh");
static_assert(offsetof(ItemSlotWidget_C_Refresh, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'ItemSlotWidget_C_Refresh::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_Refresh, K2Node_DynamicCast_AsItem_Explorer) == 0x000010, "Member 'ItemSlotWidget_C_Refresh::K2Node_DynamicCast_AsItem_Explorer' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_Refresh, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ItemSlotWidget_C_Refresh::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetContentCount
// 0x0038 (0x0038 - 0x0000)
struct ItemSlotWidget_C_GetContentCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Variable;                                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Variable2;                                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetInnerContainerVisibility_ReturnValue;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetContentCount_Count;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetContentCount) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetContentCount");
static_assert(sizeof(ItemSlotWidget_C_GetContentCount) == 0x000038, "Wrong size on ItemSlotWidget_C_GetContentCount");
static_assert(offsetof(ItemSlotWidget_C_GetContentCount, Count) == 0x000000, "Member 'ItemSlotWidget_C_GetContentCount::Count' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetContentCount, m__bool_Variable) == 0x000004, "Member 'ItemSlotWidget_C_GetContentCount::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetContentCount, m__int_Variable) == 0x000008, "Member 'ItemSlotWidget_C_GetContentCount::m__int_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetContentCount, m__int_Variable2) == 0x00000C, "Member 'ItemSlotWidget_C_GetContentCount::m__int_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetContentCount, CallFunc_GetInnerContainerVisibility_ReturnValue) == 0x000010, "Member 'ItemSlotWidget_C_GetContentCount::CallFunc_GetInnerContainerVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetContentCount, CallFunc_GetContentCount_Count) == 0x000014, "Member 'ItemSlotWidget_C_GetContentCount::CallFunc_GetContentCount_Count' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetContentCount, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'ItemSlotWidget_C_GetContentCount::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetContentCount, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000020, "Member 'ItemSlotWidget_C_GetContentCount::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetContentCount, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'ItemSlotWidget_C_GetContentCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetContentCount, K2Node_Select_Default) == 0x00002C, "Member 'ItemSlotWidget_C_GetContentCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetContentCount, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'ItemSlotWidget_C_GetContentCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.OnMouseButtonDown
// 0x0698 (0x0698 - 0x0000)
struct ItemSlotWidget_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00A8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsCharacterCasting_IsCasting;             // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15B[0x5];                                      // 0x015B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_DetectDragIfPressed_ReturnValue;          // 0x0160(0x00A8)()
	bool                                          CallFunc_IsStackable_ReturnValue;                  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStackCount_ReturnValue;                // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0210(0x00A8)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BB[0x5];                                      // 0x02BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPopupButtonID ButtonID)>      K2Node_CreateDelegate_OutputDelegate;              // 0x02C0(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x02D8(0x00A8)()
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslHUD*                                K2Node_DynamicCast_AsTsl_HUD;                      // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UStackCountHandlingPopupWidget_C*       K2Node_DynamicCast_AsStack_Count_Handling_Popup_Widget; // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue2;                   // 0x03B0(0x00A8)()
	int32                                         CallFunc_GetMaxCount_ReturnValue;                  // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0460(0x0018)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue2;             // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue3;                   // 0x0480(0x00A8)()
	class ATslPlayerController*                   K2Node_DynamicCast_AsTsl_Player_Controller;        // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsItemStackCountHandlingMode_ReturnValue; // 0x0531(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_532[0x6];                                      // 0x0532(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue2;                     // 0x0538(0x00A8)()
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue4;                   // 0x05E8(0x00A8)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDraggable_Result;                       // 0x0691(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on ItemSlotWidget_C_OnMouseButtonDown");
static_assert(sizeof(ItemSlotWidget_C_OnMouseButtonDown) == 0x000698, "Wrong size on ItemSlotWidget_C_OnMouseButtonDown");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'ItemSlotWidget_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'ItemSlotWidget_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'ItemSlotWidget_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_IsCharacterCasting_IsCasting) == 0x000158, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_IsCharacterCasting_IsCasting' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000159, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_Not_PreBool_ReturnValue) == 0x00015A, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_DetectDragIfPressed_ReturnValue) == 0x000160, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_DetectDragIfPressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_IsStackable_ReturnValue) == 0x000208, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_IsStackable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_GetStackCount_ReturnValue) == 0x00020C, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_GetStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x000210, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_Greater_IntInt_ReturnValue) == 0x0002B8, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_BooleanAND_ReturnValue) == 0x0002B9, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_BooleanAND_ReturnValue2) == 0x0002BA, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, K2Node_CreateDelegate_OutputDelegate) == 0x0002C0, "Member 'ItemSlotWidget_C_OnMouseButtonDown::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_GetOwningPlayer_ReturnValue) == 0x0002D0, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x0002D8, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_GetHUD_ReturnValue) == 0x000380, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, K2Node_DynamicCast_AsTsl_HUD) == 0x000388, "Member 'ItemSlotWidget_C_OnMouseButtonDown::K2Node_DynamicCast_AsTsl_HUD' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, K2Node_DynamicCast_bSuccess) == 0x000390, "Member 'ItemSlotWidget_C_OnMouseButtonDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_GetWidget_ReturnValue) == 0x000398, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, K2Node_DynamicCast_AsStack_Count_Handling_Popup_Widget) == 0x0003A0, "Member 'ItemSlotWidget_C_OnMouseButtonDown::K2Node_DynamicCast_AsStack_Count_Handling_Popup_Widget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, K2Node_DynamicCast_bSuccess2) == 0x0003A8, "Member 'ItemSlotWidget_C_OnMouseButtonDown::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_Unhandled_ReturnValue2) == 0x0003B0, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_Unhandled_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_GetMaxCount_ReturnValue) == 0x000458, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_GetMaxCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_Conv_IntToText_ReturnValue) == 0x000460, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_GetOwningPlayer_ReturnValue2) == 0x000478, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_GetOwningPlayer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_Unhandled_ReturnValue3) == 0x000480, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_Unhandled_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, K2Node_DynamicCast_AsTsl_Player_Controller) == 0x000528, "Member 'ItemSlotWidget_C_OnMouseButtonDown::K2Node_DynamicCast_AsTsl_Player_Controller' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, K2Node_DynamicCast_bSuccess3) == 0x000530, "Member 'ItemSlotWidget_C_OnMouseButtonDown::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_IsItemStackCountHandlingMode_ReturnValue) == 0x000531, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_IsItemStackCountHandlingMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue2) == 0x000538, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x0005E0, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_Unhandled_ReturnValue4) == 0x0005E8, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_Unhandled_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_IsValid_ReturnValue) == 0x000690, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnMouseButtonDown, CallFunc_IsDraggable_Result) == 0x000691, "Member 'ItemSlotWidget_C_OnMouseButtonDown::CallFunc_IsDraggable_Result' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.OnDragDetected
// 0x00D8 (0x00D8 - 0x0000)
struct ItemSlotWidget_C_OnDragDetected final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(ConstParm, Parm, OutParm, ReferenceParm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTslItemDragDropOperation_C*            CallFunc_CreateTslDragDropOperation_OutOperation;  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x00C8(0x0010)(ZeroConstructor)
};
static_assert(alignof(ItemSlotWidget_C_OnDragDetected) == 0x000008, "Wrong alignment on ItemSlotWidget_C_OnDragDetected");
static_assert(sizeof(ItemSlotWidget_C_OnDragDetected) == 0x0000D8, "Wrong size on ItemSlotWidget_C_OnDragDetected");
static_assert(offsetof(ItemSlotWidget_C_OnDragDetected, MyGeometry) == 0x000000, "Member 'ItemSlotWidget_C_OnDragDetected::MyGeometry' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnDragDetected, PointerEvent) == 0x000038, "Member 'ItemSlotWidget_C_OnDragDetected::PointerEvent' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnDragDetected, Operation) == 0x0000B0, "Member 'ItemSlotWidget_C_OnDragDetected::Operation' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnDragDetected, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x0000B8, "Member 'ItemSlotWidget_C_OnDragDetected::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnDragDetected, CallFunc_CreateTslDragDropOperation_OutOperation) == 0x0000C0, "Member 'ItemSlotWidget_C_OnDragDetected::CallFunc_CreateTslDragDropOperation_OutOperation' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_OnDragDetected, CallFunc_Conv_FloatToString_ReturnValue) == 0x0000C8, "Member 'ItemSlotWidget_C_OnDragDetected::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.IsDraggable
// 0x0018 (0x0018 - 0x0000)
struct ItemSlotWidget_C_IsDraggable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCharacterCasting_IsCasting;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemPackage*                           K2Node_DynamicCast_AsItem_Package;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_IsDraggable) == 0x000008, "Wrong alignment on ItemSlotWidget_C_IsDraggable");
static_assert(sizeof(ItemSlotWidget_C_IsDraggable) == 0x000018, "Wrong size on ItemSlotWidget_C_IsDraggable");
static_assert(offsetof(ItemSlotWidget_C_IsDraggable, Result) == 0x000000, "Member 'ItemSlotWidget_C_IsDraggable::Result' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsDraggable, CallFunc_IsCharacterCasting_IsCasting) == 0x000001, "Member 'ItemSlotWidget_C_IsDraggable::CallFunc_IsCharacterCasting_IsCasting' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsDraggable, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'ItemSlotWidget_C_IsDraggable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsDraggable, K2Node_DynamicCast_AsItem_Package) == 0x000008, "Member 'ItemSlotWidget_C_IsDraggable::K2Node_DynamicCast_AsItem_Package' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsDraggable, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ItemSlotWidget_C_IsDraggable::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetOpenButtonVisibility
// 0x0050 (0x0050 - 0x0000)
struct ItemSlotWidget_C_GetOpenButtonVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FName                                   m__name_Variable;                                  // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FName>                           CallFunc_GetAvailableSlotActions_ReturnValue;      // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue2;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetOpenButtonVisibility) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetOpenButtonVisibility");
static_assert(sizeof(ItemSlotWidget_C_GetOpenButtonVisibility) == 0x000050, "Wrong size on ItemSlotWidget_C_GetOpenButtonVisibility");
static_assert(offsetof(ItemSlotWidget_C_GetOpenButtonVisibility, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_GetOpenButtonVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOpenButtonVisibility, m__byte_Variable) == 0x000001, "Member 'ItemSlotWidget_C_GetOpenButtonVisibility::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOpenButtonVisibility, m__name_Variable) == 0x000008, "Member 'ItemSlotWidget_C_GetOpenButtonVisibility::m__name_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOpenButtonVisibility, m__bool_Variable) == 0x000010, "Member 'ItemSlotWidget_C_GetOpenButtonVisibility::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOpenButtonVisibility, m__byte_Variable2) == 0x000011, "Member 'ItemSlotWidget_C_GetOpenButtonVisibility::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOpenButtonVisibility, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000018, "Member 'ItemSlotWidget_C_GetOpenButtonVisibility::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOpenButtonVisibility, CallFunc_GetAvailableSlotActions_ReturnValue) == 0x000020, "Member 'ItemSlotWidget_C_GetOpenButtonVisibility::CallFunc_GetAvailableSlotActions_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOpenButtonVisibility, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'ItemSlotWidget_C_GetOpenButtonVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOpenButtonVisibility, CallFunc_Array_Find_ReturnValue) == 0x000034, "Member 'ItemSlotWidget_C_GetOpenButtonVisibility::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOpenButtonVisibility, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'ItemSlotWidget_C_GetOpenButtonVisibility::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOpenButtonVisibility, CallFunc_Conv_InterfaceToObject_ReturnValue2) == 0x000040, "Member 'ItemSlotWidget_C_GetOpenButtonVisibility::CallFunc_Conv_InterfaceToObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOpenButtonVisibility, CallFunc_IsValid_ReturnValue2) == 0x000048, "Member 'ItemSlotWidget_C_GetOpenButtonVisibility::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOpenButtonVisibility, K2Node_Select_Default) == 0x000049, "Member 'ItemSlotWidget_C_GetOpenButtonVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.CreateTslDragDropOperation
// 0x0068 (0x0068 - 0x0000)
struct ItemSlotWidget_C_CreateTslDragDropOperation final
{
public:
	class UTslItemDragDropOperation_C*            OutOperation;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragWidget_C*                   CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragDropOperation_C*            CallFunc_CreateDragDropOperation_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UItem*                                  CallFunc_GetOperationSpawnValue_Item;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UEquipableItem*                         CallFunc_GetOperationSpawnValue_EquipableItem;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponItem*                            CallFunc_GetOperationSpawnValue_WeaponItem;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UThrowableItem*                         CallFunc_GetOperationSpawnValue_ThrowableItem;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAttachableItem*                        CallFunc_GetOperationSpawnValue_AttachmentItem;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        CallFunc_GetOperationSpawnValue_SlotItem;          // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_GetOperationSpawnValue_Container;         // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragDropOperation_C*            Operation;                                         // 0x0060(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_CreateTslDragDropOperation) == 0x000008, "Wrong alignment on ItemSlotWidget_C_CreateTslDragDropOperation");
static_assert(sizeof(ItemSlotWidget_C_CreateTslDragDropOperation) == 0x000068, "Wrong size on ItemSlotWidget_C_CreateTslDragDropOperation");
static_assert(offsetof(ItemSlotWidget_C_CreateTslDragDropOperation, OutOperation) == 0x000000, "Member 'ItemSlotWidget_C_CreateTslDragDropOperation::OutOperation' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_CreateTslDragDropOperation, CallFunc_Create_ReturnValue) == 0x000008, "Member 'ItemSlotWidget_C_CreateTslDragDropOperation::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_CreateTslDragDropOperation, CallFunc_CreateDragDropOperation_ReturnValue) == 0x000010, "Member 'ItemSlotWidget_C_CreateTslDragDropOperation::CallFunc_CreateDragDropOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_CreateTslDragDropOperation, CallFunc_GetOperationSpawnValue_Item) == 0x000018, "Member 'ItemSlotWidget_C_CreateTslDragDropOperation::CallFunc_GetOperationSpawnValue_Item' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_CreateTslDragDropOperation, CallFunc_GetOperationSpawnValue_EquipableItem) == 0x000020, "Member 'ItemSlotWidget_C_CreateTslDragDropOperation::CallFunc_GetOperationSpawnValue_EquipableItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_CreateTslDragDropOperation, CallFunc_GetOperationSpawnValue_WeaponItem) == 0x000028, "Member 'ItemSlotWidget_C_CreateTslDragDropOperation::CallFunc_GetOperationSpawnValue_WeaponItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_CreateTslDragDropOperation, CallFunc_GetOperationSpawnValue_ThrowableItem) == 0x000030, "Member 'ItemSlotWidget_C_CreateTslDragDropOperation::CallFunc_GetOperationSpawnValue_ThrowableItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_CreateTslDragDropOperation, CallFunc_GetOperationSpawnValue_AttachmentItem) == 0x000038, "Member 'ItemSlotWidget_C_CreateTslDragDropOperation::CallFunc_GetOperationSpawnValue_AttachmentItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_CreateTslDragDropOperation, CallFunc_GetOperationSpawnValue_SlotItem) == 0x000040, "Member 'ItemSlotWidget_C_CreateTslDragDropOperation::CallFunc_GetOperationSpawnValue_SlotItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_CreateTslDragDropOperation, CallFunc_GetOperationSpawnValue_Container) == 0x000050, "Member 'ItemSlotWidget_C_CreateTslDragDropOperation::CallFunc_GetOperationSpawnValue_Container' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_CreateTslDragDropOperation, Operation) == 0x000060, "Member 'ItemSlotWidget_C_CreateTslDragDropOperation::Operation' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetItemCount
// 0x0018 (0x0018 - 0x0000)
struct ItemSlotWidget_C_GetItemCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetStackCount_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetItemCount) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetItemCount");
static_assert(sizeof(ItemSlotWidget_C_GetItemCount) == 0x000018, "Wrong size on ItemSlotWidget_C_GetItemCount");
static_assert(offsetof(ItemSlotWidget_C_GetItemCount, Count) == 0x000000, "Member 'ItemSlotWidget_C_GetItemCount::Count' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetItemCount, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000008, "Member 'ItemSlotWidget_C_GetItemCount::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetItemCount, CallFunc_GetStackCount_ReturnValue) == 0x000010, "Member 'ItemSlotWidget_C_GetItemCount::CallFunc_GetStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetItemCount, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'ItemSlotWidget_C_GetItemCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.UpdateSlotName
// 0x0020 (0x0020 - 0x0000)
struct ItemSlotWidget_C_UpdateSlotName final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_GetSlotName_ReturnValue;                  // 0x0008(0x0018)()
};
static_assert(alignof(ItemSlotWidget_C_UpdateSlotName) == 0x000008, "Wrong alignment on ItemSlotWidget_C_UpdateSlotName");
static_assert(sizeof(ItemSlotWidget_C_UpdateSlotName) == 0x000020, "Wrong size on ItemSlotWidget_C_UpdateSlotName");
static_assert(offsetof(ItemSlotWidget_C_UpdateSlotName, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_UpdateSlotName::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateSlotName, CallFunc_GetSlotName_ReturnValue) == 0x000008, "Member 'ItemSlotWidget_C_UpdateSlotName::CallFunc_GetSlotName_ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.UpdateItemIconImage
// 0x0028 (0x0028 - 0x0000)
struct ItemSlotWidget_C_UpdateItemIconImage final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_DynamicMaterial;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CallFunc_GetIconTexture_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_UpdateItemIconImage) == 0x000008, "Wrong alignment on ItemSlotWidget_C_UpdateItemIconImage");
static_assert(sizeof(ItemSlotWidget_C_UpdateItemIconImage) == 0x000028, "Wrong size on ItemSlotWidget_C_UpdateItemIconImage");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemIconImage, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_UpdateItemIconImage::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemIconImage, CallFunc_GetDynamicMaterial_DynamicMaterial) == 0x000008, "Member 'ItemSlotWidget_C_UpdateItemIconImage::CallFunc_GetDynamicMaterial_DynamicMaterial' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemIconImage, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ItemSlotWidget_C_UpdateItemIconImage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemIconImage, CallFunc_GetIconTexture_ReturnValue) == 0x000018, "Member 'ItemSlotWidget_C_UpdateItemIconImage::CallFunc_GetIconTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemIconImage, CallFunc_IsValid_ReturnValue2) == 0x000020, "Member 'ItemSlotWidget_C_UpdateItemIconImage::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemIconImage, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000021, "Member 'ItemSlotWidget_C_UpdateItemIconImage::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemIconImage, CallFunc_IsValid_ReturnValue3) == 0x000022, "Member 'ItemSlotWidget_C_UpdateItemIconImage::CallFunc_IsValid_ReturnValue3' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.UpdateStackCountText
// 0x0028 (0x0028 - 0x0000)
struct ItemSlotWidget_C_UpdateStackCountText final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetItemCount_Count;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
};
static_assert(alignof(ItemSlotWidget_C_UpdateStackCountText) == 0x000008, "Wrong alignment on ItemSlotWidget_C_UpdateStackCountText");
static_assert(sizeof(ItemSlotWidget_C_UpdateStackCountText) == 0x000028, "Wrong size on ItemSlotWidget_C_UpdateStackCountText");
static_assert(offsetof(ItemSlotWidget_C_UpdateStackCountText, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_UpdateStackCountText::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateStackCountText, CallFunc_GetItemCount_Count) == 0x000008, "Member 'ItemSlotWidget_C_UpdateStackCountText::CallFunc_GetItemCount_Count' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateStackCountText, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'ItemSlotWidget_C_UpdateStackCountText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.UpdateItemVisibility
// 0x0020 (0x0020 - 0x0000)
struct ItemSlotWidget_C_UpdateItemVisibility final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_UpdateItemVisibility) == 0x000008, "Wrong alignment on ItemSlotWidget_C_UpdateItemVisibility");
static_assert(sizeof(ItemSlotWidget_C_UpdateItemVisibility) == 0x000020, "Wrong size on ItemSlotWidget_C_UpdateItemVisibility");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemVisibility, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_UpdateItemVisibility::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemVisibility, m__bool_Variable) == 0x000008, "Member 'ItemSlotWidget_C_UpdateItemVisibility::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemVisibility, m__byte_Variable) == 0x000009, "Member 'ItemSlotWidget_C_UpdateItemVisibility::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemVisibility, m__byte_Variable2) == 0x00000A, "Member 'ItemSlotWidget_C_UpdateItemVisibility::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemVisibility, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000010, "Member 'ItemSlotWidget_C_UpdateItemVisibility::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemVisibility, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ItemSlotWidget_C_UpdateItemVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemVisibility, K2Node_Select_Default) == 0x000019, "Member 'ItemSlotWidget_C_UpdateItemVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.UpdateSlot
// 0x0028 (0x0028 - 0x0000)
struct ItemSlotWidget_C_UpdateSlot final
{
public:
	TScriptInterface<class ISlotInterface>        Item_SlotInterface_0;                              // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> SlotContainer_0;                                   // 0x0010(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsPackaged_0;                                     // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSort_0;                                           // 0x0021(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_UpdateSlot) == 0x000008, "Wrong alignment on ItemSlotWidget_C_UpdateSlot");
static_assert(sizeof(ItemSlotWidget_C_UpdateSlot) == 0x000028, "Wrong size on ItemSlotWidget_C_UpdateSlot");
static_assert(offsetof(ItemSlotWidget_C_UpdateSlot, Item_SlotInterface_0) == 0x000000, "Member 'ItemSlotWidget_C_UpdateSlot::Item_SlotInterface_0' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateSlot, SlotContainer_0) == 0x000010, "Member 'ItemSlotWidget_C_UpdateSlot::SlotContainer_0' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateSlot, bIsPackaged_0) == 0x000020, "Member 'ItemSlotWidget_C_UpdateSlot::bIsPackaged_0' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateSlot, bSort_0) == 0x000021, "Member 'ItemSlotWidget_C_UpdateSlot::bSort_0' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.UpdateButtonIconIndex
// 0x0008 (0x0008 - 0x0000)
struct ItemSlotWidget_C_UpdateButtonIconIndex final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_UpdateButtonIconIndex) == 0x000008, "Wrong alignment on ItemSlotWidget_C_UpdateButtonIconIndex");
static_assert(sizeof(ItemSlotWidget_C_UpdateButtonIconIndex) == 0x000008, "Wrong size on ItemSlotWidget_C_UpdateButtonIconIndex");
static_assert(offsetof(ItemSlotWidget_C_UpdateButtonIconIndex, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_UpdateButtonIconIndex::BoundWidget' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.UpdateUseText
// 0x0098 (0x0098 - 0x0000)
struct ItemSlotWidget_C_UpdateUseText final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m__text_Variable;                                  // 0x0010(0x0018)()
	class FText                                   m__text_Variable2;                                 // 0x0028(0x0018)()
	bool                                          m__bool_Variable2;                                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m__text_Variable3;                                 // 0x0048(0x0018)()
	bool                                          CallFunc_IsAttachment_ReturnValue;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWeapon_ReturnValue;                     // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipable_ReturnValue;                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0068(0x0018)()
	class FText                                   K2Node_Select2_Default;                            // 0x0080(0x0018)()
};
static_assert(alignof(ItemSlotWidget_C_UpdateUseText) == 0x000008, "Wrong alignment on ItemSlotWidget_C_UpdateUseText");
static_assert(sizeof(ItemSlotWidget_C_UpdateUseText) == 0x000098, "Wrong size on ItemSlotWidget_C_UpdateUseText");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseText, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_UpdateUseText::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseText, m__bool_Variable) == 0x000008, "Member 'ItemSlotWidget_C_UpdateUseText::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseText, m__text_Variable) == 0x000010, "Member 'ItemSlotWidget_C_UpdateUseText::m__text_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseText, m__text_Variable2) == 0x000028, "Member 'ItemSlotWidget_C_UpdateUseText::m__text_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseText, m__bool_Variable2) == 0x000040, "Member 'ItemSlotWidget_C_UpdateUseText::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseText, m__text_Variable3) == 0x000048, "Member 'ItemSlotWidget_C_UpdateUseText::m__text_Variable3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseText, CallFunc_IsAttachment_ReturnValue) == 0x000060, "Member 'ItemSlotWidget_C_UpdateUseText::CallFunc_IsAttachment_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseText, CallFunc_IsWeapon_ReturnValue) == 0x000061, "Member 'ItemSlotWidget_C_UpdateUseText::CallFunc_IsWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseText, CallFunc_IsEquipable_ReturnValue) == 0x000062, "Member 'ItemSlotWidget_C_UpdateUseText::CallFunc_IsEquipable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseText, CallFunc_BooleanOR_ReturnValue) == 0x000063, "Member 'ItemSlotWidget_C_UpdateUseText::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseText, K2Node_Select_Default) == 0x000068, "Member 'ItemSlotWidget_C_UpdateUseText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseText, K2Node_Select2_Default) == 0x000080, "Member 'ItemSlotWidget_C_UpdateUseText::K2Node_Select2_Default' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.UpdateIconSizeRatio
// 0x0010 (0x0010 - 0x0000)
struct ItemSlotWidget_C_UpdateIconSizeRatio final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetIconSizeRatio_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_UpdateIconSizeRatio) == 0x000008, "Wrong alignment on ItemSlotWidget_C_UpdateIconSizeRatio");
static_assert(sizeof(ItemSlotWidget_C_UpdateIconSizeRatio) == 0x000010, "Wrong size on ItemSlotWidget_C_UpdateIconSizeRatio");
static_assert(offsetof(ItemSlotWidget_C_UpdateIconSizeRatio, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_UpdateIconSizeRatio::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateIconSizeRatio, CallFunc_GetIconSizeRatio_ReturnValue) == 0x000008, "Member 'ItemSlotWidget_C_UpdateIconSizeRatio::CallFunc_GetIconSizeRatio_ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.On_Brackground_Prepass_0
// 0x0058 (0x0058 - 0x0000)
struct ItemSlotWidget_C_On_Brackground_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 K2Node_DynamicCast_AsImage;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               m__object_Variable;                                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture*                               m__object_Variable2;                               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_On_Brackground_Prepass_0) == 0x000008, "Wrong alignment on ItemSlotWidget_C_On_Brackground_Prepass_0");
static_assert(sizeof(ItemSlotWidget_C_On_Brackground_Prepass_0) == 0x000058, "Wrong size on ItemSlotWidget_C_On_Brackground_Prepass_0");
static_assert(offsetof(ItemSlotWidget_C_On_Brackground_Prepass_0, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_On_Brackground_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_Brackground_Prepass_0, m__bool_Variable) == 0x000008, "Member 'ItemSlotWidget_C_On_Brackground_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_Brackground_Prepass_0, K2Node_DynamicCast_AsImage) == 0x000010, "Member 'ItemSlotWidget_C_On_Brackground_Prepass_0::K2Node_DynamicCast_AsImage' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_Brackground_Prepass_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ItemSlotWidget_C_On_Brackground_Prepass_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_Brackground_Prepass_0, m__object_Variable) == 0x000020, "Member 'ItemSlotWidget_C_On_Brackground_Prepass_0::m__object_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_Brackground_Prepass_0, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'ItemSlotWidget_C_On_Brackground_Prepass_0::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_Brackground_Prepass_0, m__object_Variable2) == 0x000030, "Member 'ItemSlotWidget_C_On_Brackground_Prepass_0::m__object_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_Brackground_Prepass_0, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'ItemSlotWidget_C_On_Brackground_Prepass_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_Brackground_Prepass_0, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000040, "Member 'ItemSlotWidget_C_On_Brackground_Prepass_0::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_Brackground_Prepass_0, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'ItemSlotWidget_C_On_Brackground_Prepass_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_Brackground_Prepass_0, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'ItemSlotWidget_C_On_Brackground_Prepass_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_Brackground_Prepass_0, CallFunc_IsValid_ReturnValue2) == 0x00004A, "Member 'ItemSlotWidget_C_On_Brackground_Prepass_0::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_Brackground_Prepass_0, CallFunc_BooleanAND_ReturnValue2) == 0x00004B, "Member 'ItemSlotWidget_C_On_Brackground_Prepass_0::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_Brackground_Prepass_0, K2Node_Select_Default) == 0x000050, "Member 'ItemSlotWidget_C_On_Brackground_Prepass_0::K2Node_Select_Default' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.DialogButtonDown
// 0x0001 (0x0001 - 0x0000)
struct ItemSlotWidget_C_DialogButtonDown final
{
public:
	EPopupButtonID                                ButtonID;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_DialogButtonDown) == 0x000001, "Wrong alignment on ItemSlotWidget_C_DialogButtonDown");
static_assert(sizeof(ItemSlotWidget_C_DialogButtonDown) == 0x000001, "Wrong size on ItemSlotWidget_C_DialogButtonDown");
static_assert(offsetof(ItemSlotWidget_C_DialogButtonDown, ButtonID) == 0x000000, "Member 'ItemSlotWidget_C_DialogButtonDown::ButtonID' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.UpdateStackCountVisibility
// 0x0010 (0x0010 - 0x0000)
struct ItemSlotWidget_C_UpdateStackCountVisibility final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStackable_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_UpdateStackCountVisibility) == 0x000008, "Wrong alignment on ItemSlotWidget_C_UpdateStackCountVisibility");
static_assert(sizeof(ItemSlotWidget_C_UpdateStackCountVisibility) == 0x000010, "Wrong size on ItemSlotWidget_C_UpdateStackCountVisibility");
static_assert(offsetof(ItemSlotWidget_C_UpdateStackCountVisibility, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_UpdateStackCountVisibility::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateStackCountVisibility, m__bool_Variable) == 0x000008, "Member 'ItemSlotWidget_C_UpdateStackCountVisibility::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateStackCountVisibility, m__byte_Variable) == 0x000009, "Member 'ItemSlotWidget_C_UpdateStackCountVisibility::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateStackCountVisibility, m__byte_Variable2) == 0x00000A, "Member 'ItemSlotWidget_C_UpdateStackCountVisibility::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateStackCountVisibility, CallFunc_IsStackable_ReturnValue) == 0x00000B, "Member 'ItemSlotWidget_C_UpdateStackCountVisibility::CallFunc_IsStackable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateStackCountVisibility, K2Node_Select_Default) == 0x00000C, "Member 'ItemSlotWidget_C_UpdateStackCountVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.UpdateUseButtonVisibility
// 0x0030 (0x0030 - 0x0000)
struct ItemSlotWidget_C_UpdateUseButtonVisibility final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         m__float_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m__float_Variable2;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCasting_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue2;          // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetUseButtonVisibility_ReturnValue;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              NewUseButtonVisibility;                            // 0x002B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_UpdateUseButtonVisibility) == 0x000008, "Wrong alignment on ItemSlotWidget_C_UpdateUseButtonVisibility");
static_assert(sizeof(ItemSlotWidget_C_UpdateUseButtonVisibility) == 0x000030, "Wrong size on ItemSlotWidget_C_UpdateUseButtonVisibility");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, m__float_Variable) == 0x000008, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::m__float_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, CallFunc_IsVisible_ReturnValue) == 0x00000C, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000D, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, m__float_Variable2) == 0x000010, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::m__float_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, CallFunc_IsCasting_ReturnValue) == 0x000014, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::CallFunc_IsCasting_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000015, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, CallFunc_IsValid_ReturnValue) == 0x000016, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, K2Node_SwitchEnum_CmpSuccess) == 0x000017, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, m__bool_Variable) == 0x000018, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, K2Node_Select_Default) == 0x00001C, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, CallFunc_Not_PreBool_ReturnValue2) == 0x000020, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, CallFunc_IsValid_ReturnValue2) == 0x000021, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, CallFunc_IsValid_ReturnValue3) == 0x000022, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000023, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, CallFunc_Not_PreBool_ReturnValue3) == 0x000024, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, CallFunc_IsAnimationPlaying_ReturnValue2) == 0x000026, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::CallFunc_IsAnimationPlaying_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, CallFunc_Not_PreBool_ReturnValue4) == 0x000027, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, CallFunc_BooleanAND_ReturnValue2) == 0x000028, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, CallFunc_GetUseButtonVisibility_ReturnValue) == 0x000029, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::CallFunc_GetUseButtonVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, CallFunc_BooleanAND_ReturnValue3) == 0x00002A, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateUseButtonVisibility, NewUseButtonVisibility) == 0x00002B, "Member 'ItemSlotWidget_C_UpdateUseButtonVisibility::NewUseButtonVisibility' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.UpdateEquipableIconVisibility
// 0x0010 (0x0010 - 0x0000)
struct ItemSlotWidget_C_UpdateEquipableIconVisibility final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipable_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_UpdateEquipableIconVisibility) == 0x000008, "Wrong alignment on ItemSlotWidget_C_UpdateEquipableIconVisibility");
static_assert(sizeof(ItemSlotWidget_C_UpdateEquipableIconVisibility) == 0x000010, "Wrong size on ItemSlotWidget_C_UpdateEquipableIconVisibility");
static_assert(offsetof(ItemSlotWidget_C_UpdateEquipableIconVisibility, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_UpdateEquipableIconVisibility::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateEquipableIconVisibility, m__bool_Variable) == 0x000008, "Member 'ItemSlotWidget_C_UpdateEquipableIconVisibility::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateEquipableIconVisibility, m__byte_Variable) == 0x000009, "Member 'ItemSlotWidget_C_UpdateEquipableIconVisibility::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateEquipableIconVisibility, m__byte_Variable2) == 0x00000A, "Member 'ItemSlotWidget_C_UpdateEquipableIconVisibility::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateEquipableIconVisibility, CallFunc_IsEquipable_ReturnValue) == 0x00000B, "Member 'ItemSlotWidget_C_UpdateEquipableIconVisibility::CallFunc_IsEquipable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateEquipableIconVisibility, K2Node_Select_Default) == 0x00000C, "Member 'ItemSlotWidget_C_UpdateEquipableIconVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.UpdateOpenButtonVisibility
// 0x0010 (0x0010 - 0x0000)
struct ItemSlotWidget_C_UpdateOpenButtonVisibility final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetOpenButtonVisibility_ReturnValue;      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_UpdateOpenButtonVisibility) == 0x000008, "Wrong alignment on ItemSlotWidget_C_UpdateOpenButtonVisibility");
static_assert(sizeof(ItemSlotWidget_C_UpdateOpenButtonVisibility) == 0x000010, "Wrong size on ItemSlotWidget_C_UpdateOpenButtonVisibility");
static_assert(offsetof(ItemSlotWidget_C_UpdateOpenButtonVisibility, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_UpdateOpenButtonVisibility::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateOpenButtonVisibility, m__bool_Variable) == 0x000008, "Member 'ItemSlotWidget_C_UpdateOpenButtonVisibility::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateOpenButtonVisibility, m__byte_Variable) == 0x000009, "Member 'ItemSlotWidget_C_UpdateOpenButtonVisibility::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateOpenButtonVisibility, CallFunc_GetOpenButtonVisibility_ReturnValue) == 0x00000A, "Member 'ItemSlotWidget_C_UpdateOpenButtonVisibility::CallFunc_GetOpenButtonVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateOpenButtonVisibility, K2Node_Select_Default) == 0x00000B, "Member 'ItemSlotWidget_C_UpdateOpenButtonVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.UpdateInnerItemSlotListVisibility
// 0x0010 (0x0010 - 0x0000)
struct ItemSlotWidget_C_UpdateInnerItemSlotListVisibility final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetInnerContainerVisibility_ReturnValue;  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_UpdateInnerItemSlotListVisibility) == 0x000008, "Wrong alignment on ItemSlotWidget_C_UpdateInnerItemSlotListVisibility");
static_assert(sizeof(ItemSlotWidget_C_UpdateInnerItemSlotListVisibility) == 0x000010, "Wrong size on ItemSlotWidget_C_UpdateInnerItemSlotListVisibility");
static_assert(offsetof(ItemSlotWidget_C_UpdateInnerItemSlotListVisibility, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_UpdateInnerItemSlotListVisibility::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateInnerItemSlotListVisibility, CallFunc_GetInnerContainerVisibility_ReturnValue) == 0x000008, "Member 'ItemSlotWidget_C_UpdateInnerItemSlotListVisibility::CallFunc_GetInnerContainerVisibility_ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.UpdateItemIfoVisibility
// 0x0010 (0x0010 - 0x0000)
struct ItemSlotWidget_C_UpdateItemIfoVisibility final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetInnerContainerVisibility_ReturnValue;  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_UpdateItemIfoVisibility) == 0x000008, "Wrong alignment on ItemSlotWidget_C_UpdateItemIfoVisibility");
static_assert(sizeof(ItemSlotWidget_C_UpdateItemIfoVisibility) == 0x000010, "Wrong size on ItemSlotWidget_C_UpdateItemIfoVisibility");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemIfoVisibility, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_UpdateItemIfoVisibility::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemIfoVisibility, m__bool_Variable) == 0x000008, "Member 'ItemSlotWidget_C_UpdateItemIfoVisibility::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemIfoVisibility, m__byte_Variable) == 0x000009, "Member 'ItemSlotWidget_C_UpdateItemIfoVisibility::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemIfoVisibility, m__byte_Variable2) == 0x00000A, "Member 'ItemSlotWidget_C_UpdateItemIfoVisibility::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemIfoVisibility, CallFunc_GetInnerContainerVisibility_ReturnValue) == 0x00000B, "Member 'ItemSlotWidget_C_UpdateItemIfoVisibility::CallFunc_GetInnerContainerVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemIfoVisibility, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'ItemSlotWidget_C_UpdateItemIfoVisibility::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_UpdateItemIfoVisibility, K2Node_Select_Default) == 0x00000D, "Member 'ItemSlotWidget_C_UpdateItemIfoVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetOperationSpawnValue
// 0x0180 (0x0180 - 0x0000)
struct ItemSlotWidget_C_GetOperationSpawnValue final
{
public:
	class UItem*                                  Item;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UEquipableItem*                         EquipableItem_0;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponItem*                            WeaponItem;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UThrowableItem*                         ThrowableItem;                                     // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAttachableItem*                        AttachmentItem;                                    // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        SlotItem;                                          // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> Container;                                         // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotWidgetBaseInterface_C> K2Node_DynamicCast_AsSlot_Widget_Base_Interface;   // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotContainerInterface> CallFunc_GetSlotContainer_SlotContainer;           // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        CallFunc_GetSlotItem_SlotItem;                     // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IDroppedItemInterface> K2Node_DynamicCast_AsDropped_Item_Interface;       // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem*                                  K2Node_DynamicCast_AsItem;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem*                                  CallFunc_GetDroppedItem_ReturnValue;               // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAttachableItem*                        K2Node_DynamicCast_AsAttachable_Item;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttachableItem*                        K2Node_DynamicCast_AsAttachable_Item2;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipableItem*                         K2Node_DynamicCast_AsEquipable_Item;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UThrowableItem*                         K2Node_DynamicCast_AsThrowable_Item;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponItem*                            K2Node_DynamicCast_AsWeapon_Item;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipableItem*                         K2Node_DynamicCast_AsEquipable_Item2;              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UThrowableItem*                         K2Node_DynamicCast_AsThrowable_Item2;              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponItem*                            K2Node_DynamicCast_AsWeapon_Item2;                 // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem*                                  OutItem;                                           // 0x0138(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UEquipableItem*                         OutEquipableItem;                                  // 0x0140(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAttachableItem*                        OutAttachmentItem;                                 // 0x0148(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UThrowableItem*                         OutThrowableItem;                                  // 0x0150(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponItem*                            OutWeaponItem;                                     // 0x0158(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> ContainerInteface;                                 // 0x0160(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        SlotInterface;                                     // 0x0170(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetOperationSpawnValue) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetOperationSpawnValue");
static_assert(sizeof(ItemSlotWidget_C_GetOperationSpawnValue) == 0x000180, "Wrong size on ItemSlotWidget_C_GetOperationSpawnValue");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, Item) == 0x000000, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::Item' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, EquipableItem_0) == 0x000008, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::EquipableItem_0' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, WeaponItem) == 0x000010, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::WeaponItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, ThrowableItem) == 0x000018, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::ThrowableItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, AttachmentItem) == 0x000020, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::AttachmentItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, SlotItem) == 0x000028, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::SlotItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, Container) == 0x000038, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::Container' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_AsSlot_Widget_Base_Interface) == 0x000048, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_AsSlot_Widget_Base_Interface' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, CallFunc_GetSlotContainer_SlotContainer) == 0x000060, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::CallFunc_GetSlotContainer_SlotContainer' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, CallFunc_GetSlotItem_SlotItem) == 0x000070, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::CallFunc_GetSlotItem_SlotItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000080, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_AsDropped_Item_Interface) == 0x000088, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_AsDropped_Item_Interface' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_bSuccess2) == 0x000098, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_AsItem) == 0x0000A0, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_AsItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_bSuccess3) == 0x0000A8, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, CallFunc_GetDroppedItem_ReturnValue) == 0x0000B0, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::CallFunc_GetDroppedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_AsAttachable_Item) == 0x0000B8, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_AsAttachable_Item' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_bSuccess4) == 0x0000C0, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_AsAttachable_Item2) == 0x0000C8, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_AsAttachable_Item2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_bSuccess5) == 0x0000D0, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_AsEquipable_Item) == 0x0000D8, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_AsEquipable_Item' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_bSuccess6) == 0x0000E0, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_AsThrowable_Item) == 0x0000E8, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_AsThrowable_Item' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_bSuccess7) == 0x0000F0, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_AsWeapon_Item) == 0x0000F8, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_AsWeapon_Item' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_bSuccess8) == 0x000100, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_AsEquipable_Item2) == 0x000108, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_AsEquipable_Item2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_bSuccess9) == 0x000110, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_AsThrowable_Item2) == 0x000118, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_AsThrowable_Item2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_bSuccess10) == 0x000120, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_AsWeapon_Item2) == 0x000128, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_AsWeapon_Item2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, K2Node_DynamicCast_bSuccess11) == 0x000130, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, OutItem) == 0x000138, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::OutItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, OutEquipableItem) == 0x000140, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::OutEquipableItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, OutAttachmentItem) == 0x000148, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::OutAttachmentItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, OutThrowableItem) == 0x000150, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::OutThrowableItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, OutWeaponItem) == 0x000158, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::OutWeaponItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, ContainerInteface) == 0x000160, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::ContainerInteface' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetOperationSpawnValue, SlotInterface) == 0x000170, "Member 'ItemSlotWidget_C_GetOperationSpawnValue::SlotInterface' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetToolTipWidget_0
// 0x0048 (0x0048 - 0x0000)
struct ItemSlotWidget_C_GetToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslHUD*                                K2Node_DynamicCast_AsTsl_HUD;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UItemToolTipWidget_Bp_C*                K2Node_DynamicCast_AsItem_Tool_Tip_Widget_Bp;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemToolTipWidget_Bp_C*                NewLocalVar_0;                                     // 0x0040(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetToolTipWidget_0) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetToolTipWidget_0");
static_assert(sizeof(ItemSlotWidget_C_GetToolTipWidget_0) == 0x000048, "Wrong size on ItemSlotWidget_C_GetToolTipWidget_0");
static_assert(offsetof(ItemSlotWidget_C_GetToolTipWidget_0, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_GetToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetToolTipWidget_0, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'ItemSlotWidget_C_GetToolTipWidget_0::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetToolTipWidget_0, CallFunc_GetHUD_ReturnValue) == 0x000010, "Member 'ItemSlotWidget_C_GetToolTipWidget_0::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetToolTipWidget_0, K2Node_DynamicCast_AsTsl_HUD) == 0x000018, "Member 'ItemSlotWidget_C_GetToolTipWidget_0::K2Node_DynamicCast_AsTsl_HUD' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetToolTipWidget_0, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ItemSlotWidget_C_GetToolTipWidget_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetToolTipWidget_0, CallFunc_GetWidget_ReturnValue) == 0x000028, "Member 'ItemSlotWidget_C_GetToolTipWidget_0::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetToolTipWidget_0, K2Node_DynamicCast_AsItem_Tool_Tip_Widget_Bp) == 0x000030, "Member 'ItemSlotWidget_C_GetToolTipWidget_0::K2Node_DynamicCast_AsItem_Tool_Tip_Widget_Bp' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetToolTipWidget_0, K2Node_DynamicCast_bSuccess2) == 0x000038, "Member 'ItemSlotWidget_C_GetToolTipWidget_0::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetToolTipWidget_0, NewLocalVar_0) == 0x000040, "Member 'ItemSlotWidget_C_GetToolTipWidget_0::NewLocalVar_0' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.On_CastingBarLayer_Prepass_0
// 0x00A0 (0x00A0 - 0x0000)
struct ItemSlotWidget_C_On_CastingBarLayer_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         m__float_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         m__float_Variable2;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCastComponent*>                 CallFunc_GetComponentsByClass_ReturnValue;         // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	class UCastComponent*                         CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable2;                                 // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCastableItem_IsCastableItem;            // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_GetSlotName_ReturnValue;                  // 0x0050(0x0018)()
	class UObject*                                CallFunc_GetCastObject_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetElapsedCastTime_ReturnValue;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem*                                  K2Node_DynamicCast_AsItem;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTotalCastTime_ReturnValue;             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue2;          // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0) == 0x000008, "Wrong alignment on ItemSlotWidget_C_On_CastingBarLayer_Prepass_0");
static_assert(sizeof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0) == 0x0000A0, "Wrong size on ItemSlotWidget_C_On_CastingBarLayer_Prepass_0");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, m__bool_Variable) == 0x000008, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_IsVisible_ReturnValue) == 0x000009, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, m__byte_Variable) == 0x00000A, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000B, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, m__float_Variable) == 0x00000C, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::m__float_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, m__float_Variable2) == 0x000010, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::m__float_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, m__byte_Variable2) == 0x000014, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000018, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_GetComponentsByClass_ReturnValue) == 0x000028, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_Array_Get_Item) == 0x000038, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_IsValid_ReturnValue2) == 0x000044, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_Greater_IntInt_ReturnValue) == 0x000045, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, m__bool_Variable2) == 0x000046, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_IsCastableItem_IsCastableItem) == 0x000047, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_IsCastableItem_IsCastableItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, K2Node_Select_Default) == 0x000048, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_IsValid_ReturnValue3) == 0x00004C, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00004D, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_Not_PreBool_ReturnValue) == 0x00004E, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_IsValid_ReturnValue4) == 0x00004F, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_GetSlotName_ReturnValue) == 0x000050, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_GetSlotName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_GetCastObject_ReturnValue) == 0x000068, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_GetCastObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_GetElapsedCastTime_ReturnValue) == 0x000070, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_GetElapsedCastTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, K2Node_DynamicCast_AsItem) == 0x000078, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::K2Node_DynamicCast_AsItem' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_GetTotalCastTime_ReturnValue) == 0x000084, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_GetTotalCastTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_Less_FloatFloat_ReturnValue) == 0x000088, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000089, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_SafeDivide_FloatFloat_ReturnValue) == 0x00008C, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_SafeDivide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x000090, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_BooleanAND_ReturnValue) == 0x000091, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_BooleanAND_ReturnValue2) == 0x000092, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, K2Node_Select2_Default) == 0x000093, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, K2Node_SwitchEnum_CmpSuccess) == 0x000094, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_IsValid_ReturnValue5) == 0x000095, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_IsAnimationPlaying_ReturnValue2) == 0x000096, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_IsAnimationPlaying_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_Not_PreBool_ReturnValue2) == 0x000097, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_BooleanAND_ReturnValue3) == 0x000098, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CastingBarLayer_Prepass_0, CallFunc_BooleanAND_ReturnValue4) == 0x000099, "Member 'ItemSlotWidget_C_On_CastingBarLayer_Prepass_0::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.Get_UseInfo_Text_ColorAndOpacity_0
// 0x0044 (0x0044 - 0x0000)
struct ItemSlotWidget_C_Get_UseInfo_Text_ColorAndOpacity_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           m__struct_Variable;                                // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           m__struct_Variable2;                               // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_Get_UseInfo_Text_ColorAndOpacity_0) == 0x000004, "Wrong alignment on ItemSlotWidget_C_Get_UseInfo_Text_ColorAndOpacity_0");
static_assert(sizeof(ItemSlotWidget_C_Get_UseInfo_Text_ColorAndOpacity_0) == 0x000044, "Wrong size on ItemSlotWidget_C_Get_UseInfo_Text_ColorAndOpacity_0");
static_assert(offsetof(ItemSlotWidget_C_Get_UseInfo_Text_ColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_Get_UseInfo_Text_ColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_Get_UseInfo_Text_ColorAndOpacity_0, m__bool_Variable) == 0x000010, "Member 'ItemSlotWidget_C_Get_UseInfo_Text_ColorAndOpacity_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_Get_UseInfo_Text_ColorAndOpacity_0, m__struct_Variable) == 0x000014, "Member 'ItemSlotWidget_C_Get_UseInfo_Text_ColorAndOpacity_0::m__struct_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_Get_UseInfo_Text_ColorAndOpacity_0, m__struct_Variable2) == 0x000024, "Member 'ItemSlotWidget_C_Get_UseInfo_Text_ColorAndOpacity_0::m__struct_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_Get_UseInfo_Text_ColorAndOpacity_0, K2Node_Select_Default) == 0x000034, "Member 'ItemSlotWidget_C_Get_UseInfo_Text_ColorAndOpacity_0::K2Node_Select_Default' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.isPickupableDropItemSlot
// 0x0068 (0x0068 - 0x0000)
struct ItemSlotWidget_C_isPickupableDropItemSlot final
{
public:
	TScriptInterface<class ISlotInterface>        Target;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          return_value;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStackCount_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AInventory*                             CallFunc_GetInventory_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentSpace_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetMaxSpace_ReturnValue;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetSpace_ReturnValue;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue2;       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_isPickupableDropItemSlot) == 0x000008, "Wrong alignment on ItemSlotWidget_C_isPickupableDropItemSlot");
static_assert(sizeof(ItemSlotWidget_C_isPickupableDropItemSlot) == 0x000068, "Wrong size on ItemSlotWidget_C_isPickupableDropItemSlot");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, Target) == 0x000000, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::Target' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, return_value) == 0x000010, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::return_value' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, CallFunc_GetStackCount_ReturnValue) == 0x000014, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::CallFunc_GetStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000018, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000020, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, CallFunc_GetInventoryFacade_ReturnValue) == 0x000028, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::CallFunc_GetInventoryFacade_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, CallFunc_GetInventory_ReturnValue) == 0x000030, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::CallFunc_GetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, CallFunc_IsValid_ReturnValue2) == 0x000038, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, CallFunc_GetCurrentSpace_ReturnValue) == 0x00003C, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::CallFunc_GetCurrentSpace_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, CallFunc_GetMaxSpace_ReturnValue) == 0x000040, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::CallFunc_GetMaxSpace_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, CallFunc_IsValid_ReturnValue3) == 0x000044, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, CallFunc_GetSpace_ReturnValue) == 0x00004C, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::CallFunc_GetSpace_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, CallFunc_SafeDivide_FloatFloat_ReturnValue) == 0x000050, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::CallFunc_SafeDivide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, CallFunc_SafeDivide_FloatFloat_ReturnValue2) == 0x000054, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::CallFunc_SafeDivide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, CallFunc_FFloor_ReturnValue) == 0x000058, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, CallFunc_Min_ReturnValue) == 0x00005C, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_isPickupableDropItemSlot, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'ItemSlotWidget_C_isPickupableDropItemSlot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.IsAttachableItemSlot
// 0x0068 (0x0068 - 0x0000)
struct ItemSlotWidget_C_IsAttachableItemSlot final
{
public:
	TScriptInterface<class ISlotInterface>        Target;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          return_node;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttachableItem*                        K2Node_DynamicCast_AsAttachable_Item;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Variable;                                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter2; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeaponProcessor*                       CallFunc_GetWeaponProcessor_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AEquipment*                             CallFunc_GetEquipment_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAttachableToWeapon_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_IsAttachableItemSlot) == 0x000008, "Wrong alignment on ItemSlotWidget_C_IsAttachableItemSlot");
static_assert(sizeof(ItemSlotWidget_C_IsAttachableItemSlot) == 0x000068, "Wrong size on ItemSlotWidget_C_IsAttachableItemSlot");
static_assert(offsetof(ItemSlotWidget_C_IsAttachableItemSlot, Target) == 0x000000, "Member 'ItemSlotWidget_C_IsAttachableItemSlot::Target' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsAttachableItemSlot, return_node) == 0x000010, "Member 'ItemSlotWidget_C_IsAttachableItemSlot::return_node' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsAttachableItemSlot, K2Node_DynamicCast_AsAttachable_Item) == 0x000018, "Member 'ItemSlotWidget_C_IsAttachableItemSlot::K2Node_DynamicCast_AsAttachable_Item' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsAttachableItemSlot, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ItemSlotWidget_C_IsAttachableItemSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsAttachableItemSlot, m__int_Variable) == 0x000024, "Member 'ItemSlotWidget_C_IsAttachableItemSlot::m__int_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsAttachableItemSlot, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'ItemSlotWidget_C_IsAttachableItemSlot::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsAttachableItemSlot, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'ItemSlotWidget_C_IsAttachableItemSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsAttachableItemSlot, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000030, "Member 'ItemSlotWidget_C_IsAttachableItemSlot::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsAttachableItemSlot, CallFunc_GetOwningShooterCharacter_ShooterCharacter2) == 0x000038, "Member 'ItemSlotWidget_C_IsAttachableItemSlot::CallFunc_GetOwningShooterCharacter_ShooterCharacter2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsAttachableItemSlot, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'ItemSlotWidget_C_IsAttachableItemSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsAttachableItemSlot, CallFunc_IsValid_ReturnValue2) == 0x000041, "Member 'ItemSlotWidget_C_IsAttachableItemSlot::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsAttachableItemSlot, CallFunc_GetWeaponProcessor_ReturnValue) == 0x000048, "Member 'ItemSlotWidget_C_IsAttachableItemSlot::CallFunc_GetWeaponProcessor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsAttachableItemSlot, CallFunc_GetInventoryFacade_ReturnValue) == 0x000050, "Member 'ItemSlotWidget_C_IsAttachableItemSlot::CallFunc_GetInventoryFacade_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsAttachableItemSlot, CallFunc_GetEquipment_ReturnValue) == 0x000058, "Member 'ItemSlotWidget_C_IsAttachableItemSlot::CallFunc_GetEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsAttachableItemSlot, CallFunc_IsAttachableToWeapon_ReturnValue) == 0x000060, "Member 'ItemSlotWidget_C_IsAttachableItemSlot::CallFunc_IsAttachableToWeapon_ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.IsUsableItemSlot
// 0x0068 (0x0068 - 0x0000)
struct ItemSlotWidget_C_IsUsableItemSlot final
{
public:
	TScriptInterface<class ISlotInterface>        Target;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                m__object_Variable;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ICastableInterface>    K2Node_DynamicCast_AsCastable_Interface;           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        K2Node_DynamicCast_AsLevel_Streaming;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningTslCharacter_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ALevelScriptActor*                      CallFunc_GetLevelScriptActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCastable_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_IsUsableItemSlot) == 0x000008, "Wrong alignment on ItemSlotWidget_C_IsUsableItemSlot");
static_assert(sizeof(ItemSlotWidget_C_IsUsableItemSlot) == 0x000068, "Wrong size on ItemSlotWidget_C_IsUsableItemSlot");
static_assert(offsetof(ItemSlotWidget_C_IsUsableItemSlot, Target) == 0x000000, "Member 'ItemSlotWidget_C_IsUsableItemSlot::Target' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsUsableItemSlot, ReturnValue) == 0x000010, "Member 'ItemSlotWidget_C_IsUsableItemSlot::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsUsableItemSlot, m__object_Variable) == 0x000018, "Member 'ItemSlotWidget_C_IsUsableItemSlot::m__object_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsUsableItemSlot, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000020, "Member 'ItemSlotWidget_C_IsUsableItemSlot::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsUsableItemSlot, K2Node_DynamicCast_AsCastable_Interface) == 0x000028, "Member 'ItemSlotWidget_C_IsUsableItemSlot::K2Node_DynamicCast_AsCastable_Interface' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsUsableItemSlot, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ItemSlotWidget_C_IsUsableItemSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsUsableItemSlot, K2Node_DynamicCast_AsLevel_Streaming) == 0x000040, "Member 'ItemSlotWidget_C_IsUsableItemSlot::K2Node_DynamicCast_AsLevel_Streaming' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsUsableItemSlot, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'ItemSlotWidget_C_IsUsableItemSlot::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsUsableItemSlot, CallFunc_GetOwningTslCharacter_ReturnValue) == 0x000050, "Member 'ItemSlotWidget_C_IsUsableItemSlot::CallFunc_GetOwningTslCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsUsableItemSlot, CallFunc_GetLevelScriptActor_ReturnValue) == 0x000058, "Member 'ItemSlotWidget_C_IsUsableItemSlot::CallFunc_GetLevelScriptActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsUsableItemSlot, CallFunc_IsCastable_ReturnValue) == 0x000060, "Member 'ItemSlotWidget_C_IsUsableItemSlot::CallFunc_IsCastable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsUsableItemSlot, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'ItemSlotWidget_C_IsUsableItemSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsUsableItemSlot, m__bool_Variable) == 0x000062, "Member 'ItemSlotWidget_C_IsUsableItemSlot::m__bool_Variable' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.On_DurabilityBorder_Prepass_0
// 0x0010 (0x0010 - 0x0000)
struct ItemSlotWidget_C_On_DurabilityBorder_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HaveDurability_ReturnValue;               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_On_DurabilityBorder_Prepass_0) == 0x000008, "Wrong alignment on ItemSlotWidget_C_On_DurabilityBorder_Prepass_0");
static_assert(sizeof(ItemSlotWidget_C_On_DurabilityBorder_Prepass_0) == 0x000010, "Wrong size on ItemSlotWidget_C_On_DurabilityBorder_Prepass_0");
static_assert(offsetof(ItemSlotWidget_C_On_DurabilityBorder_Prepass_0, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_On_DurabilityBorder_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_DurabilityBorder_Prepass_0, m__bool_Variable) == 0x000008, "Member 'ItemSlotWidget_C_On_DurabilityBorder_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_DurabilityBorder_Prepass_0, m__byte_Variable) == 0x000009, "Member 'ItemSlotWidget_C_On_DurabilityBorder_Prepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_DurabilityBorder_Prepass_0, m__byte_Variable2) == 0x00000A, "Member 'ItemSlotWidget_C_On_DurabilityBorder_Prepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_DurabilityBorder_Prepass_0, CallFunc_HaveDurability_ReturnValue) == 0x00000B, "Member 'ItemSlotWidget_C_On_DurabilityBorder_Prepass_0::CallFunc_HaveDurability_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_DurabilityBorder_Prepass_0, K2Node_Select_Default) == 0x00000C, "Member 'ItemSlotWidget_C_On_DurabilityBorder_Prepass_0::K2Node_Select_Default' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.On_DurabilityGauge_Prepass_0
// 0x0020 (0x0020 - 0x0000)
struct ItemSlotWidget_C_On_DurabilityGauge_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_DynamicMaterial;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetDurabilityRatio_ReturnValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_On_DurabilityGauge_Prepass_0) == 0x000008, "Wrong alignment on ItemSlotWidget_C_On_DurabilityGauge_Prepass_0");
static_assert(sizeof(ItemSlotWidget_C_On_DurabilityGauge_Prepass_0) == 0x000020, "Wrong size on ItemSlotWidget_C_On_DurabilityGauge_Prepass_0");
static_assert(offsetof(ItemSlotWidget_C_On_DurabilityGauge_Prepass_0, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_On_DurabilityGauge_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_DurabilityGauge_Prepass_0, CallFunc_GetDynamicMaterial_DynamicMaterial) == 0x000008, "Member 'ItemSlotWidget_C_On_DurabilityGauge_Prepass_0::CallFunc_GetDynamicMaterial_DynamicMaterial' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_DurabilityGauge_Prepass_0, CallFunc_GetDurabilityRatio_ReturnValue) == 0x000010, "Member 'ItemSlotWidget_C_On_DurabilityGauge_Prepass_0::CallFunc_GetDurabilityRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_DurabilityGauge_Prepass_0, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'ItemSlotWidget_C_On_DurabilityGauge_Prepass_0::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_DurabilityGauge_Prepass_0, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ItemSlotWidget_C_On_DurabilityGauge_Prepass_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_DurabilityGauge_Prepass_0, CallFunc_IsValid_ReturnValue2) == 0x000019, "Member 'ItemSlotWidget_C_On_DurabilityGauge_Prepass_0::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.On_ItemMainLayer_Prepass_0
// 0x0040 (0x0040 - 0x0000)
struct ItemSlotWidget_C_On_ItemMainLayer_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningTslCharacter_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue2;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_On_ItemMainLayer_Prepass_0) == 0x000008, "Wrong alignment on ItemSlotWidget_C_On_ItemMainLayer_Prepass_0");
static_assert(sizeof(ItemSlotWidget_C_On_ItemMainLayer_Prepass_0) == 0x000040, "Wrong size on ItemSlotWidget_C_On_ItemMainLayer_Prepass_0");
static_assert(offsetof(ItemSlotWidget_C_On_ItemMainLayer_Prepass_0, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_On_ItemMainLayer_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_ItemMainLayer_Prepass_0, m__bool_Variable) == 0x000008, "Member 'ItemSlotWidget_C_On_ItemMainLayer_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_ItemMainLayer_Prepass_0, CallFunc_GetOwningTslCharacter_ReturnValue) == 0x000010, "Member 'ItemSlotWidget_C_On_ItemMainLayer_Prepass_0::CallFunc_GetOwningTslCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_ItemMainLayer_Prepass_0, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ItemSlotWidget_C_On_ItemMainLayer_Prepass_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_ItemMainLayer_Prepass_0, CallFunc_IsValid_ReturnValue2) == 0x000019, "Member 'ItemSlotWidget_C_On_ItemMainLayer_Prepass_0::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_ItemMainLayer_Prepass_0, m__byte_Variable) == 0x00001A, "Member 'ItemSlotWidget_C_On_ItemMainLayer_Prepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_ItemMainLayer_Prepass_0, m__byte_Variable2) == 0x00001B, "Member 'ItemSlotWidget_C_On_ItemMainLayer_Prepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_ItemMainLayer_Prepass_0, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000020, "Member 'ItemSlotWidget_C_On_ItemMainLayer_Prepass_0::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_ItemMainLayer_Prepass_0, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'ItemSlotWidget_C_On_ItemMainLayer_Prepass_0::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_ItemMainLayer_Prepass_0, CallFunc_Conv_InterfaceToObject_ReturnValue2) == 0x000030, "Member 'ItemSlotWidget_C_On_ItemMainLayer_Prepass_0::CallFunc_Conv_InterfaceToObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_ItemMainLayer_Prepass_0, CallFunc_IsValid_ReturnValue3) == 0x000038, "Member 'ItemSlotWidget_C_On_ItemMainLayer_Prepass_0::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_ItemMainLayer_Prepass_0, K2Node_Select_Default) == 0x000039, "Member 'ItemSlotWidget_C_On_ItemMainLayer_Prepass_0::K2Node_Select_Default' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.On_CategoryLayer_Prepass_0
// 0x0010 (0x0010 - 0x0000)
struct ItemSlotWidget_C_On_CategoryLayer_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPackageItem_ReturnValue;                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_On_CategoryLayer_Prepass_0) == 0x000008, "Wrong alignment on ItemSlotWidget_C_On_CategoryLayer_Prepass_0");
static_assert(sizeof(ItemSlotWidget_C_On_CategoryLayer_Prepass_0) == 0x000010, "Wrong size on ItemSlotWidget_C_On_CategoryLayer_Prepass_0");
static_assert(offsetof(ItemSlotWidget_C_On_CategoryLayer_Prepass_0, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_On_CategoryLayer_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CategoryLayer_Prepass_0, m__bool_Variable) == 0x000008, "Member 'ItemSlotWidget_C_On_CategoryLayer_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CategoryLayer_Prepass_0, m__byte_Variable) == 0x000009, "Member 'ItemSlotWidget_C_On_CategoryLayer_Prepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CategoryLayer_Prepass_0, m__byte_Variable2) == 0x00000A, "Member 'ItemSlotWidget_C_On_CategoryLayer_Prepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CategoryLayer_Prepass_0, CallFunc_IsPackageItem_ReturnValue) == 0x00000B, "Member 'ItemSlotWidget_C_On_CategoryLayer_Prepass_0::CallFunc_IsPackageItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_CategoryLayer_Prepass_0, K2Node_Select_Default) == 0x00000C, "Member 'ItemSlotWidget_C_On_CategoryLayer_Prepass_0::K2Node_Select_Default' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.On_CategoryText_Prepass_0
// 0x0008 (0x0008 - 0x0000)
struct ItemSlotWidget_C_On_CategoryText_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_On_CategoryText_Prepass_0) == 0x000008, "Wrong alignment on ItemSlotWidget_C_On_CategoryText_Prepass_0");
static_assert(sizeof(ItemSlotWidget_C_On_CategoryText_Prepass_0) == 0x000008, "Wrong size on ItemSlotWidget_C_On_CategoryText_Prepass_0");
static_assert(offsetof(ItemSlotWidget_C_On_CategoryText_Prepass_0, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_On_CategoryText_Prepass_0::BoundWidget' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.On_UseInfo_Text_Prepass_0
// 0x0040 (0x0040 - 0x0000)
struct ItemSlotWidget_C_On_UseInfo_Text_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_Get_UseInfo_Text_ColorAndOpacity_0_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
};
static_assert(alignof(ItemSlotWidget_C_On_UseInfo_Text_Prepass_0) == 0x000008, "Wrong alignment on ItemSlotWidget_C_On_UseInfo_Text_Prepass_0");
static_assert(sizeof(ItemSlotWidget_C_On_UseInfo_Text_Prepass_0) == 0x000040, "Wrong size on ItemSlotWidget_C_On_UseInfo_Text_Prepass_0");
static_assert(offsetof(ItemSlotWidget_C_On_UseInfo_Text_Prepass_0, BoundWidget) == 0x000000, "Member 'ItemSlotWidget_C_On_UseInfo_Text_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_UseInfo_Text_Prepass_0, CallFunc_Get_UseInfo_Text_ColorAndOpacity_0_ReturnValue) == 0x000008, "Member 'ItemSlotWidget_C_On_UseInfo_Text_Prepass_0::CallFunc_Get_UseInfo_Text_ColorAndOpacity_0_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_On_UseInfo_Text_Prepass_0, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'ItemSlotWidget_C_On_UseInfo_Text_Prepass_0::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetSlotContainer
// 0x0010 (0x0010 - 0x0000)
struct ItemSlotWidget_C_GetSlotContainer final
{
public:
	TScriptInterface<class ISlotContainerInterface> SlotContainer_0;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetSlotContainer) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetSlotContainer");
static_assert(sizeof(ItemSlotWidget_C_GetSlotContainer) == 0x000010, "Wrong size on ItemSlotWidget_C_GetSlotContainer");
static_assert(offsetof(ItemSlotWidget_C_GetSlotContainer, SlotContainer_0) == 0x000000, "Member 'ItemSlotWidget_C_GetSlotContainer::SlotContainer_0' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetSlotItem
// 0x0010 (0x0010 - 0x0000)
struct ItemSlotWidget_C_GetSlotItem final
{
public:
	TScriptInterface<class ISlotInterface>        SlotItem;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetSlotItem) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetSlotItem");
static_assert(sizeof(ItemSlotWidget_C_GetSlotItem) == 0x000010, "Wrong size on ItemSlotWidget_C_GetSlotItem");
static_assert(offsetof(ItemSlotWidget_C_GetSlotItem, SlotItem) == 0x000000, "Member 'ItemSlotWidget_C_GetSlotItem::SlotItem' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.Up
// 0x0002 (0x0002 - 0x0000)
struct ItemSlotWidget_C_Up final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Up_ReturnValue;                           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_Up) == 0x000001, "Wrong alignment on ItemSlotWidget_C_Up");
static_assert(sizeof(ItemSlotWidget_C_Up) == 0x000002, "Wrong size on ItemSlotWidget_C_Up");
static_assert(offsetof(ItemSlotWidget_C_Up, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_Up::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_Up, CallFunc_Up_ReturnValue) == 0x000001, "Member 'ItemSlotWidget_C_Up::CallFunc_Up_ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.SetFocus
// 0x0018 (0x0018 - 0x0000)
struct ItemSlotWidget_C_SetFocus final
{
public:
	bool                                          NewFocus;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemExplorer*                          K2Node_DynamicCast_AsItem_Explorer;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_SetFocus) == 0x000008, "Wrong alignment on ItemSlotWidget_C_SetFocus");
static_assert(sizeof(ItemSlotWidget_C_SetFocus) == 0x000018, "Wrong size on ItemSlotWidget_C_SetFocus");
static_assert(offsetof(ItemSlotWidget_C_SetFocus, NewFocus) == 0x000000, "Member 'ItemSlotWidget_C_SetFocus::NewFocus' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_SetFocus, ReturnValue) == 0x000001, "Member 'ItemSlotWidget_C_SetFocus::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_SetFocus, K2Node_DynamicCast_AsItem_Explorer) == 0x000008, "Member 'ItemSlotWidget_C_SetFocus::K2Node_DynamicCast_AsItem_Explorer' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_SetFocus, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ItemSlotWidget_C_SetFocus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_SetFocus, CallFunc_SetFocus_ReturnValue) == 0x000011, "Member 'ItemSlotWidget_C_SetFocus::CallFunc_SetFocus_ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.Right
// 0x0001 (0x0001 - 0x0000)
struct ItemSlotWidget_C_Right final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_Right) == 0x000001, "Wrong alignment on ItemSlotWidget_C_Right");
static_assert(sizeof(ItemSlotWidget_C_Right) == 0x000001, "Wrong size on ItemSlotWidget_C_Right");
static_assert(offsetof(ItemSlotWidget_C_Right, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_Right::ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.Left
// 0x0001 (0x0001 - 0x0000)
struct ItemSlotWidget_C_Left final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_Left) == 0x000001, "Wrong alignment on ItemSlotWidget_C_Left");
static_assert(sizeof(ItemSlotWidget_C_Left) == 0x000001, "Wrong size on ItemSlotWidget_C_Left");
static_assert(offsetof(ItemSlotWidget_C_Left, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_Left::ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.Down
// 0x0002 (0x0002 - 0x0000)
struct ItemSlotWidget_C_Down final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Down_ReturnValue;                         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_Down) == 0x000001, "Wrong alignment on ItemSlotWidget_C_Down");
static_assert(sizeof(ItemSlotWidget_C_Down) == 0x000002, "Wrong size on ItemSlotWidget_C_Down");
static_assert(offsetof(ItemSlotWidget_C_Down, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_Down::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_Down, CallFunc_Down_ReturnValue) == 0x000001, "Member 'ItemSlotWidget_C_Down::CallFunc_Down_ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.InputY
// 0x0001 (0x0001 - 0x0000)
struct ItemSlotWidget_C_InputY final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_InputY) == 0x000001, "Wrong alignment on ItemSlotWidget_C_InputY");
static_assert(sizeof(ItemSlotWidget_C_InputY) == 0x000001, "Wrong size on ItemSlotWidget_C_InputY");
static_assert(offsetof(ItemSlotWidget_C_InputY, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_InputY::ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.InputX
// 0x0001 (0x0001 - 0x0000)
struct ItemSlotWidget_C_InputX final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_InputX) == 0x000001, "Wrong alignment on ItemSlotWidget_C_InputX");
static_assert(sizeof(ItemSlotWidget_C_InputX) == 0x000001, "Wrong size on ItemSlotWidget_C_InputX");
static_assert(offsetof(ItemSlotWidget_C_InputX, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_InputX::ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.InputB
// 0x0078 (0x0078 - 0x0000)
struct ItemSlotWidget_C_InputB final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                m__object_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> K2Node_DynamicCast_AsSlot_Container_Interface;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotContainerInterface> CallFunc_GetSlotContainer_SlotContainer;           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ULevelStreaming*                        K2Node_DynamicCast_AsLevel_Streaming;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FName                                   CallFunc_GetSlotContainerName_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ALevelScriptActor*                      CallFunc_GetLevelScriptActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputB_ReturnValue;                       // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemExplorer*                          K2Node_DynamicCast_AsItem_Explorer;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_InputB) == 0x000008, "Wrong alignment on ItemSlotWidget_C_InputB");
static_assert(sizeof(ItemSlotWidget_C_InputB) == 0x000078, "Wrong size on ItemSlotWidget_C_InputB");
static_assert(offsetof(ItemSlotWidget_C_InputB, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_InputB::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputB, m__object_Variable) == 0x000008, "Member 'ItemSlotWidget_C_InputB::m__object_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputB, K2Node_DynamicCast_AsSlot_Container_Interface) == 0x000010, "Member 'ItemSlotWidget_C_InputB::K2Node_DynamicCast_AsSlot_Container_Interface' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputB, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ItemSlotWidget_C_InputB::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputB, CallFunc_GetSlotContainer_SlotContainer) == 0x000028, "Member 'ItemSlotWidget_C_InputB::CallFunc_GetSlotContainer_SlotContainer' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputB, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000038, "Member 'ItemSlotWidget_C_InputB::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputB, K2Node_DynamicCast_AsLevel_Streaming) == 0x000040, "Member 'ItemSlotWidget_C_InputB::K2Node_DynamicCast_AsLevel_Streaming' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputB, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'ItemSlotWidget_C_InputB::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputB, CallFunc_GetSlotContainerName_ReturnValue) == 0x000050, "Member 'ItemSlotWidget_C_InputB::CallFunc_GetSlotContainerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputB, CallFunc_GetLevelScriptActor_ReturnValue) == 0x000058, "Member 'ItemSlotWidget_C_InputB::CallFunc_GetLevelScriptActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputB, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000060, "Member 'ItemSlotWidget_C_InputB::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputB, CallFunc_InputB_ReturnValue) == 0x000061, "Member 'ItemSlotWidget_C_InputB::CallFunc_InputB_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputB, K2Node_DynamicCast_AsItem_Explorer) == 0x000068, "Member 'ItemSlotWidget_C_InputB::K2Node_DynamicCast_AsItem_Explorer' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputB, K2Node_DynamicCast_bSuccess3) == 0x000070, "Member 'ItemSlotWidget_C_InputB::K2Node_DynamicCast_bSuccess3' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.InputA
// 0x0070 (0x0070 - 0x0000)
struct ItemSlotWidget_C_InputA final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                m__object_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> K2Node_DynamicCast_AsSlot_Container_Interface;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotContainerInterface> CallFunc_GetSlotContainer_SlotContainer;           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ULevelStreaming*                        K2Node_DynamicCast_AsLevel_Streaming;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelScriptActor*                      CallFunc_GetLevelScriptActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputA_ReturnValue;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemExplorer*                          K2Node_DynamicCast_AsItem_Explorer;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_InputA) == 0x000008, "Wrong alignment on ItemSlotWidget_C_InputA");
static_assert(sizeof(ItemSlotWidget_C_InputA) == 0x000070, "Wrong size on ItemSlotWidget_C_InputA");
static_assert(offsetof(ItemSlotWidget_C_InputA, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_InputA::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputA, m__object_Variable) == 0x000008, "Member 'ItemSlotWidget_C_InputA::m__object_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputA, K2Node_DynamicCast_AsSlot_Container_Interface) == 0x000010, "Member 'ItemSlotWidget_C_InputA::K2Node_DynamicCast_AsSlot_Container_Interface' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputA, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ItemSlotWidget_C_InputA::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputA, CallFunc_GetSlotContainer_SlotContainer) == 0x000028, "Member 'ItemSlotWidget_C_InputA::CallFunc_GetSlotContainer_SlotContainer' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputA, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000038, "Member 'ItemSlotWidget_C_InputA::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputA, K2Node_DynamicCast_AsLevel_Streaming) == 0x000040, "Member 'ItemSlotWidget_C_InputA::K2Node_DynamicCast_AsLevel_Streaming' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputA, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'ItemSlotWidget_C_InputA::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputA, CallFunc_GetLevelScriptActor_ReturnValue) == 0x000050, "Member 'ItemSlotWidget_C_InputA::CallFunc_GetLevelScriptActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputA, CallFunc_InputA_ReturnValue) == 0x000058, "Member 'ItemSlotWidget_C_InputA::CallFunc_InputA_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputA, K2Node_DynamicCast_AsItem_Explorer) == 0x000060, "Member 'ItemSlotWidget_C_InputA::K2Node_DynamicCast_AsItem_Explorer' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_InputA, K2Node_DynamicCast_bSuccess3) == 0x000068, "Member 'ItemSlotWidget_C_InputA::K2Node_DynamicCast_bSuccess3' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.InputRT
// 0x0001 (0x0001 - 0x0000)
struct ItemSlotWidget_C_InputRT final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_InputRT) == 0x000001, "Wrong alignment on ItemSlotWidget_C_InputRT");
static_assert(sizeof(ItemSlotWidget_C_InputRT) == 0x000001, "Wrong size on ItemSlotWidget_C_InputRT");
static_assert(offsetof(ItemSlotWidget_C_InputRT, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_InputRT::ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.InputRB
// 0x0001 (0x0001 - 0x0000)
struct ItemSlotWidget_C_InputRB final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_InputRB) == 0x000001, "Wrong alignment on ItemSlotWidget_C_InputRB");
static_assert(sizeof(ItemSlotWidget_C_InputRB) == 0x000001, "Wrong size on ItemSlotWidget_C_InputRB");
static_assert(offsetof(ItemSlotWidget_C_InputRB, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_InputRB::ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.InputLT
// 0x0001 (0x0001 - 0x0000)
struct ItemSlotWidget_C_InputLT final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_InputLT) == 0x000001, "Wrong alignment on ItemSlotWidget_C_InputLT");
static_assert(sizeof(ItemSlotWidget_C_InputLT) == 0x000001, "Wrong size on ItemSlotWidget_C_InputLT");
static_assert(offsetof(ItemSlotWidget_C_InputLT, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_InputLT::ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.InputLB
// 0x0001 (0x0001 - 0x0000)
struct ItemSlotWidget_C_InputLB final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_InputLB) == 0x000001, "Wrong alignment on ItemSlotWidget_C_InputLB");
static_assert(sizeof(ItemSlotWidget_C_InputLB) == 0x000001, "Wrong size on ItemSlotWidget_C_InputLB");
static_assert(offsetof(ItemSlotWidget_C_InputLB, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_InputLB::ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetSlotName
// 0x0040 (0x0040 - 0x0000)
struct ItemSlotWidget_C_GetSlotName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_GetSlotName_ReturnValue;                  // 0x0018(0x0018)()
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetSlotName) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetSlotName");
static_assert(sizeof(ItemSlotWidget_C_GetSlotName) == 0x000040, "Wrong size on ItemSlotWidget_C_GetSlotName");
static_assert(offsetof(ItemSlotWidget_C_GetSlotName, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_GetSlotName::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetSlotName, CallFunc_GetSlotName_ReturnValue) == 0x000018, "Member 'ItemSlotWidget_C_GetSlotName::CallFunc_GetSlotName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetSlotName, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000030, "Member 'ItemSlotWidget_C_GetSlotName::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetSlotName, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'ItemSlotWidget_C_GetSlotName::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetIconTexture
// 0x0020 (0x0020 - 0x0000)
struct ItemSlotWidget_C_GetIconTexture final
{
public:
	class UTexture*                               Tex_0;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture*                               CallFunc_GetIconTexture_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetIconTexture) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetIconTexture");
static_assert(sizeof(ItemSlotWidget_C_GetIconTexture) == 0x000020, "Wrong size on ItemSlotWidget_C_GetIconTexture");
static_assert(offsetof(ItemSlotWidget_C_GetIconTexture, Tex_0) == 0x000000, "Member 'ItemSlotWidget_C_GetIconTexture::Tex_0' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetIconTexture, CallFunc_GetIconTexture_ReturnValue) == 0x000008, "Member 'ItemSlotWidget_C_GetIconTexture::CallFunc_GetIconTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetIconTexture, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000010, "Member 'ItemSlotWidget_C_GetIconTexture::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetIconTexture, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ItemSlotWidget_C_GetIconTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetAmmountText
// 0x0048 (0x0048 - 0x0000)
struct ItemSlotWidget_C_GetAmmountText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_GetStackCount_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetAmmountText) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetAmmountText");
static_assert(sizeof(ItemSlotWidget_C_GetAmmountText) == 0x000048, "Wrong size on ItemSlotWidget_C_GetAmmountText");
static_assert(offsetof(ItemSlotWidget_C_GetAmmountText, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_GetAmmountText::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetAmmountText, CallFunc_GetStackCount_ReturnValue) == 0x000018, "Member 'ItemSlotWidget_C_GetAmmountText::CallFunc_GetStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetAmmountText, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000020, "Member 'ItemSlotWidget_C_GetAmmountText::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetAmmountText, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'ItemSlotWidget_C_GetAmmountText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_GetAmmountText, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'ItemSlotWidget_C_GetAmmountText::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.IsCastableItem
// 0x0018 (0x0018 - 0x0000)
struct ItemSlotWidget_C_IsCastableItem final
{
public:
	bool                                          IsCastableItem_0;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCastableItem_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_IsCastableItem) == 0x000008, "Wrong alignment on ItemSlotWidget_C_IsCastableItem");
static_assert(sizeof(ItemSlotWidget_C_IsCastableItem) == 0x000018, "Wrong size on ItemSlotWidget_C_IsCastableItem");
static_assert(offsetof(ItemSlotWidget_C_IsCastableItem, IsCastableItem_0) == 0x000000, "Member 'ItemSlotWidget_C_IsCastableItem::IsCastableItem_0' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsCastableItem, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000008, "Member 'ItemSlotWidget_C_IsCastableItem::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsCastableItem, CallFunc_IsCastableItem_ReturnValue) == 0x000010, "Member 'ItemSlotWidget_C_IsCastableItem::CallFunc_IsCastableItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsCastableItem, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'ItemSlotWidget_C_IsCastableItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.IsFocus
// 0x0001 (0x0001 - 0x0000)
struct ItemSlotWidget_C_IsFocus final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_IsFocus) == 0x000001, "Wrong alignment on ItemSlotWidget_C_IsFocus");
static_assert(sizeof(ItemSlotWidget_C_IsFocus) == 0x000001, "Wrong size on ItemSlotWidget_C_IsFocus");
static_assert(offsetof(ItemSlotWidget_C_IsFocus, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_IsFocus::ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetUpWidget
// 0x0008 (0x0008 - 0x0000)
struct ItemSlotWidget_C_GetUpWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetUpWidget) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetUpWidget");
static_assert(sizeof(ItemSlotWidget_C_GetUpWidget) == 0x000008, "Wrong size on ItemSlotWidget_C_GetUpWidget");
static_assert(offsetof(ItemSlotWidget_C_GetUpWidget, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_GetUpWidget::ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetRightWidget
// 0x0008 (0x0008 - 0x0000)
struct ItemSlotWidget_C_GetRightWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetRightWidget) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetRightWidget");
static_assert(sizeof(ItemSlotWidget_C_GetRightWidget) == 0x000008, "Wrong size on ItemSlotWidget_C_GetRightWidget");
static_assert(offsetof(ItemSlotWidget_C_GetRightWidget, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_GetRightWidget::ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetLeftWidget
// 0x0008 (0x0008 - 0x0000)
struct ItemSlotWidget_C_GetLeftWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetLeftWidget) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetLeftWidget");
static_assert(sizeof(ItemSlotWidget_C_GetLeftWidget) == 0x000008, "Wrong size on ItemSlotWidget_C_GetLeftWidget");
static_assert(offsetof(ItemSlotWidget_C_GetLeftWidget, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_GetLeftWidget::ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetDownWidget
// 0x0008 (0x0008 - 0x0000)
struct ItemSlotWidget_C_GetDownWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetDownWidget) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetDownWidget");
static_assert(sizeof(ItemSlotWidget_C_GetDownWidget) == 0x000008, "Wrong size on ItemSlotWidget_C_GetDownWidget");
static_assert(offsetof(ItemSlotWidget_C_GetDownWidget, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_GetDownWidget::ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.GetFocusingChildWidget
// 0x0008 (0x0008 - 0x0000)
struct ItemSlotWidget_C_GetFocusingChildWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_GetFocusingChildWidget) == 0x000008, "Wrong alignment on ItemSlotWidget_C_GetFocusingChildWidget");
static_assert(sizeof(ItemSlotWidget_C_GetFocusingChildWidget) == 0x000008, "Wrong size on ItemSlotWidget_C_GetFocusingChildWidget");
static_assert(offsetof(ItemSlotWidget_C_GetFocusingChildWidget, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_GetFocusingChildWidget::ReturnValue' has a wrong offset!");

// Function ItemSlotWidget.ItemSlotWidget_C.IsFocusable
// 0x0018 (0x0018 - 0x0000)
struct ItemSlotWidget_C_IsFocusable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemSlotWidget_C_IsFocusable) == 0x000008, "Wrong alignment on ItemSlotWidget_C_IsFocusable");
static_assert(sizeof(ItemSlotWidget_C_IsFocusable) == 0x000018, "Wrong size on ItemSlotWidget_C_IsFocusable");
static_assert(offsetof(ItemSlotWidget_C_IsFocusable, ReturnValue) == 0x000000, "Member 'ItemSlotWidget_C_IsFocusable::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsFocusable, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000008, "Member 'ItemSlotWidget_C_IsFocusable::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlotWidget_C_IsFocusable, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ItemSlotWidget_C_IsFocusable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

