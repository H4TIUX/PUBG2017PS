#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InventorySlotBaseWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.ExecuteUbergraph_InventorySlotBaseWidget
// 0x03A0 (0x03A0 - 0x0000)
struct InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslHUD*                                CallFunc_GetTslHUD_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	class UItem*                                  K2Node_CustomEvent_DroppingItem;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry2;                          // 0x0060(0x0034)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent2;                          // 0x0098(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0110(0x0078)(ConstParm)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0188(0x0034)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_PointerEvent2;                        // 0x01C0(0x0078)()
	class UDragDropOperation*                     K2Node_Event_Operation2;                           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_PointerEvent;                         // 0x0240(0x0078)()
	class UDragDropOperation*                     K2Node_Event_Operation;                            // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragDropOperation_C*            K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation; // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTslItemDragDropOperation_C*            K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation2; // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem*                                  K2Node_CustomEvent_Item;                           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_EnterOtherContainer_NewOtherContainer_CastInput; // 0x02E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x02F8(0x0008)()
	TScriptInterface<class ISlotWidgetBaseInterface_C> K2Node_DynamicCast_AsSlot_Widget_Base_Interface;   // 0x0300(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotContainerInterface> CallFunc_GetSlotContainer_SlotContainer;           // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotInterface>        CallFunc_GetSlotItem_SlotItem;                     // 0x0330(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslHUD*                                K2Node_DynamicCast_AsTsl_HUD;                      // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UItemToolTipWidget_Bp_C*                K2Node_DynamicCast_AsItem_Tool_Tip_Widget_Bp;      // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTslItemDragDropOperation_C*            K2Node_CustomEvent_DragDropObject;                 // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UInventoryWidget_C*                     K2Node_CustomEvent_InventoryWidget;                // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocus_ReturnValue;                      // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputB_ReturnValue;                       // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocus_ReturnValue2;                     // 0x0392(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputA_ReturnValue;                       // 0x0393(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocus_ReturnValue3;                     // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelfAttachmentPutMode_bResult;          // 0x0395(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_396[0x2];                                      // 0x0396(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryWidget_C*                     CallFunc_GetInventoryWidget_InventoryWidget;       // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget");
static_assert(sizeof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget) == 0x0003A0, "Wrong size on InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, EntryPoint) == 0x000000, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, CallFunc_GetTslHUD_ReturnValue) == 0x000008, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::CallFunc_GetTslHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_CreateDelegate_OutputDelegate2) == 0x000028, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_CreateDelegate_OutputDelegate3) == 0x000038, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_CreateDelegate_OutputDelegate4) == 0x000048, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_CustomEvent_DroppingItem) == 0x000058, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_CustomEvent_DroppingItem' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_Event_MyGeometry2) == 0x000060, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_Event_MyGeometry2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_Event_MouseEvent2) == 0x000098, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_Event_MouseEvent2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_Event_MouseEvent) == 0x000110, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_Event_MyGeometry) == 0x000188, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_Event_PointerEvent2) == 0x0001C0, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_Event_PointerEvent2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_Event_Operation2) == 0x000238, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_Event_Operation2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_Event_PointerEvent) == 0x000240, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_Event_PointerEvent' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_Event_Operation) == 0x0002B8, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_Event_Operation' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation) == 0x0002C0, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_DynamicCast_bSuccess) == 0x0002C8, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation2) == 0x0002D0, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_DynamicCast_bSuccess2) == 0x0002D8, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_CustomEvent_Item) == 0x0002E0, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, CallFunc_EnterOtherContainer_NewOtherContainer_CastInput) == 0x0002E8, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::CallFunc_EnterOtherContainer_NewOtherContainer_CastInput' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0002F8, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_DynamicCast_AsSlot_Widget_Base_Interface) == 0x000300, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_DynamicCast_AsSlot_Widget_Base_Interface' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_DynamicCast_bSuccess3) == 0x000310, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, CallFunc_GetSlotContainer_SlotContainer) == 0x000318, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::CallFunc_GetSlotContainer_SlotContainer' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, CallFunc_IsValid_ReturnValue2) == 0x000328, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, CallFunc_GetSlotItem_SlotItem) == 0x000330, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::CallFunc_GetSlotItem_SlotItem' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000340, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, CallFunc_IsValid_ReturnValue3) == 0x000348, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, CallFunc_GetHUD_ReturnValue) == 0x000350, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_DynamicCast_AsTsl_HUD) == 0x000358, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_DynamicCast_AsTsl_HUD' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_DynamicCast_bSuccess4) == 0x000360, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, CallFunc_GetWidget_ReturnValue) == 0x000368, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_DynamicCast_AsItem_Tool_Tip_Widget_Bp) == 0x000370, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_DynamicCast_AsItem_Tool_Tip_Widget_Bp' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_DynamicCast_bSuccess5) == 0x000378, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_CustomEvent_DragDropObject) == 0x000380, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_CustomEvent_DragDropObject' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, K2Node_CustomEvent_InventoryWidget) == 0x000388, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::K2Node_CustomEvent_InventoryWidget' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, CallFunc_IsFocus_ReturnValue) == 0x000390, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::CallFunc_IsFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, CallFunc_InputB_ReturnValue) == 0x000391, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::CallFunc_InputB_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, CallFunc_IsFocus_ReturnValue2) == 0x000392, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::CallFunc_IsFocus_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, CallFunc_InputA_ReturnValue) == 0x000393, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::CallFunc_InputA_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, CallFunc_IsFocus_ReturnValue3) == 0x000394, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::CallFunc_IsFocus_ReturnValue3' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, CallFunc_IsSelfAttachmentPutMode_bResult) == 0x000395, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::CallFunc_IsSelfAttachmentPutMode_bResult' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget, CallFunc_GetInventoryWidget_InventoryWidget) == 0x000398, "Member 'InventorySlotBaseWidget_C_ExecuteUbergraph_InventorySlotBaseWidget::CallFunc_GetInventoryWidget_InventoryWidget' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.SetInventory
// 0x0008 (0x0008 - 0x0000)
struct InventorySlotBaseWidget_C_SetInventory final
{
public:
	class UInventoryWidget_C*                     InventoryWidget_0;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_SetInventory) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_SetInventory");
static_assert(sizeof(InventorySlotBaseWidget_C_SetInventory) == 0x000008, "Wrong size on InventorySlotBaseWidget_C_SetInventory");
static_assert(offsetof(InventorySlotBaseWidget_C_SetInventory, InventoryWidget_0) == 0x000000, "Member 'InventorySlotBaseWidget_C_SetInventory::InventoryWidget_0' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.UpdateDragDropObject
// 0x0008 (0x0008 - 0x0000)
struct InventorySlotBaseWidget_C_UpdateDragDropObject final
{
public:
	class UTslItemDragDropOperation_C*            DragDropObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_UpdateDragDropObject) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_UpdateDragDropObject");
static_assert(sizeof(InventorySlotBaseWidget_C_UpdateDragDropObject) == 0x000008, "Wrong size on InventorySlotBaseWidget_C_UpdateDragDropObject");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateDragDropObject, DragDropObject) == 0x000000, "Member 'InventorySlotBaseWidget_C_UpdateDragDropObject::DragDropObject' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.OnUpdateItem
// 0x0008 (0x0008 - 0x0000)
struct InventorySlotBaseWidget_C_OnUpdateItem final
{
public:
	class UItem*                                  Item_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_OnUpdateItem) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_OnUpdateItem");
static_assert(sizeof(InventorySlotBaseWidget_C_OnUpdateItem) == 0x000008, "Wrong size on InventorySlotBaseWidget_C_OnUpdateItem");
static_assert(offsetof(InventorySlotBaseWidget_C_OnUpdateItem, Item_0) == 0x000000, "Member 'InventorySlotBaseWidget_C_OnUpdateItem::Item_0' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.OnDragLeave
// 0x0080 (0x0080 - 0x0000)
struct InventorySlotBaseWidget_C_OnDragLeave final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0078)(Parm)
	class UDragDropOperation*                     Operation;                                         // 0x0078(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_OnDragLeave) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_OnDragLeave");
static_assert(sizeof(InventorySlotBaseWidget_C_OnDragLeave) == 0x000080, "Wrong size on InventorySlotBaseWidget_C_OnDragLeave");
static_assert(offsetof(InventorySlotBaseWidget_C_OnDragLeave, PointerEvent) == 0x000000, "Member 'InventorySlotBaseWidget_C_OnDragLeave::PointerEvent' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_OnDragLeave, Operation) == 0x000078, "Member 'InventorySlotBaseWidget_C_OnDragLeave::Operation' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.OnDragEnter
// 0x00B8 (0x00B8 - 0x0000)
struct InventorySlotBaseWidget_C_OnDragEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_OnDragEnter) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_OnDragEnter");
static_assert(sizeof(InventorySlotBaseWidget_C_OnDragEnter) == 0x0000B8, "Wrong size on InventorySlotBaseWidget_C_OnDragEnter");
static_assert(offsetof(InventorySlotBaseWidget_C_OnDragEnter, MyGeometry) == 0x000000, "Member 'InventorySlotBaseWidget_C_OnDragEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_OnDragEnter, PointerEvent) == 0x000038, "Member 'InventorySlotBaseWidget_C_OnDragEnter::PointerEvent' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_OnDragEnter, Operation) == 0x0000B0, "Member 'InventorySlotBaseWidget_C_OnDragEnter::Operation' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct InventorySlotBaseWidget_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(InventorySlotBaseWidget_C_OnMouseLeave) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_OnMouseLeave");
static_assert(sizeof(InventorySlotBaseWidget_C_OnMouseLeave) == 0x000078, "Wrong size on InventorySlotBaseWidget_C_OnMouseLeave");
static_assert(offsetof(InventorySlotBaseWidget_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'InventorySlotBaseWidget_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct InventorySlotBaseWidget_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(InventorySlotBaseWidget_C_OnMouseEnter) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_OnMouseEnter");
static_assert(sizeof(InventorySlotBaseWidget_C_OnMouseEnter) == 0x0000B0, "Wrong size on InventorySlotBaseWidget_C_OnMouseEnter");
static_assert(offsetof(InventorySlotBaseWidget_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'InventorySlotBaseWidget_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'InventorySlotBaseWidget_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.UpdateDragDroppingItem
// 0x0008 (0x0008 - 0x0000)
struct InventorySlotBaseWidget_C_UpdateDragDroppingItem final
{
public:
	class UItem*                                  DroppingItem;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_UpdateDragDroppingItem) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_UpdateDragDroppingItem");
static_assert(sizeof(InventorySlotBaseWidget_C_UpdateDragDroppingItem) == 0x000008, "Wrong size on InventorySlotBaseWidget_C_UpdateDragDroppingItem");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateDragDroppingItem, DroppingItem) == 0x000000, "Member 'InventorySlotBaseWidget_C_UpdateDragDroppingItem::DroppingItem' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.GetBackgroundTexture_Bp
// 0x0010 (0x0010 - 0x0000)
struct InventorySlotBaseWidget_C_GetBackgroundTexture_Bp final
{
public:
	class UTexture*                               BackgroundTexture;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSlotOn_Bp_IsOn;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSlotMouseOver_Bp_IsMouseOver;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSlotSubOn_Bp_SubOn;                     // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_GetBackgroundTexture_Bp) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_GetBackgroundTexture_Bp");
static_assert(sizeof(InventorySlotBaseWidget_C_GetBackgroundTexture_Bp) == 0x000010, "Wrong size on InventorySlotBaseWidget_C_GetBackgroundTexture_Bp");
static_assert(offsetof(InventorySlotBaseWidget_C_GetBackgroundTexture_Bp, BackgroundTexture) == 0x000000, "Member 'InventorySlotBaseWidget_C_GetBackgroundTexture_Bp::BackgroundTexture' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetBackgroundTexture_Bp, CallFunc_IsSlotOn_Bp_IsOn) == 0x000008, "Member 'InventorySlotBaseWidget_C_GetBackgroundTexture_Bp::CallFunc_IsSlotOn_Bp_IsOn' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetBackgroundTexture_Bp, CallFunc_IsSlotMouseOver_Bp_IsMouseOver) == 0x000009, "Member 'InventorySlotBaseWidget_C_GetBackgroundTexture_Bp::CallFunc_IsSlotMouseOver_Bp_IsMouseOver' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetBackgroundTexture_Bp, CallFunc_IsSlotSubOn_Bp_SubOn) == 0x00000A, "Member 'InventorySlotBaseWidget_C_GetBackgroundTexture_Bp::CallFunc_IsSlotSubOn_Bp_SubOn' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetBackgroundTexture_Bp, CallFunc_IsValid_ReturnValue) == 0x00000B, "Member 'InventorySlotBaseWidget_C_GetBackgroundTexture_Bp::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.IsSlotOn_Bp
// 0x0060 (0x0060 - 0x0000)
struct InventorySlotBaseWidget_C_IsSlotOn_Bp final
{
public:
	bool                                          IsOn;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                   CallFunc_GetDefaultActionName_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipable_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWeapon_ReturnValue;                     // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue2;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryWidget_C*                     CallFunc_GetInventoryWidget_InventoryWidget;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragDropOperation_C*            CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FName                                   CallFunc_GetActionName_ActionName;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName2_CmpSuccess;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryWidget_C*                     LocalInventory;                                    // 0x0058(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_IsSlotOn_Bp) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_IsSlotOn_Bp");
static_assert(sizeof(InventorySlotBaseWidget_C_IsSlotOn_Bp) == 0x000060, "Wrong size on InventorySlotBaseWidget_C_IsSlotOn_Bp");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, IsOn) == 0x000000, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::IsOn' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000008, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_GetDefaultActionName_ReturnValue) == 0x000010, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_GetDefaultActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_IsValid_ReturnValue2) == 0x000018, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, K2Node_SwitchName_CmpSuccess) == 0x000019, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_IsEquipable_ReturnValue) == 0x00001A, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_IsEquipable_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_IsWeapon_ReturnValue) == 0x00001B, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_IsWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_Conv_InterfaceToObject_ReturnValue2) == 0x000020, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_Conv_InterfaceToObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_IsValid_ReturnValue3) == 0x000029, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002B, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_GetInventoryWidget_InventoryWidget) == 0x000030, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_GetInventoryWidget_InventoryWidget' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation) == 0x000038, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_IsValid_ReturnValue4) == 0x000040, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_IsValid_ReturnValue5) == 0x000041, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_GetActionName_ActionName) == 0x000048, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_GetActionName_ActionName' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000050, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, K2Node_SwitchName2_CmpSuccess) == 0x000051, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::K2Node_SwitchName2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_BooleanOR_ReturnValue) == 0x000052, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, CallFunc_BooleanAND_ReturnValue2) == 0x000053, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotOn_Bp, LocalInventory) == 0x000058, "Member 'InventorySlotBaseWidget_C_IsSlotOn_Bp::LocalInventory' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.IsSlotSubOn_Bp
// 0x0018 (0x0018 - 0x0000)
struct InventorySlotBaseWidget_C_IsSlotSubOn_Bp final
{
public:
	bool                                          SubOn;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTslItemDragDropOperation_C*            CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_IsSlotSubOn_Bp) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_IsSlotSubOn_Bp");
static_assert(sizeof(InventorySlotBaseWidget_C_IsSlotSubOn_Bp) == 0x000018, "Wrong size on InventorySlotBaseWidget_C_IsSlotSubOn_Bp");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotSubOn_Bp, SubOn) == 0x000000, "Member 'InventorySlotBaseWidget_C_IsSlotSubOn_Bp::SubOn' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotSubOn_Bp, CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation) == 0x000008, "Member 'InventorySlotBaseWidget_C_IsSlotSubOn_Bp::CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotSubOn_Bp, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'InventorySlotBaseWidget_C_IsSlotSubOn_Bp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotSubOn_Bp, CallFunc_IsValid_ReturnValue2) == 0x000011, "Member 'InventorySlotBaseWidget_C_IsSlotSubOn_Bp::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotSubOn_Bp, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'InventorySlotBaseWidget_C_IsSlotSubOn_Bp::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.GetTslItemDragDropOperation_Bp
// 0x0008 (0x0008 - 0x0000)
struct InventorySlotBaseWidget_C_GetTslItemDragDropOperation_Bp final
{
public:
	class UTslItemDragDropOperation_C*            TslItemDragDropOperation_0;                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_GetTslItemDragDropOperation_Bp) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_GetTslItemDragDropOperation_Bp");
static_assert(sizeof(InventorySlotBaseWidget_C_GetTslItemDragDropOperation_Bp) == 0x000008, "Wrong size on InventorySlotBaseWidget_C_GetTslItemDragDropOperation_Bp");
static_assert(offsetof(InventorySlotBaseWidget_C_GetTslItemDragDropOperation_Bp, TslItemDragDropOperation_0) == 0x000000, "Member 'InventorySlotBaseWidget_C_GetTslItemDragDropOperation_Bp::TslItemDragDropOperation_0' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.UpdateSlotBackground_Bp
// 0x0010 (0x0010 - 0x0000)
struct InventorySlotBaseWidget_C_UpdateSlotBackground_Bp final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetBackgroundState_State;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_UpdateSlotBackground_Bp) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_UpdateSlotBackground_Bp");
static_assert(sizeof(InventorySlotBaseWidget_C_UpdateSlotBackground_Bp) == 0x000010, "Wrong size on InventorySlotBaseWidget_C_UpdateSlotBackground_Bp");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateSlotBackground_Bp, BoundWidget) == 0x000000, "Member 'InventorySlotBaseWidget_C_UpdateSlotBackground_Bp::BoundWidget' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateSlotBackground_Bp, CallFunc_GetBackgroundState_State) == 0x000008, "Member 'InventorySlotBaseWidget_C_UpdateSlotBackground_Bp::CallFunc_GetBackgroundState_State' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateSlotBackground_Bp, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'InventorySlotBaseWidget_C_UpdateSlotBackground_Bp::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.IsSlotMouseOver_Bp
// 0x0018 (0x0018 - 0x0000)
struct InventorySlotBaseWidget_C_IsSlotMouseOver_Bp final
{
public:
	bool                                          IsMouseOver;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTslItemDragDropOperation_C*            CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_IsSlotMouseOver_Bp) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_IsSlotMouseOver_Bp");
static_assert(sizeof(InventorySlotBaseWidget_C_IsSlotMouseOver_Bp) == 0x000018, "Wrong size on InventorySlotBaseWidget_C_IsSlotMouseOver_Bp");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotMouseOver_Bp, IsMouseOver) == 0x000000, "Member 'InventorySlotBaseWidget_C_IsSlotMouseOver_Bp::IsMouseOver' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotMouseOver_Bp, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'InventorySlotBaseWidget_C_IsSlotMouseOver_Bp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotMouseOver_Bp, CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation) == 0x000008, "Member 'InventorySlotBaseWidget_C_IsSlotMouseOver_Bp::CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotMouseOver_Bp, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'InventorySlotBaseWidget_C_IsSlotMouseOver_Bp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsSlotMouseOver_Bp, CallFunc_IsValid_ReturnValue2) == 0x000011, "Member 'InventorySlotBaseWidget_C_IsSlotMouseOver_Bp::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.UpdateIconVisibility_Bp
// 0x0010 (0x0010 - 0x0000)
struct InventorySlotBaseWidget_C_UpdateIconVisibility_Bp final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_UpdateIconVisibility_Bp) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_UpdateIconVisibility_Bp");
static_assert(sizeof(InventorySlotBaseWidget_C_UpdateIconVisibility_Bp) == 0x000010, "Wrong size on InventorySlotBaseWidget_C_UpdateIconVisibility_Bp");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateIconVisibility_Bp, BoundWidget) == 0x000000, "Member 'InventorySlotBaseWidget_C_UpdateIconVisibility_Bp::BoundWidget' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateIconVisibility_Bp, m__bool_Variable) == 0x000008, "Member 'InventorySlotBaseWidget_C_UpdateIconVisibility_Bp::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateIconVisibility_Bp, m__byte_Variable) == 0x000009, "Member 'InventorySlotBaseWidget_C_UpdateIconVisibility_Bp::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateIconVisibility_Bp, m__byte_Variable2) == 0x00000A, "Member 'InventorySlotBaseWidget_C_UpdateIconVisibility_Bp::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateIconVisibility_Bp, CallFunc_IsValid_ReturnValue) == 0x00000B, "Member 'InventorySlotBaseWidget_C_UpdateIconVisibility_Bp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateIconVisibility_Bp, K2Node_Select_Default) == 0x00000C, "Member 'InventorySlotBaseWidget_C_UpdateIconVisibility_Bp::K2Node_Select_Default' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.UpdateItemIcon_Bp
// 0x00A8 (0x00A8 - 0x0000)
struct InventorySlotBaseWidget_C_UpdateItemIcon_Bp final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateBrush                            CallFunc_GetIcon_Bp_ReturnValue;                   // 0x0008(0x0090)()
	class UImage*                                 K2Node_DynamicCast_AsImage;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_UpdateItemIcon_Bp) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_UpdateItemIcon_Bp");
static_assert(sizeof(InventorySlotBaseWidget_C_UpdateItemIcon_Bp) == 0x0000A8, "Wrong size on InventorySlotBaseWidget_C_UpdateItemIcon_Bp");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateItemIcon_Bp, BoundWidget) == 0x000000, "Member 'InventorySlotBaseWidget_C_UpdateItemIcon_Bp::BoundWidget' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateItemIcon_Bp, CallFunc_GetIcon_Bp_ReturnValue) == 0x000008, "Member 'InventorySlotBaseWidget_C_UpdateItemIcon_Bp::CallFunc_GetIcon_Bp_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateItemIcon_Bp, K2Node_DynamicCast_AsImage) == 0x000098, "Member 'InventorySlotBaseWidget_C_UpdateItemIcon_Bp::K2Node_DynamicCast_AsImage' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateItemIcon_Bp, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'InventorySlotBaseWidget_C_UpdateItemIcon_Bp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateItemIcon_Bp, CallFunc_IsValid_ReturnValue) == 0x0000A1, "Member 'InventorySlotBaseWidget_C_UpdateItemIcon_Bp::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.GetIcon_Bp
// 0x0210 (0x0210 - 0x0000)
struct InventorySlotBaseWidget_C_GetIcon_Bp final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0090)(Parm, OutParm, ReturnParm)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0090(0x0090)()
	TScriptInterface<class ISlotInterface>        CallFunc_GetIconSizeRatio_self_CastInput;          // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetIconSizeRatio_ReturnValue;             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CallFunc_GetIconTexture_ReturnValue;               // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0148(0x0028)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0174(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush2;                     // 0x0180(0x0090)()
};
static_assert(alignof(InventorySlotBaseWidget_C_GetIcon_Bp) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_GetIcon_Bp");
static_assert(sizeof(InventorySlotBaseWidget_C_GetIcon_Bp) == 0x000210, "Wrong size on InventorySlotBaseWidget_C_GetIcon_Bp");
static_assert(offsetof(InventorySlotBaseWidget_C_GetIcon_Bp, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_GetIcon_Bp::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetIcon_Bp, K2Node_MakeStruct_SlateBrush) == 0x000090, "Member 'InventorySlotBaseWidget_C_GetIcon_Bp::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetIcon_Bp, CallFunc_GetIconSizeRatio_self_CastInput) == 0x000120, "Member 'InventorySlotBaseWidget_C_GetIcon_Bp::CallFunc_GetIconSizeRatio_self_CastInput' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetIcon_Bp, CallFunc_GetIconSizeRatio_ReturnValue) == 0x000130, "Member 'InventorySlotBaseWidget_C_GetIcon_Bp::CallFunc_GetIconSizeRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetIcon_Bp, CallFunc_GetIconTexture_ReturnValue) == 0x000138, "Member 'InventorySlotBaseWidget_C_GetIcon_Bp::CallFunc_GetIconTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetIcon_Bp, CallFunc_IsValid_ReturnValue) == 0x000140, "Member 'InventorySlotBaseWidget_C_GetIcon_Bp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetIcon_Bp, CallFunc_IsValid_ReturnValue2) == 0x000141, "Member 'InventorySlotBaseWidget_C_GetIcon_Bp::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetIcon_Bp, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000144, "Member 'InventorySlotBaseWidget_C_GetIcon_Bp::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetIcon_Bp, K2Node_MakeStruct_SlateColor) == 0x000148, "Member 'InventorySlotBaseWidget_C_GetIcon_Bp::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetIcon_Bp, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000170, "Member 'InventorySlotBaseWidget_C_GetIcon_Bp::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetIcon_Bp, CallFunc_MakeVector2D_ReturnValue) == 0x000174, "Member 'InventorySlotBaseWidget_C_GetIcon_Bp::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetIcon_Bp, K2Node_MakeStruct_SlateBrush2) == 0x000180, "Member 'InventorySlotBaseWidget_C_GetIcon_Bp::K2Node_MakeStruct_SlateBrush2' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.UpdateItem_Bp
// 0x0060 (0x0060 - 0x0000)
struct InventorySlotBaseWidget_C_UpdateItem_Bp final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem*                                  CallFunc_GetItem_Bp_Item;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UItem*                                  CallFunc_GetItem_Bp_Item2;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter2; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AEquipment*                             CallFunc_GetEquipment_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AWeaponProcessor*                       CallFunc_GetWeaponProcessor_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_UpdateItem_Bp) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_UpdateItem_Bp");
static_assert(sizeof(InventorySlotBaseWidget_C_UpdateItem_Bp) == 0x000060, "Wrong size on InventorySlotBaseWidget_C_UpdateItem_Bp");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateItem_Bp, BoundWidget) == 0x000000, "Member 'InventorySlotBaseWidget_C_UpdateItem_Bp::BoundWidget' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateItem_Bp, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'InventorySlotBaseWidget_C_UpdateItem_Bp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateItem_Bp, CallFunc_IsValid_ReturnValue2) == 0x000009, "Member 'InventorySlotBaseWidget_C_UpdateItem_Bp::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateItem_Bp, CallFunc_GetItem_Bp_Item) == 0x000010, "Member 'InventorySlotBaseWidget_C_UpdateItem_Bp::CallFunc_GetItem_Bp_Item' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateItem_Bp, CallFunc_GetItem_Bp_Item2) == 0x000018, "Member 'InventorySlotBaseWidget_C_UpdateItem_Bp::CallFunc_GetItem_Bp_Item2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateItem_Bp, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'InventorySlotBaseWidget_C_UpdateItem_Bp::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateItem_Bp, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000028, "Member 'InventorySlotBaseWidget_C_UpdateItem_Bp::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateItem_Bp, CallFunc_IsValid_ReturnValue3) == 0x000030, "Member 'InventorySlotBaseWidget_C_UpdateItem_Bp::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateItem_Bp, CallFunc_GetOwningShooterCharacter_ShooterCharacter2) == 0x000038, "Member 'InventorySlotBaseWidget_C_UpdateItem_Bp::CallFunc_GetOwningShooterCharacter_ShooterCharacter2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateItem_Bp, CallFunc_IsValid_ReturnValue4) == 0x000040, "Member 'InventorySlotBaseWidget_C_UpdateItem_Bp::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateItem_Bp, CallFunc_GetInventoryFacade_ReturnValue) == 0x000048, "Member 'InventorySlotBaseWidget_C_UpdateItem_Bp::CallFunc_GetInventoryFacade_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateItem_Bp, CallFunc_GetEquipment_ReturnValue) == 0x000050, "Member 'InventorySlotBaseWidget_C_UpdateItem_Bp::CallFunc_GetEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_UpdateItem_Bp, CallFunc_GetWeaponProcessor_ReturnValue) == 0x000058, "Member 'InventorySlotBaseWidget_C_UpdateItem_Bp::CallFunc_GetWeaponProcessor_ReturnValue' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.GetItem_Bp
// 0x0008 (0x0008 - 0x0000)
struct InventorySlotBaseWidget_C_GetItem_Bp final
{
public:
	class UItem*                                  Item_0;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_GetItem_Bp) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_GetItem_Bp");
static_assert(sizeof(InventorySlotBaseWidget_C_GetItem_Bp) == 0x000008, "Wrong size on InventorySlotBaseWidget_C_GetItem_Bp");
static_assert(offsetof(InventorySlotBaseWidget_C_GetItem_Bp, Item_0) == 0x000000, "Member 'InventorySlotBaseWidget_C_GetItem_Bp::Item_0' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.CreateTslDragDropOperation_Bp
// 0x0070 (0x0070 - 0x0000)
struct InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp final
{
public:
	class UTslItemDragDropOperation_C*            OutOperation;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragDropOperation_C*            CallFunc_CreateDragDropOperation_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem*                                  CallFunc_GetOperationSpawnValue_Bp_Item;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UEquipableItem*                         CallFunc_GetOperationSpawnValue_Bp_EquipableItem;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponItem*                            CallFunc_GetOperationSpawnValue_Bp_WeaponItem;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UThrowableItem*                         CallFunc_GetOperationSpawnValue_Bp_ThrowableItem;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAttachableItem*                        CallFunc_GetOperationSpawnValue_Bp_AttachmentItem; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        CallFunc_GetOperationSpawnValue_Bp_SlotItem;       // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_GetOperationSpawnValue_Bp_Container;      // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragWidget_C*                   CallFunc_Create_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragDropOperation_C*            Operation;                                         // 0x0068(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp");
static_assert(sizeof(InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp) == 0x000070, "Wrong size on InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp");
static_assert(offsetof(InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp, OutOperation) == 0x000000, "Member 'InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp::OutOperation' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp, CallFunc_CreateDragDropOperation_ReturnValue) == 0x000008, "Member 'InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp::CallFunc_CreateDragDropOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp, CallFunc_GetOperationSpawnValue_Bp_Item) == 0x000018, "Member 'InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp::CallFunc_GetOperationSpawnValue_Bp_Item' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp, CallFunc_GetOperationSpawnValue_Bp_EquipableItem) == 0x000020, "Member 'InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp::CallFunc_GetOperationSpawnValue_Bp_EquipableItem' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp, CallFunc_GetOperationSpawnValue_Bp_WeaponItem) == 0x000028, "Member 'InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp::CallFunc_GetOperationSpawnValue_Bp_WeaponItem' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp, CallFunc_GetOperationSpawnValue_Bp_ThrowableItem) == 0x000030, "Member 'InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp::CallFunc_GetOperationSpawnValue_Bp_ThrowableItem' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp, CallFunc_GetOperationSpawnValue_Bp_AttachmentItem) == 0x000038, "Member 'InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp::CallFunc_GetOperationSpawnValue_Bp_AttachmentItem' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp, CallFunc_GetOperationSpawnValue_Bp_SlotItem) == 0x000040, "Member 'InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp::CallFunc_GetOperationSpawnValue_Bp_SlotItem' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp, CallFunc_GetOperationSpawnValue_Bp_Container) == 0x000050, "Member 'InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp::CallFunc_GetOperationSpawnValue_Bp_Container' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp, CallFunc_Create_ReturnValue) == 0x000060, "Member 'InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp, Operation) == 0x000068, "Member 'InventorySlotBaseWidget_C_CreateTslDragDropOperation_Bp::Operation' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.GetOptions_Bp
// 0x0030 (0x0030 - 0x0000)
struct InventorySlotBaseWidget_C_GetOptions_Bp final
{
public:
	class FString                                 Options;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
	class UTslItemDragDropOperation_C*            CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_GetOptions_Options;                       // 0x0018(0x0010)(ZeroConstructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_GetOptions_Bp) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_GetOptions_Bp");
static_assert(sizeof(InventorySlotBaseWidget_C_GetOptions_Bp) == 0x000030, "Wrong size on InventorySlotBaseWidget_C_GetOptions_Bp");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOptions_Bp, Options) == 0x000000, "Member 'InventorySlotBaseWidget_C_GetOptions_Bp::Options' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOptions_Bp, CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation) == 0x000010, "Member 'InventorySlotBaseWidget_C_GetOptions_Bp::CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOptions_Bp, CallFunc_GetOptions_Options) == 0x000018, "Member 'InventorySlotBaseWidget_C_GetOptions_Bp::CallFunc_GetOptions_Options' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOptions_Bp, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'InventorySlotBaseWidget_C_GetOptions_Bp::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.GetOperationSpawnValue_Bp
// 0x0108 (0x0108 - 0x0000)
struct InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp final
{
public:
	class UItem*                                  Item_0;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UEquipableItem*                         EquipableItem;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponItem*                            WeaponItem;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UThrowableItem*                         ThrowableItem;                                     // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAttachableItem*                        AttachmentItem;                                    // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        SlotItem;                                          // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> Container;                                         // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotWidgetBaseInterface_C> K2Node_DynamicCast_AsSlot_Widget_Base_Interface;   // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttachableItem*                        K2Node_DynamicCast_AsAttachable_Item;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotContainerInterface> CallFunc_GetSlotContainer_SlotContainer;           // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        CallFunc_GetSlotItem_SlotItem;                     // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UEquipableItem*                         K2Node_DynamicCast_AsEquipable_Item;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UThrowableItem*                         K2Node_DynamicCast_AsThrowable_Item;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponItem*                            K2Node_DynamicCast_AsWeapon_Item;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem*                                  OutItem;                                           // 0x00C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAttachableItem*                        OutAttachmentItem;                                 // 0x00C8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UThrowableItem*                         OutThrowableItem;                                  // 0x00D0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponItem*                            OutWeaponItem;                                     // 0x00D8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UEquipableItem*                         OutEquipableItem;                                  // 0x00E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> ContainerInteface;                                 // 0x00E8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        SlotInterface;                                     // 0x00F8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp");
static_assert(sizeof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp) == 0x000108, "Wrong size on InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, Item_0) == 0x000000, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::Item_0' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, EquipableItem) == 0x000008, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::EquipableItem' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, WeaponItem) == 0x000010, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::WeaponItem' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, ThrowableItem) == 0x000018, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::ThrowableItem' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, AttachmentItem) == 0x000020, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::AttachmentItem' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, SlotItem) == 0x000028, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::SlotItem' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, Container) == 0x000038, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::Container' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, K2Node_DynamicCast_AsSlot_Widget_Base_Interface) == 0x000048, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::K2Node_DynamicCast_AsSlot_Widget_Base_Interface' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, K2Node_DynamicCast_AsAttachable_Item) == 0x000060, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::K2Node_DynamicCast_AsAttachable_Item' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, K2Node_DynamicCast_bSuccess2) == 0x000068, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, CallFunc_GetSlotContainer_SlotContainer) == 0x000070, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::CallFunc_GetSlotContainer_SlotContainer' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, CallFunc_GetSlotItem_SlotItem) == 0x000080, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::CallFunc_GetSlotItem_SlotItem' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, K2Node_DynamicCast_AsEquipable_Item) == 0x000090, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::K2Node_DynamicCast_AsEquipable_Item' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, K2Node_DynamicCast_bSuccess3) == 0x000098, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, K2Node_DynamicCast_AsThrowable_Item) == 0x0000A0, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::K2Node_DynamicCast_AsThrowable_Item' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, K2Node_DynamicCast_bSuccess4) == 0x0000A8, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, K2Node_DynamicCast_AsWeapon_Item) == 0x0000B0, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::K2Node_DynamicCast_AsWeapon_Item' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, K2Node_DynamicCast_bSuccess5) == 0x0000B8, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, CallFunc_IsValid_ReturnValue) == 0x0000B9, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, OutItem) == 0x0000C0, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::OutItem' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, OutAttachmentItem) == 0x0000C8, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::OutAttachmentItem' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, OutThrowableItem) == 0x0000D0, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::OutThrowableItem' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, OutWeaponItem) == 0x0000D8, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::OutWeaponItem' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, OutEquipableItem) == 0x0000E0, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::OutEquipableItem' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, ContainerInteface) == 0x0000E8, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::ContainerInteface' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp, SlotInterface) == 0x0000F8, "Member 'InventorySlotBaseWidget_C_GetOperationSpawnValue_Bp::SlotInterface' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.GetInventoryWidget
// 0x0008 (0x0008 - 0x0000)
struct InventorySlotBaseWidget_C_GetInventoryWidget final
{
public:
	class UInventoryWidget_C*                     InventoryWidget_0;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_GetInventoryWidget) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_GetInventoryWidget");
static_assert(sizeof(InventorySlotBaseWidget_C_GetInventoryWidget) == 0x000008, "Wrong size on InventorySlotBaseWidget_C_GetInventoryWidget");
static_assert(offsetof(InventorySlotBaseWidget_C_GetInventoryWidget, InventoryWidget_0) == 0x000000, "Member 'InventorySlotBaseWidget_C_GetInventoryWidget::InventoryWidget_0' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.GetBackgroundState
// 0x0008 (0x0008 - 0x0000)
struct InventorySlotBaseWidget_C_GetBackgroundState final
{
public:
	float                                         State;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSlotMouseOver_Bp_IsMouseOver;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSlotOn_Bp_IsOn;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSlotSubOn_Bp_SubOn;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_GetBackgroundState) == 0x000004, "Wrong alignment on InventorySlotBaseWidget_C_GetBackgroundState");
static_assert(sizeof(InventorySlotBaseWidget_C_GetBackgroundState) == 0x000008, "Wrong size on InventorySlotBaseWidget_C_GetBackgroundState");
static_assert(offsetof(InventorySlotBaseWidget_C_GetBackgroundState, State) == 0x000000, "Member 'InventorySlotBaseWidget_C_GetBackgroundState::State' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetBackgroundState, CallFunc_IsSlotMouseOver_Bp_IsMouseOver) == 0x000004, "Member 'InventorySlotBaseWidget_C_GetBackgroundState::CallFunc_IsSlotMouseOver_Bp_IsMouseOver' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetBackgroundState, CallFunc_IsSlotOn_Bp_IsOn) == 0x000005, "Member 'InventorySlotBaseWidget_C_GetBackgroundState::CallFunc_IsSlotOn_Bp_IsOn' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetBackgroundState, CallFunc_IsSlotSubOn_Bp_SubOn) == 0x000006, "Member 'InventorySlotBaseWidget_C_GetBackgroundState::CallFunc_IsSlotSubOn_Bp_SubOn' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetBackgroundState, CallFunc_IsValid_ReturnValue) == 0x000007, "Member 'InventorySlotBaseWidget_C_GetBackgroundState::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.Up
// 0x0020 (0x0020 - 0x0000)
struct InventorySlotBaseWidget_C_Up final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetUpWidgetByTslFocusableWidget_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_Up) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_Up");
static_assert(sizeof(InventorySlotBaseWidget_C_Up) == 0x000020, "Wrong size on InventorySlotBaseWidget_C_Up");
static_assert(offsetof(InventorySlotBaseWidget_C_Up, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_Up::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_Up, CallFunc_GetUpWidgetByTslFocusableWidget_ReturnValue) == 0x000008, "Member 'InventorySlotBaseWidget_C_Up::CallFunc_GetUpWidgetByTslFocusableWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_Up, K2Node_DynamicCast_AsUser_Widget) == 0x000010, "Member 'InventorySlotBaseWidget_C_Up::K2Node_DynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_Up, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'InventorySlotBaseWidget_C_Up::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.SetFocus
// 0x0002 (0x0002 - 0x0000)
struct InventorySlotBaseWidget_C_SetFocus final
{
public:
	bool                                          NewFocus;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_SetFocus) == 0x000001, "Wrong alignment on InventorySlotBaseWidget_C_SetFocus");
static_assert(sizeof(InventorySlotBaseWidget_C_SetFocus) == 0x000002, "Wrong size on InventorySlotBaseWidget_C_SetFocus");
static_assert(offsetof(InventorySlotBaseWidget_C_SetFocus, NewFocus) == 0x000000, "Member 'InventorySlotBaseWidget_C_SetFocus::NewFocus' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_SetFocus, ReturnValue) == 0x000001, "Member 'InventorySlotBaseWidget_C_SetFocus::ReturnValue' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.Right
// 0x0020 (0x0020 - 0x0000)
struct InventorySlotBaseWidget_C_Right final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetRightWidgetByTslFocusableWidget_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_Right) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_Right");
static_assert(sizeof(InventorySlotBaseWidget_C_Right) == 0x000020, "Wrong size on InventorySlotBaseWidget_C_Right");
static_assert(offsetof(InventorySlotBaseWidget_C_Right, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_Right::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_Right, CallFunc_GetRightWidgetByTslFocusableWidget_ReturnValue) == 0x000008, "Member 'InventorySlotBaseWidget_C_Right::CallFunc_GetRightWidgetByTslFocusableWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_Right, K2Node_DynamicCast_AsUser_Widget) == 0x000010, "Member 'InventorySlotBaseWidget_C_Right::K2Node_DynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_Right, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'InventorySlotBaseWidget_C_Right::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.Left
// 0x0001 (0x0001 - 0x0000)
struct InventorySlotBaseWidget_C_Left final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_Left) == 0x000001, "Wrong alignment on InventorySlotBaseWidget_C_Left");
static_assert(sizeof(InventorySlotBaseWidget_C_Left) == 0x000001, "Wrong size on InventorySlotBaseWidget_C_Left");
static_assert(offsetof(InventorySlotBaseWidget_C_Left, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_Left::ReturnValue' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.InputY
// 0x0001 (0x0001 - 0x0000)
struct InventorySlotBaseWidget_C_InputY final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_InputY) == 0x000001, "Wrong alignment on InventorySlotBaseWidget_C_InputY");
static_assert(sizeof(InventorySlotBaseWidget_C_InputY) == 0x000001, "Wrong size on InventorySlotBaseWidget_C_InputY");
static_assert(offsetof(InventorySlotBaseWidget_C_InputY, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_InputY::ReturnValue' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.InputX
// 0x0001 (0x0001 - 0x0000)
struct InventorySlotBaseWidget_C_InputX final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_InputX) == 0x000001, "Wrong alignment on InventorySlotBaseWidget_C_InputX");
static_assert(sizeof(InventorySlotBaseWidget_C_InputX) == 0x000001, "Wrong size on InventorySlotBaseWidget_C_InputX");
static_assert(offsetof(InventorySlotBaseWidget_C_InputX, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_InputX::ReturnValue' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.InputRT
// 0x0001 (0x0001 - 0x0000)
struct InventorySlotBaseWidget_C_InputRT final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_InputRT) == 0x000001, "Wrong alignment on InventorySlotBaseWidget_C_InputRT");
static_assert(sizeof(InventorySlotBaseWidget_C_InputRT) == 0x000001, "Wrong size on InventorySlotBaseWidget_C_InputRT");
static_assert(offsetof(InventorySlotBaseWidget_C_InputRT, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_InputRT::ReturnValue' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.InputRB
// 0x0001 (0x0001 - 0x0000)
struct InventorySlotBaseWidget_C_InputRB final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_InputRB) == 0x000001, "Wrong alignment on InventorySlotBaseWidget_C_InputRB");
static_assert(sizeof(InventorySlotBaseWidget_C_InputRB) == 0x000001, "Wrong size on InventorySlotBaseWidget_C_InputRB");
static_assert(offsetof(InventorySlotBaseWidget_C_InputRB, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_InputRB::ReturnValue' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.InputLT
// 0x0001 (0x0001 - 0x0000)
struct InventorySlotBaseWidget_C_InputLT final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_InputLT) == 0x000001, "Wrong alignment on InventorySlotBaseWidget_C_InputLT");
static_assert(sizeof(InventorySlotBaseWidget_C_InputLT) == 0x000001, "Wrong size on InventorySlotBaseWidget_C_InputLT");
static_assert(offsetof(InventorySlotBaseWidget_C_InputLT, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_InputLT::ReturnValue' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.InputLB
// 0x0001 (0x0001 - 0x0000)
struct InventorySlotBaseWidget_C_InputLB final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_InputLB) == 0x000001, "Wrong alignment on InventorySlotBaseWidget_C_InputLB");
static_assert(sizeof(InventorySlotBaseWidget_C_InputLB) == 0x000001, "Wrong size on InventorySlotBaseWidget_C_InputLB");
static_assert(offsetof(InventorySlotBaseWidget_C_InputLB, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_InputLB::ReturnValue' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.InputB
// 0x0048 (0x0048 - 0x0000)
struct InventorySlotBaseWidget_C_InputB final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEquipment*                             CallFunc_GetEquipment_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_DoActionWithSlot_self_CastInput;          // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        CallFunc_DoActionWithSlot_Slot_CastInput;          // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_InputB) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_InputB");
static_assert(sizeof(InventorySlotBaseWidget_C_InputB) == 0x000048, "Wrong size on InventorySlotBaseWidget_C_InputB");
static_assert(offsetof(InventorySlotBaseWidget_C_InputB, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_InputB::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_InputB, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000008, "Member 'InventorySlotBaseWidget_C_InputB::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_InputB, CallFunc_GetInventoryFacade_ReturnValue) == 0x000010, "Member 'InventorySlotBaseWidget_C_InputB::CallFunc_GetInventoryFacade_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_InputB, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'InventorySlotBaseWidget_C_InputB::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_InputB, CallFunc_GetEquipment_ReturnValue) == 0x000020, "Member 'InventorySlotBaseWidget_C_InputB::CallFunc_GetEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_InputB, CallFunc_DoActionWithSlot_self_CastInput) == 0x000028, "Member 'InventorySlotBaseWidget_C_InputB::CallFunc_DoActionWithSlot_self_CastInput' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_InputB, CallFunc_DoActionWithSlot_Slot_CastInput) == 0x000038, "Member 'InventorySlotBaseWidget_C_InputB::CallFunc_DoActionWithSlot_Slot_CastInput' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.InputA
// 0x0048 (0x0048 - 0x0000)
struct InventorySlotBaseWidget_C_InputA final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEquipment*                             CallFunc_GetEquipment_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_DoSlotActionDefault_self_CastInput;       // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        CallFunc_DoSlotActionDefault_Slot_CastInput;       // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_InputA) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_InputA");
static_assert(sizeof(InventorySlotBaseWidget_C_InputA) == 0x000048, "Wrong size on InventorySlotBaseWidget_C_InputA");
static_assert(offsetof(InventorySlotBaseWidget_C_InputA, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_InputA::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_InputA, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000008, "Member 'InventorySlotBaseWidget_C_InputA::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_InputA, CallFunc_GetInventoryFacade_ReturnValue) == 0x000010, "Member 'InventorySlotBaseWidget_C_InputA::CallFunc_GetInventoryFacade_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_InputA, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'InventorySlotBaseWidget_C_InputA::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_InputA, CallFunc_GetEquipment_ReturnValue) == 0x000020, "Member 'InventorySlotBaseWidget_C_InputA::CallFunc_GetEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_InputA, CallFunc_DoSlotActionDefault_self_CastInput) == 0x000028, "Member 'InventorySlotBaseWidget_C_InputA::CallFunc_DoSlotActionDefault_self_CastInput' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_InputA, CallFunc_DoSlotActionDefault_Slot_CastInput) == 0x000038, "Member 'InventorySlotBaseWidget_C_InputA::CallFunc_DoSlotActionDefault_Slot_CastInput' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.Down
// 0x0001 (0x0001 - 0x0000)
struct InventorySlotBaseWidget_C_Down final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_Down) == 0x000001, "Wrong alignment on InventorySlotBaseWidget_C_Down");
static_assert(sizeof(InventorySlotBaseWidget_C_Down) == 0x000001, "Wrong size on InventorySlotBaseWidget_C_Down");
static_assert(offsetof(InventorySlotBaseWidget_C_Down, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_Down::ReturnValue' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.IsFocus
// 0x0001 (0x0001 - 0x0000)
struct InventorySlotBaseWidget_C_IsFocus final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_IsFocus) == 0x000001, "Wrong alignment on InventorySlotBaseWidget_C_IsFocus");
static_assert(sizeof(InventorySlotBaseWidget_C_IsFocus) == 0x000001, "Wrong size on InventorySlotBaseWidget_C_IsFocus");
static_assert(offsetof(InventorySlotBaseWidget_C_IsFocus, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_IsFocus::ReturnValue' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.GetUpWidget
// 0x0038 (0x0038 - 0x0000)
struct InventorySlotBaseWidget_C_GetUpWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	class UWidget*                                CallFunc_GetUpWidgetByTslFocusableWidget_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CheckList;                                         // 0x0020(0x0010)(Edit, ZeroConstructor)
	struct FVector2D                              MyPosition;                                        // 0x0030(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_GetUpWidget) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_GetUpWidget");
static_assert(sizeof(InventorySlotBaseWidget_C_GetUpWidget) == 0x000038, "Wrong size on InventorySlotBaseWidget_C_GetUpWidget");
static_assert(offsetof(InventorySlotBaseWidget_C_GetUpWidget, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_GetUpWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetUpWidget, CallFunc_GetUpWidgetByTslFocusableWidget_ReturnValue) == 0x000008, "Member 'InventorySlotBaseWidget_C_GetUpWidget::CallFunc_GetUpWidgetByTslFocusableWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetUpWidget, K2Node_DynamicCast_AsUser_Widget) == 0x000010, "Member 'InventorySlotBaseWidget_C_GetUpWidget::K2Node_DynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetUpWidget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'InventorySlotBaseWidget_C_GetUpWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetUpWidget, CheckList) == 0x000020, "Member 'InventorySlotBaseWidget_C_GetUpWidget::CheckList' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetUpWidget, MyPosition) == 0x000030, "Member 'InventorySlotBaseWidget_C_GetUpWidget::MyPosition' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.GetRightWidget
// 0x0020 (0x0020 - 0x0000)
struct InventorySlotBaseWidget_C_GetRightWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	class UWidget*                                CallFunc_GetRightWidgetByTslFocusableWidget_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_GetRightWidget) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_GetRightWidget");
static_assert(sizeof(InventorySlotBaseWidget_C_GetRightWidget) == 0x000020, "Wrong size on InventorySlotBaseWidget_C_GetRightWidget");
static_assert(offsetof(InventorySlotBaseWidget_C_GetRightWidget, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_GetRightWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetRightWidget, CallFunc_GetRightWidgetByTslFocusableWidget_ReturnValue) == 0x000008, "Member 'InventorySlotBaseWidget_C_GetRightWidget::CallFunc_GetRightWidgetByTslFocusableWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetRightWidget, K2Node_DynamicCast_AsUser_Widget) == 0x000010, "Member 'InventorySlotBaseWidget_C_GetRightWidget::K2Node_DynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetRightWidget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'InventorySlotBaseWidget_C_GetRightWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.GetLeftWidget
// 0x0020 (0x0020 - 0x0000)
struct InventorySlotBaseWidget_C_GetLeftWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	class UWidget*                                CallFunc_GetLeftWidgetByTslFocusableWidget_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_GetLeftWidget) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_GetLeftWidget");
static_assert(sizeof(InventorySlotBaseWidget_C_GetLeftWidget) == 0x000020, "Wrong size on InventorySlotBaseWidget_C_GetLeftWidget");
static_assert(offsetof(InventorySlotBaseWidget_C_GetLeftWidget, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_GetLeftWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetLeftWidget, CallFunc_GetLeftWidgetByTslFocusableWidget_ReturnValue) == 0x000008, "Member 'InventorySlotBaseWidget_C_GetLeftWidget::CallFunc_GetLeftWidgetByTslFocusableWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetLeftWidget, K2Node_DynamicCast_AsUser_Widget) == 0x000010, "Member 'InventorySlotBaseWidget_C_GetLeftWidget::K2Node_DynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetLeftWidget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'InventorySlotBaseWidget_C_GetLeftWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.GetFocusingChildWidget
// 0x0008 (0x0008 - 0x0000)
struct InventorySlotBaseWidget_C_GetFocusingChildWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_GetFocusingChildWidget) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_GetFocusingChildWidget");
static_assert(sizeof(InventorySlotBaseWidget_C_GetFocusingChildWidget) == 0x000008, "Wrong size on InventorySlotBaseWidget_C_GetFocusingChildWidget");
static_assert(offsetof(InventorySlotBaseWidget_C_GetFocusingChildWidget, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_GetFocusingChildWidget::ReturnValue' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.GetDownWidget
// 0x0020 (0x0020 - 0x0000)
struct InventorySlotBaseWidget_C_GetDownWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	class UWidget*                                CallFunc_GetDownWidgetByTslFocusableWidget_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_GetDownWidget) == 0x000008, "Wrong alignment on InventorySlotBaseWidget_C_GetDownWidget");
static_assert(sizeof(InventorySlotBaseWidget_C_GetDownWidget) == 0x000020, "Wrong size on InventorySlotBaseWidget_C_GetDownWidget");
static_assert(offsetof(InventorySlotBaseWidget_C_GetDownWidget, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_GetDownWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetDownWidget, CallFunc_GetDownWidgetByTslFocusableWidget_ReturnValue) == 0x000008, "Member 'InventorySlotBaseWidget_C_GetDownWidget::CallFunc_GetDownWidgetByTslFocusableWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetDownWidget, K2Node_DynamicCast_AsUser_Widget) == 0x000010, "Member 'InventorySlotBaseWidget_C_GetDownWidget::K2Node_DynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_GetDownWidget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'InventorySlotBaseWidget_C_GetDownWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function InventorySlotBaseWidget.InventorySlotBaseWidget_C.IsFocusable
// 0x0002 (0x0002 - 0x0000)
struct InventorySlotBaseWidget_C_IsFocusable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventorySlotBaseWidget_C_IsFocusable) == 0x000001, "Wrong alignment on InventorySlotBaseWidget_C_IsFocusable");
static_assert(sizeof(InventorySlotBaseWidget_C_IsFocusable) == 0x000002, "Wrong size on InventorySlotBaseWidget_C_IsFocusable");
static_assert(offsetof(InventorySlotBaseWidget_C_IsFocusable, ReturnValue) == 0x000000, "Member 'InventorySlotBaseWidget_C_IsFocusable::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventorySlotBaseWidget_C_IsFocusable, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'InventorySlotBaseWidget_C_IsFocusable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

