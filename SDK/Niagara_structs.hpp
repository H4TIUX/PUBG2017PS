#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Niagara

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum Niagara.ENiagaraDataSetType
// NumValues: 0x0004
enum class ENiagaraDataSetType : uint8
{
	ParticleData                             = 0,
	Shared                                   = 1,
	Event                                    = 2,
	ENiagaraDataSetType_MAX                  = 3,
};

// Enum Niagara.ENiagaraDataType
// NumValues: 0x0004
enum class ENiagaraDataType : uint8
{
	Scalar                                   = 0,
	Vector                                   = 1,
	Matrix                                   = 2,
	ENiagaraDataType_MAX                     = 3,
};

// Enum Niagara.EUnusedAttributeBehaviour
// NumValues: 0x0006
enum class EUnusedAttributeBehaviour : uint8
{
	Copy                                     = 0,
	Zero                                     = 1,
	None                                     = 2,
	MarkInvalid                              = 3,
	PassThrough                              = 4,
	EUnusedAttributeBehaviour_MAX            = 5,
};

// Enum Niagara.EEmitterRenderModuleType
// NumValues: 0x0006
enum class EEmitterRenderModuleType : uint8
{
	RMT_None                                 = 0,
	RMT_Sprites                              = 1,
	RMT_Ribbon                               = 2,
	RMT_Trails                               = 3,
	RMT_Meshes                               = 4,
	RMT_MAX                                  = 5,
};

// ScriptStruct Niagara.NiagaraDataSetID
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FNiagaraDataSetID final
{
public:
	struct FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENiagaraDataSetType                           Type;                                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraDataSetID) == 0x000008, "Wrong alignment on FNiagaraDataSetID");
static_assert(sizeof(FNiagaraDataSetID) == 0x000010, "Wrong size on FNiagaraDataSetID");
static_assert(offsetof(FNiagaraDataSetID, Name) == 0x000000, "Member 'FNiagaraDataSetID::Name' has a wrong offset!");
static_assert(offsetof(FNiagaraDataSetID, Type) == 0x000008, "Member 'FNiagaraDataSetID::Type' has a wrong offset!");

// ScriptStruct Niagara.NiagaraConstantBase
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FNiagaraConstantBase
{
public:
	struct FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraConstantBase) == 0x000008, "Wrong alignment on FNiagaraConstantBase");
static_assert(sizeof(FNiagaraConstantBase) == 0x000008, "Wrong size on FNiagaraConstantBase");
static_assert(offsetof(FNiagaraConstantBase, Name) == 0x000000, "Member 'FNiagaraConstantBase::Name' has a wrong offset!");

// ScriptStruct Niagara.NiagaraConstant_Float
// 0x0008 (0x0010 - 0x0008)
struct FNiagaraConstant_Float final : public FNiagaraConstantBase
{
public:
	float                                         Value;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraConstant_Float) == 0x000008, "Wrong alignment on FNiagaraConstant_Float");
static_assert(sizeof(FNiagaraConstant_Float) == 0x000010, "Wrong size on FNiagaraConstant_Float");
static_assert(offsetof(FNiagaraConstant_Float, Value) == 0x000008, "Member 'FNiagaraConstant_Float::Value' has a wrong offset!");

// ScriptStruct Niagara.NiagaraVariableInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FNiagaraVariableInfo final
{
public:
	struct FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENiagaraDataType                              Type;                                              // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraVariableInfo) == 0x000008, "Wrong alignment on FNiagaraVariableInfo");
static_assert(sizeof(FNiagaraVariableInfo) == 0x000010, "Wrong size on FNiagaraVariableInfo");
static_assert(offsetof(FNiagaraVariableInfo, Name) == 0x000000, "Member 'FNiagaraVariableInfo::Name' has a wrong offset!");
static_assert(offsetof(FNiagaraVariableInfo, Type) == 0x000008, "Member 'FNiagaraVariableInfo::Type' has a wrong offset!");

// ScriptStruct Niagara.NiagaraConstant_Vector
// 0x0018 (0x0020 - 0x0008)
struct FNiagaraConstant_Vector final : public FNiagaraConstantBase
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               Value;                                             // 0x0010(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraConstant_Vector) == 0x000010, "Wrong alignment on FNiagaraConstant_Vector");
static_assert(sizeof(FNiagaraConstant_Vector) == 0x000020, "Wrong size on FNiagaraConstant_Vector");
static_assert(offsetof(FNiagaraConstant_Vector, Value) == 0x000010, "Member 'FNiagaraConstant_Vector::Value' has a wrong offset!");

// ScriptStruct Niagara.NiagaraConstant_Matrix
// 0x0048 (0x0050 - 0x0008)
struct FNiagaraConstant_Matrix final : public FNiagaraConstantBase
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                Value;                                             // 0x0010(0x0040)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraConstant_Matrix) == 0x000010, "Wrong alignment on FNiagaraConstant_Matrix");
static_assert(sizeof(FNiagaraConstant_Matrix) == 0x000050, "Wrong size on FNiagaraConstant_Matrix");
static_assert(offsetof(FNiagaraConstant_Matrix, Value) == 0x000010, "Member 'FNiagaraConstant_Matrix::Value' has a wrong offset!");

// ScriptStruct Niagara.NiagaraConstants
// 0x0030 (0x0030 - 0x0000)
struct FNiagaraConstants final
{
public:
	TArray<struct FNiagaraConstant_Float>         ScalarConstants;                                   // 0x0000(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraConstant_Vector>        VectorConstants;                                   // 0x0010(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraConstant_Matrix>        MatrixConstants;                                   // 0x0020(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraConstants) == 0x000008, "Wrong alignment on FNiagaraConstants");
static_assert(sizeof(FNiagaraConstants) == 0x000030, "Wrong size on FNiagaraConstants");
static_assert(offsetof(FNiagaraConstants, ScalarConstants) == 0x000000, "Member 'FNiagaraConstants::ScalarConstants' has a wrong offset!");
static_assert(offsetof(FNiagaraConstants, VectorConstants) == 0x000010, "Member 'FNiagaraConstants::VectorConstants' has a wrong offset!");
static_assert(offsetof(FNiagaraConstants, MatrixConstants) == 0x000020, "Member 'FNiagaraConstants::MatrixConstants' has a wrong offset!");

// ScriptStruct Niagara.NiagaraScriptConstantData
// 0x0060 (0x0060 - 0x0000)
struct FNiagaraScriptConstantData final
{
public:
	struct FNiagaraConstants                      ExternalConstantsNew;                              // 0x0000(0x0030)(NativeAccessSpecifierPublic)
	struct FNiagaraConstants                      InternalConstantsNew;                              // 0x0030(0x0030)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraScriptConstantData) == 0x000008, "Wrong alignment on FNiagaraScriptConstantData");
static_assert(sizeof(FNiagaraScriptConstantData) == 0x000060, "Wrong size on FNiagaraScriptConstantData");
static_assert(offsetof(FNiagaraScriptConstantData, ExternalConstantsNew) == 0x000000, "Member 'FNiagaraScriptConstantData::ExternalConstantsNew' has a wrong offset!");
static_assert(offsetof(FNiagaraScriptConstantData, InternalConstantsNew) == 0x000030, "Member 'FNiagaraScriptConstantData::InternalConstantsNew' has a wrong offset!");

// ScriptStruct Niagara.NiagaraScriptUsageInfo
// 0x0001 (0x0001 - 0x0000)
struct FNiagaraScriptUsageInfo final
{
public:
	bool                                          bReadsAttriubteData;                               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraScriptUsageInfo) == 0x000001, "Wrong alignment on FNiagaraScriptUsageInfo");
static_assert(sizeof(FNiagaraScriptUsageInfo) == 0x000001, "Wrong size on FNiagaraScriptUsageInfo");
static_assert(offsetof(FNiagaraScriptUsageInfo, bReadsAttriubteData) == 0x000000, "Member 'FNiagaraScriptUsageInfo::bReadsAttriubteData' has a wrong offset!");

// ScriptStruct Niagara.NiagaraDataSetProperties
// 0x0020 (0x0020 - 0x0000)
struct FNiagaraDataSetProperties
{
public:
	struct FNiagaraDataSetID                      ID;                                                // 0x0000(0x0010)(Edit, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraVariableInfo>           Variables;                                         // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraDataSetProperties) == 0x000008, "Wrong alignment on FNiagaraDataSetProperties");
static_assert(sizeof(FNiagaraDataSetProperties) == 0x000020, "Wrong size on FNiagaraDataSetProperties");
static_assert(offsetof(FNiagaraDataSetProperties, ID) == 0x000000, "Member 'FNiagaraDataSetProperties::ID' has a wrong offset!");
static_assert(offsetof(FNiagaraDataSetProperties, Variables) == 0x000010, "Member 'FNiagaraDataSetProperties::Variables' has a wrong offset!");

// ScriptStruct Niagara.NiagaraEventReceiverProperties
// 0x0028 (0x0028 - 0x0000)
struct FNiagaraEventReceiverProperties final
{
public:
	struct FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                   SourceEventGenerator;                              // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                   SourceEmitter;                                     // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UNiagaraEventReceiverEmitterAction*> EmitterActions;                                    // 0x0018(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraEventReceiverProperties) == 0x000008, "Wrong alignment on FNiagaraEventReceiverProperties");
static_assert(sizeof(FNiagaraEventReceiverProperties) == 0x000028, "Wrong size on FNiagaraEventReceiverProperties");
static_assert(offsetof(FNiagaraEventReceiverProperties, Name) == 0x000000, "Member 'FNiagaraEventReceiverProperties::Name' has a wrong offset!");
static_assert(offsetof(FNiagaraEventReceiverProperties, SourceEventGenerator) == 0x000008, "Member 'FNiagaraEventReceiverProperties::SourceEventGenerator' has a wrong offset!");
static_assert(offsetof(FNiagaraEventReceiverProperties, SourceEmitter) == 0x000010, "Member 'FNiagaraEventReceiverProperties::SourceEmitter' has a wrong offset!");
static_assert(offsetof(FNiagaraEventReceiverProperties, EmitterActions) == 0x000018, "Member 'FNiagaraEventReceiverProperties::EmitterActions' has a wrong offset!");

// ScriptStruct Niagara.NiagaraEventGeneratorProperties
// 0x0008 (0x0028 - 0x0020)
struct FNiagaraEventGeneratorProperties final : public FNiagaraDataSetProperties
{
public:
	int32                                         MaxEventsPerFrame;                                 // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraEventGeneratorProperties) == 0x000008, "Wrong alignment on FNiagaraEventGeneratorProperties");
static_assert(sizeof(FNiagaraEventGeneratorProperties) == 0x000028, "Wrong size on FNiagaraEventGeneratorProperties");
static_assert(offsetof(FNiagaraEventGeneratorProperties, MaxEventsPerFrame) == 0x000020, "Member 'FNiagaraEventGeneratorProperties::MaxEventsPerFrame' has a wrong offset!");

// ScriptStruct Niagara.NiagaraEmitterScriptProperties
// 0x0058 (0x0058 - 0x0000)
struct FNiagaraEmitterScriptProperties final
{
public:
	class UNiagaraScript*                         Script;                                            // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNiagaraConstants                      ExternalConstants;                                 // 0x0008(0x0030)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraEventReceiverProperties> EventReceivers;                                    // 0x0038(0x0010)(Edit, EditFixedSize, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraEventGeneratorProperties> EventGenerators;                                   // 0x0048(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraEmitterScriptProperties) == 0x000008, "Wrong alignment on FNiagaraEmitterScriptProperties");
static_assert(sizeof(FNiagaraEmitterScriptProperties) == 0x000058, "Wrong size on FNiagaraEmitterScriptProperties");
static_assert(offsetof(FNiagaraEmitterScriptProperties, Script) == 0x000000, "Member 'FNiagaraEmitterScriptProperties::Script' has a wrong offset!");
static_assert(offsetof(FNiagaraEmitterScriptProperties, ExternalConstants) == 0x000008, "Member 'FNiagaraEmitterScriptProperties::ExternalConstants' has a wrong offset!");
static_assert(offsetof(FNiagaraEmitterScriptProperties, EventReceivers) == 0x000038, "Member 'FNiagaraEmitterScriptProperties::EventReceivers' has a wrong offset!");
static_assert(offsetof(FNiagaraEmitterScriptProperties, EventGenerators) == 0x000048, "Member 'FNiagaraEmitterScriptProperties::EventGenerators' has a wrong offset!");

}

