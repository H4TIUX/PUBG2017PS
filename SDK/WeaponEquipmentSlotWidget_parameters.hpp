#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponEquipmentSlotWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "TslGame_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.ExecuteUbergraph_WeaponEquipmentSlotWidget
// 0x05D8 (0x05D8 - 0x0000)
struct WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslHUD*                                CallFunc_GetTslHUD_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FEquipPosition                         CallFunc_WeaponIndexToEquipPosition_ReturnValue;   // 0x0054(0x0008)()
	int32                                         m__int_Array_Index_Variable;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UEquipableItem*                         CallFunc_GetItem_ReturnValue;                      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable2;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry3;                          // 0x0084(0x0034)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_PointerEvent2;                        // 0x00B8(0x0078)()
	class UDragDropOperation*                     K2Node_Event_Operation2;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragDropOperation_C*            K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_PointerEvent;                         // 0x0148(0x0078)()
	class UDragDropOperation*                     K2Node_Event_Operation;                            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_CustomEvent_SlotIndex;                      // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTslItemDragDropOperation_C*            K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation2; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry2;                          // 0x01DC(0x0034)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent2;                          // 0x0210(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0288(0x0078)(ConstParm)
	class UItem*                                  K2Node_Event_Item;                                 // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate5;             // 0x0308(0x0010)(ZeroConstructor, NoDestructor)
	class UTslItemDragDropOperation_C*            K2Node_Event_DragDropObject;                       // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_EnterOtherContainer_NewOtherContainer_CastInput; // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragDropOperation_C*            CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation; // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryWidget_C*                     K2Node_Event_InventoryWidget;                      // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryWidget_C*                     CallFunc_GetInventoryWidget_InventoryWidget;       // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponAttachmentSlotWidget_C*          CallFunc_Array_Get_Item;                           // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocus_ReturnValue;                      // 0x0365(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocus_ReturnValue2;                     // 0x0366(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367[0x1];                                      // 0x0367(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetTimeSeconds_ReturnValue2;              // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0378(0x0034)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetTimeSeconds_ReturnValue3;              // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue;           // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AEquipment*                             CallFunc_GetEquipment_ReturnValue;                 // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_DoSlotActionDefault_self_CastInput;       // 0x03E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        CallFunc_DoSlotActionDefault_Slot_CastInput;       // 0x03F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate6;             // 0x0400(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsFocus_ReturnValue3;                     // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0418(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue;                     // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42A[0x6];                                      // 0x042A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0430(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue2;                    // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_442[0x6];                                      // 0x0442(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetChildUpFocusableWidget_UpWidget;       // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetChildUpFocusableWidget_UpWidget2;      // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocus_ReturnValue4;                     // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3; // 0x0468(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue3;                    // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47A[0x6];                                      // 0x047A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface4; // 0x0480(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue4;                    // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_492[0x6];                                      // 0x0492(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetChildDownFocusableWidget_DownWidget;   // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetChildDownFocusableWidget_DownWidget2;  // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocus_ReturnValue5;                     // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface5; // 0x04B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue5;                    // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CA[0x6];                                      // 0x04CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface6; // 0x04D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue6;                    // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E2[0x6];                                      // 0x04E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate7;             // 0x04E8(0x0010)(ZeroConstructor, NoDestructor)
	class UUserWidget*                            CallFunc_GetChildLeftFocusableWidget_LeftWidget;   // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetChildLeftFocusableWidget_LeftWidget2;  // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocus_ReturnValue6;                     // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511[0x3];                                      // 0x0511(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Array_Index_Variable2;                      // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponAttachmentSlotWidget_C*          CallFunc_Array_Get_Item2;                          // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface7; // 0x0520(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface8; // 0x0538(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue7;                    // 0x0549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue8;                    // 0x054A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54B[0x5];                                      // 0x054B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetChildRightFocusableWidget_RightWidget; // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate8;             // 0x0558(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetChildRightFocusableWidget_RightWidget2; // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputA_ReturnValue;                       // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocus_ReturnValue7;                     // 0x0579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocus_ReturnValue8;                     // 0x057A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57B[0x5];                                      // 0x057B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter2; // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue9;                     // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue2;          // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AEquipment*                             CallFunc_GetEquipment_ReturnValue2;                // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_DoSlotActionDefault_self2_CastInput;      // 0x05A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        CallFunc_DoSlotActionDefault_Slot2_CastInput;      // 0x05B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate9;             // 0x05C0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsFocus_ReturnValue9;                     // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelfAttachmentPutMode_bResult;          // 0x05D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget) == 0x0005D8, "Wrong size on WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, EntryPoint) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetTslHUD_ReturnValue) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetTslHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_CreateDelegate_OutputDelegate2) == 0x000028, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_CreateDelegate_OutputDelegate3) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, m__int_Loop_Counter_Variable) == 0x000048, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsValid_ReturnValue2) == 0x00004C, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_WeaponIndexToEquipPosition_ReturnValue) == 0x000054, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_WeaponIndexToEquipPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, m__int_Array_Index_Variable) == 0x00005C, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetItem_ReturnValue) == 0x000060, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsValid_ReturnValue3) == 0x000068, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_CreateDelegate_OutputDelegate4) == 0x000070, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, m__int_Loop_Counter_Variable2) == 0x000080, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::m__int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_Event_MyGeometry3) == 0x000084, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_Event_MyGeometry3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_Event_PointerEvent2) == 0x0000B8, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_Event_PointerEvent2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_Event_Operation2) == 0x000130, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_Event_Operation2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation) == 0x000138, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_Add_IntInt_ReturnValue2) == 0x000144, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_Event_PointerEvent) == 0x000148, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_Event_PointerEvent' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_Event_Operation) == 0x0001C0, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_Event_Operation' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_CustomEvent_SlotIndex) == 0x0001C8, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_CustomEvent_SlotIndex' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation2) == 0x0001D0, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_bSuccess2) == 0x0001D8, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_Event_MyGeometry2) == 0x0001DC, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_Event_MyGeometry2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_Event_MouseEvent2) == 0x000210, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_Event_MouseEvent2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_Event_MouseEvent) == 0x000288, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_Event_Item) == 0x000300, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_Event_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_CreateDelegate_OutputDelegate5) == 0x000308, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_Event_DragDropObject) == 0x000318, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_Event_DragDropObject' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_EnterOtherContainer_NewOtherContainer_CastInput) == 0x000320, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_EnterOtherContainer_NewOtherContainer_CastInput' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation) == 0x000330, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_Array_Length_ReturnValue) == 0x000338, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_Event_InventoryWidget) == 0x000340, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_Event_InventoryWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000348, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetInventoryWidget_InventoryWidget) == 0x000350, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetInventoryWidget_InventoryWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_Array_Get_Item) == 0x000358, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_Array_Length_ReturnValue2) == 0x000360, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_Less_IntInt_ReturnValue2) == 0x000364, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsFocus_ReturnValue) == 0x000365, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsFocus_ReturnValue2) == 0x000366, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsFocus_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetTimeSeconds_ReturnValue) == 0x000368, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetTimeSeconds_ReturnValue2) == 0x00036C, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetTimeSeconds_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000370, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000374, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_Event_MyGeometry) == 0x000378, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_Event_InDeltaTime) == 0x0003AC, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetTimeSeconds_ReturnValue3) == 0x0003B0, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetTimeSeconds_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x0003B4, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0003B8, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x0003C0, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsValid_ReturnValue4) == 0x0003C8, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetInventoryFacade_ReturnValue) == 0x0003D0, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetInventoryFacade_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetEquipment_ReturnValue) == 0x0003D8, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_DoSlotActionDefault_self_CastInput) == 0x0003E0, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_DoSlotActionDefault_self_CastInput' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_DoSlotActionDefault_Slot_CastInput) == 0x0003F0, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_DoSlotActionDefault_Slot_CastInput' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_CreateDelegate_OutputDelegate6) == 0x000400, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsFocus_ReturnValue3) == 0x000410, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsFocus_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000418, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_bSuccess3) == 0x000428, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_SetFocus_ReturnValue) == 0x000429, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_SetFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000430, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_bSuccess4) == 0x000440, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_SetFocus_ReturnValue2) == 0x000441, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_SetFocus_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetChildUpFocusableWidget_UpWidget) == 0x000448, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetChildUpFocusableWidget_UpWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsValid_ReturnValue5) == 0x000450, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetChildUpFocusableWidget_UpWidget2) == 0x000458, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetChildUpFocusableWidget_UpWidget2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsFocus_ReturnValue4) == 0x000460, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsFocus_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3) == 0x000468, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_bSuccess5) == 0x000478, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_SetFocus_ReturnValue3) == 0x000479, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_SetFocus_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface4) == 0x000480, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_bSuccess6) == 0x000490, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_SetFocus_ReturnValue4) == 0x000491, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_SetFocus_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetChildDownFocusableWidget_DownWidget) == 0x000498, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetChildDownFocusableWidget_DownWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsValid_ReturnValue6) == 0x0004A0, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetChildDownFocusableWidget_DownWidget2) == 0x0004A8, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetChildDownFocusableWidget_DownWidget2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsFocus_ReturnValue5) == 0x0004B0, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsFocus_ReturnValue5' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface5) == 0x0004B8, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface5' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_bSuccess7) == 0x0004C8, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_SetFocus_ReturnValue5) == 0x0004C9, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_SetFocus_ReturnValue5' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface6) == 0x0004D0, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface6' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_bSuccess8) == 0x0004E0, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_SetFocus_ReturnValue6) == 0x0004E1, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_SetFocus_ReturnValue6' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_CreateDelegate_OutputDelegate7) == 0x0004E8, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetChildLeftFocusableWidget_LeftWidget) == 0x0004F8, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetChildLeftFocusableWidget_LeftWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsValid_ReturnValue7) == 0x000500, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetChildLeftFocusableWidget_LeftWidget2) == 0x000508, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetChildLeftFocusableWidget_LeftWidget2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsFocus_ReturnValue6) == 0x000510, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsFocus_ReturnValue6' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, m__int_Array_Index_Variable2) == 0x000514, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::m__int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_Array_Get_Item2) == 0x000518, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface7) == 0x000520, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface7' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_bSuccess9) == 0x000530, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface8) == 0x000538, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface8' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_DynamicCast_bSuccess10) == 0x000548, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_SetFocus_ReturnValue7) == 0x000549, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_SetFocus_ReturnValue7' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_SetFocus_ReturnValue8) == 0x00054A, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_SetFocus_ReturnValue8' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetChildRightFocusableWidget_RightWidget) == 0x000550, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetChildRightFocusableWidget_RightWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_CreateDelegate_OutputDelegate8) == 0x000558, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsValid_ReturnValue8) == 0x000568, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetChildRightFocusableWidget_RightWidget2) == 0x000570, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetChildRightFocusableWidget_RightWidget2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_InputA_ReturnValue) == 0x000578, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_InputA_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsFocus_ReturnValue7) == 0x000579, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsFocus_ReturnValue7' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsFocus_ReturnValue8) == 0x00057A, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsFocus_ReturnValue8' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetOwningShooterCharacter_ShooterCharacter2) == 0x000580, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetOwningShooterCharacter_ShooterCharacter2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsValid_ReturnValue9) == 0x000588, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsValid_ReturnValue9' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetInventoryFacade_ReturnValue2) == 0x000590, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetInventoryFacade_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_GetEquipment_ReturnValue2) == 0x000598, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_GetEquipment_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_DoSlotActionDefault_self2_CastInput) == 0x0005A0, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_DoSlotActionDefault_self2_CastInput' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_DoSlotActionDefault_Slot2_CastInput) == 0x0005B0, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_DoSlotActionDefault_Slot2_CastInput' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, K2Node_CreateDelegate_OutputDelegate9) == 0x0005C0, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsFocus_ReturnValue9) == 0x0005D0, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsFocus_ReturnValue9' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget, CallFunc_IsSelfAttachmentPutMode_bResult) == 0x0005D1, "Member 'WeaponEquipmentSlotWidget_C_ExecuteUbergraph_WeaponEquipmentSlotWidget::CallFunc_IsSelfAttachmentPutMode_bResult' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.Tick
// 0x0038 (0x0038 - 0x0000)
struct WeaponEquipmentSlotWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_Tick) == 0x000004, "Wrong alignment on WeaponEquipmentSlotWidget_C_Tick");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_Tick) == 0x000038, "Wrong size on WeaponEquipmentSlotWidget_C_Tick");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Tick, MyGeometry) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Tick, InDeltaTime) == 0x000034, "Member 'WeaponEquipmentSlotWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.SetInventory
// 0x0008 (0x0008 - 0x0000)
struct WeaponEquipmentSlotWidget_C_SetInventory final
{
public:
	class UInventoryWidget_C*                     InventoryWidget_0;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_SetInventory) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_SetInventory");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_SetInventory) == 0x000008, "Wrong size on WeaponEquipmentSlotWidget_C_SetInventory");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_SetInventory, InventoryWidget_0) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_SetInventory::InventoryWidget_0' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.UpdateDragDropObject
// 0x0008 (0x0008 - 0x0000)
struct WeaponEquipmentSlotWidget_C_UpdateDragDropObject final
{
public:
	class UTslItemDragDropOperation_C*            DragDropObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_UpdateDragDropObject) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_UpdateDragDropObject");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_UpdateDragDropObject) == 0x000008, "Wrong size on WeaponEquipmentSlotWidget_C_UpdateDragDropObject");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_UpdateDragDropObject, DragDropObject) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_UpdateDragDropObject::DragDropObject' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.OnUpdateItem
// 0x0008 (0x0008 - 0x0000)
struct WeaponEquipmentSlotWidget_C_OnUpdateItem final
{
public:
	class UItem*                                  Item_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_OnUpdateItem) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_OnUpdateItem");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_OnUpdateItem) == 0x000008, "Wrong size on WeaponEquipmentSlotWidget_C_OnUpdateItem");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateItem, Item_0) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateItem::Item_0' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct WeaponEquipmentSlotWidget_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_OnMouseLeave) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_OnMouseLeave");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_OnMouseLeave) == 0x000078, "Wrong size on WeaponEquipmentSlotWidget_C_OnMouseLeave");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WeaponEquipmentSlotWidget_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_OnMouseEnter) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_OnMouseEnter");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_OnMouseEnter) == 0x0000B0, "Wrong size on WeaponEquipmentSlotWidget_C_OnMouseEnter");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.OnDragSlotEnter
// 0x0004 (0x0004 - 0x0000)
struct WeaponEquipmentSlotWidget_C_OnDragSlotEnter final
{
public:
	int32                                         SlotIndex_0;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_OnDragSlotEnter) == 0x000004, "Wrong alignment on WeaponEquipmentSlotWidget_C_OnDragSlotEnter");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_OnDragSlotEnter) == 0x000004, "Wrong size on WeaponEquipmentSlotWidget_C_OnDragSlotEnter");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragSlotEnter, SlotIndex_0) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_OnDragSlotEnter::SlotIndex_0' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.OnDragLeave
// 0x0080 (0x0080 - 0x0000)
struct WeaponEquipmentSlotWidget_C_OnDragLeave final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0078)(Parm)
	class UDragDropOperation*                     Operation;                                         // 0x0078(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_OnDragLeave) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_OnDragLeave");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_OnDragLeave) == 0x000080, "Wrong size on WeaponEquipmentSlotWidget_C_OnDragLeave");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragLeave, PointerEvent) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_OnDragLeave::PointerEvent' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragLeave, Operation) == 0x000078, "Member 'WeaponEquipmentSlotWidget_C_OnDragLeave::Operation' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.OnDragEnter
// 0x00B8 (0x00B8 - 0x0000)
struct WeaponEquipmentSlotWidget_C_OnDragEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_OnDragEnter) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_OnDragEnter");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_OnDragEnter) == 0x0000B8, "Wrong size on WeaponEquipmentSlotWidget_C_OnDragEnter");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragEnter, MyGeometry) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_OnDragEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragEnter, PointerEvent) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_OnDragEnter::PointerEvent' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragEnter, Operation) == 0x0000B0, "Member 'WeaponEquipmentSlotWidget_C_OnDragEnter::Operation' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.GetWeaponInfoText
// 0x00E8 (0x00E8 - 0x0000)
struct WeaponEquipmentSlotWidget_C_GetWeaponInfoText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon*                             CallFunc_GetWeaponByIndex_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon_Gun*                         K2Node_DynamicCast_AsTsl_Weapon_Gun;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentAmmoInInventory_ReturnValue;    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetCurrentAmmoInClip_ReturnValue;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue2;            // 0x0058(0x0010)(ZeroConstructor)
	class ATslWeapon_Melee*                       K2Node_DynamicCast_AsTsl_Weapon_Melee;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor)
	class ATslWeapon_Throwable*                   K2Node_DynamicCast_AsTsl_Weapon_Throwable;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0098(0x0010)(ZeroConstructor)
	int32                                         CallFunc_GetThrowableCountInInventory_ReturnValue; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B0(0x0018)()
	int32                                         CallFunc_GetThrowableCount_ReturnValue;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00D0(0x0018)()
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_GetWeaponInfoText");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText) == 0x0000E8, "Wrong size on WeaponEquipmentSlotWidget_C_GetWeaponInfoText");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, ReturnValue) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, CallFunc_GetWeaponByIndex_ReturnValue) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::CallFunc_GetWeaponByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, CallFunc_IsValid_ReturnValue2) == 0x000028, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, K2Node_DynamicCast_AsTsl_Weapon_Gun) == 0x000030, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::K2Node_DynamicCast_AsTsl_Weapon_Gun' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, CallFunc_GetCurrentAmmoInInventory_ReturnValue) == 0x00003C, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::CallFunc_GetCurrentAmmoInInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, CallFunc_GetCurrentAmmoInClip_ReturnValue) == 0x000040, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::CallFunc_GetCurrentAmmoInClip_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, CallFunc_Conv_IntToString_ReturnValue) == 0x000048, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, CallFunc_Conv_IntToString_ReturnValue2) == 0x000058, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::CallFunc_Conv_IntToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, K2Node_DynamicCast_AsTsl_Weapon_Melee) == 0x000068, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::K2Node_DynamicCast_AsTsl_Weapon_Melee' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, K2Node_DynamicCast_bSuccess2) == 0x000070, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, K2Node_DynamicCast_AsTsl_Weapon_Throwable) == 0x000088, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::K2Node_DynamicCast_AsTsl_Weapon_Throwable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, K2Node_DynamicCast_bSuccess3) == 0x000090, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, CallFunc_Concat_StrStr_ReturnValue2) == 0x000098, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, CallFunc_GetThrowableCountInInventory_ReturnValue) == 0x0000A8, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::CallFunc_GetThrowableCountInInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B0, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, CallFunc_GetThrowableCount_ReturnValue) == 0x0000C8, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::CallFunc_GetThrowableCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, CallFunc_Add_IntInt_ReturnValue) == 0x0000CC, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponInfoText, CallFunc_Conv_IntToText_ReturnValue) == 0x0000D0, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponInfoText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.GetWeaponIcon
// 0x0210 (0x0210 - 0x0000)
struct WeaponEquipmentSlotWidget_C_GetWeaponIcon final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0090)(Parm, OutParm, ReturnParm)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0090(0x0090)()
	class UTexture*                               CallFunc_GetIconTexture_ReturnValue;               // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotInterface>        CallFunc_GetIconSizeRatio_self_CastInput;          // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetIconSizeRatio_ReturnValue;             // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0150(0x0028)()
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush2;                     // 0x0180(0x0090)()
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_GetWeaponIcon) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_GetWeaponIcon");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_GetWeaponIcon) == 0x000210, "Wrong size on WeaponEquipmentSlotWidget_C_GetWeaponIcon");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponIcon, ReturnValue) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponIcon::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponIcon, K2Node_MakeStruct_SlateBrush) == 0x000090, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponIcon::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponIcon, CallFunc_GetIconTexture_ReturnValue) == 0x000120, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponIcon::CallFunc_GetIconTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponIcon, CallFunc_IsValid_ReturnValue) == 0x000128, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponIcon, CallFunc_GetIconSizeRatio_self_CastInput) == 0x000130, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponIcon::CallFunc_GetIconSizeRatio_self_CastInput' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponIcon, CallFunc_GetIconSizeRatio_ReturnValue) == 0x000140, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponIcon::CallFunc_GetIconSizeRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponIcon, CallFunc_IsValid_ReturnValue2) == 0x000144, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponIcon::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponIcon, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000148, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponIcon::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponIcon, K2Node_MakeStruct_SlateColor) == 0x000150, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponIcon::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponIcon, CallFunc_MakeVector2D_ReturnValue) == 0x000178, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponIcon::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponIcon, K2Node_MakeStruct_SlateBrush2) == 0x000180, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponIcon::K2Node_MakeStruct_SlateBrush2' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.GetSlotVisibility
// 0x0018 (0x0018 - 0x0000)
struct WeaponEquipmentSlotWidget_C_GetSlotVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon*                             CallFunc_GetWeaponByIndex_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_GetSlotVisibility) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_GetSlotVisibility");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_GetSlotVisibility) == 0x000018, "Wrong size on WeaponEquipmentSlotWidget_C_GetSlotVisibility");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetSlotVisibility, ReturnValue) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_GetSlotVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetSlotVisibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WeaponEquipmentSlotWidget_C_GetSlotVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetSlotVisibility, CallFunc_GetWeaponByIndex_ReturnValue) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_GetSlotVisibility::CallFunc_GetWeaponByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetSlotVisibility, CallFunc_IsValid_ReturnValue2) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_GetSlotVisibility::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.OnMouseButtonDown
// 0x0460 (0x0460 - 0x0000)
struct WeaponEquipmentSlotWidget_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00A8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_DetectDragIfPressed_ReturnValue;          // 0x0158(0x00A8)()
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0208(0x00A8)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEquipPosition                         CallFunc_WeaponIndexToEquipPosition_ReturnValue;   // 0x02B4(0x0008)()
	bool                                          CallFunc_IsCharacterCasting_IsCasting;             // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD[0x3];                                      // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipableItem*                         CallFunc_GetItem_ReturnValue;                      // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x02D8(0x00A8)()
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue;           // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue2;                   // 0x0390(0x00A8)()
	class AEquipment*                             CallFunc_GetEquipment_ReturnValue;                 // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_DoSlotActionDefault_self_CastInput;       // 0x0440(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        CallFunc_DoSlotActionDefault_Slot_CastInput;       // 0x0450(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_OnMouseButtonDown");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown) == 0x000460, "Wrong size on WeaponEquipmentSlotWidget_C_OnMouseButtonDown");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, CallFunc_DetectDragIfPressed_ReturnValue) == 0x000158, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::CallFunc_DetectDragIfPressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000200, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x000208, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, CallFunc_IsValid_ReturnValue) == 0x0002B0, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, CallFunc_WeaponIndexToEquipPosition_ReturnValue) == 0x0002B4, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::CallFunc_WeaponIndexToEquipPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, CallFunc_IsCharacterCasting_IsCasting) == 0x0002BC, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::CallFunc_IsCharacterCasting_IsCasting' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, CallFunc_GetItem_ReturnValue) == 0x0002C0, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::CallFunc_GetItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, CallFunc_IsValid_ReturnValue2) == 0x0002C8, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x0002D0, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x0002D8, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, CallFunc_IsValid_ReturnValue3) == 0x000380, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, CallFunc_GetInventoryFacade_ReturnValue) == 0x000388, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::CallFunc_GetInventoryFacade_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, CallFunc_Unhandled_ReturnValue2) == 0x000390, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::CallFunc_Unhandled_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, CallFunc_GetEquipment_ReturnValue) == 0x000438, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::CallFunc_GetEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, CallFunc_DoSlotActionDefault_self_CastInput) == 0x000440, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::CallFunc_DoSlotActionDefault_self_CastInput' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonDown, CallFunc_DoSlotActionDefault_Slot_CastInput) == 0x000450, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonDown::CallFunc_DoSlotActionDefault_Slot_CastInput' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.OnDragDetected
// 0x0118 (0x0118 - 0x0000)
struct WeaponEquipmentSlotWidget_C_OnDragDetected final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(ConstParm, Parm, OutParm, ReferenceParm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragDropOperation_C*            CallFunc_CreateDragDropOperation_ReturnValue;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragWidget_C*                   CallFunc_Create_ReturnValue;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UItem*                                  CallFunc_GetOperationSpawnValue_Bp_Item;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UEquipableItem*                         CallFunc_GetOperationSpawnValue_Bp_EquipableItem;  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponItem*                            CallFunc_GetOperationSpawnValue_Bp_WeaponItem;     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UThrowableItem*                         CallFunc_GetOperationSpawnValue_Bp_ThrowableItem;  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAttachableItem*                        CallFunc_GetOperationSpawnValue_Bp_AttachmentItem; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        CallFunc_GetOperationSpawnValue_Bp_SlotItem;       // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_GetOperationSpawnValue_Bp_Container;      // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragDropOperation_C*            OutOperation;                                      // 0x0110(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_OnDragDetected) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_OnDragDetected");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_OnDragDetected) == 0x000118, "Wrong size on WeaponEquipmentSlotWidget_C_OnDragDetected");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragDetected, MyGeometry) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_OnDragDetected::MyGeometry' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragDetected, PointerEvent) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_OnDragDetected::PointerEvent' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragDetected, Operation) == 0x0000B0, "Member 'WeaponEquipmentSlotWidget_C_OnDragDetected::Operation' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragDetected, CallFunc_CreateDragDropOperation_ReturnValue) == 0x0000B8, "Member 'WeaponEquipmentSlotWidget_C_OnDragDetected::CallFunc_CreateDragDropOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragDetected, CallFunc_Create_ReturnValue) == 0x0000C0, "Member 'WeaponEquipmentSlotWidget_C_OnDragDetected::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragDetected, CallFunc_GetOperationSpawnValue_Bp_Item) == 0x0000C8, "Member 'WeaponEquipmentSlotWidget_C_OnDragDetected::CallFunc_GetOperationSpawnValue_Bp_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragDetected, CallFunc_GetOperationSpawnValue_Bp_EquipableItem) == 0x0000D0, "Member 'WeaponEquipmentSlotWidget_C_OnDragDetected::CallFunc_GetOperationSpawnValue_Bp_EquipableItem' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragDetected, CallFunc_GetOperationSpawnValue_Bp_WeaponItem) == 0x0000D8, "Member 'WeaponEquipmentSlotWidget_C_OnDragDetected::CallFunc_GetOperationSpawnValue_Bp_WeaponItem' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragDetected, CallFunc_GetOperationSpawnValue_Bp_ThrowableItem) == 0x0000E0, "Member 'WeaponEquipmentSlotWidget_C_OnDragDetected::CallFunc_GetOperationSpawnValue_Bp_ThrowableItem' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragDetected, CallFunc_GetOperationSpawnValue_Bp_AttachmentItem) == 0x0000E8, "Member 'WeaponEquipmentSlotWidget_C_OnDragDetected::CallFunc_GetOperationSpawnValue_Bp_AttachmentItem' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragDetected, CallFunc_GetOperationSpawnValue_Bp_SlotItem) == 0x0000F0, "Member 'WeaponEquipmentSlotWidget_C_OnDragDetected::CallFunc_GetOperationSpawnValue_Bp_SlotItem' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragDetected, CallFunc_GetOperationSpawnValue_Bp_Container) == 0x000100, "Member 'WeaponEquipmentSlotWidget_C_OnDragDetected::CallFunc_GetOperationSpawnValue_Bp_Container' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDragDetected, OutOperation) == 0x000110, "Member 'WeaponEquipmentSlotWidget_C_OnDragDetected::OutOperation' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.OnMouseButtonUp
// 0x02C0 (0x02C0 - 0x0000)
struct WeaponEquipmentSlotWidget_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00A8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon*                             CallFunc_GetWeaponByIndex_ReturnValue;             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0170(0x00A8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0218(0x00A8)()
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_OnMouseButtonUp");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_OnMouseButtonUp) == 0x0002C0, "Wrong size on WeaponEquipmentSlotWidget_C_OnMouseButtonUp");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonUp, ReturnValue) == 0x0000B0, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonUp, CallFunc_IsValid_ReturnValue) == 0x000158, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonUp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonUp, CallFunc_GetWeaponByIndex_ReturnValue) == 0x000160, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonUp::CallFunc_GetWeaponByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonUp, CallFunc_IsValid_ReturnValue2) == 0x000168, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonUp::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonUp, CallFunc_Unhandled_ReturnValue) == 0x000170, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000218, "Member 'WeaponEquipmentSlotWidget_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.InitializeWeaponEquipSlot
// 0x0080 (0x0080 - 0x0000)
struct WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot final
{
public:
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Array_Index_Variable;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AInventory*                             CallFunc_GetInventory_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponAttachmentSlotWidget_C*          CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue3;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue4;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue5;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot) == 0x000080, "Wrong size on WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, m__int_Loop_Counter_Variable) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, m__int_Array_Index_Variable) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000029, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_BooleanOR_ReturnValue) == 0x00002A, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000030, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_IsValid_ReturnValue2) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_GetInventoryFacade_ReturnValue) == 0x000040, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_GetInventoryFacade_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_GetInventory_ReturnValue) == 0x000048, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_GetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_IsValid_ReturnValue3) == 0x000050, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_IsValid_ReturnValue4) == 0x000051, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_Array_Get_Item) == 0x000058, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_Array_Add_ReturnValue2) == 0x00006C, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_Array_Add_ReturnValue3) == 0x000070, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_Array_Add_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_Array_Add_ReturnValue4) == 0x000074, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_Array_Add_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot, CallFunc_Array_Add_ReturnValue5) == 0x000078, "Member 'WeaponEquipmentSlotWidget_C_InitializeWeaponEquipSlot::CallFunc_Array_Add_ReturnValue5' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.MainPrepass_0
// 0x00B0 (0x00B0 - 0x0000)
struct WeaponEquipmentSlotWidget_C_MainPrepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FEquipPosition                         CallFunc_WeaponIndexToEquipPosition_ReturnValue;   // 0x0070(0x0008)()
	class AWeaponStudio_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UEquipableItem*                         CallFunc_GetItem_ReturnValue;                      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UThrowableItem*                         K2Node_DynamicCast_AsThrowable_Item;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponItem*                            K2Node_DynamicCast_AsWeapon_Item;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_MainPrepass_0) == 0x000010, "Wrong alignment on WeaponEquipmentSlotWidget_C_MainPrepass_0");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_MainPrepass_0) == 0x0000B0, "Wrong size on WeaponEquipmentSlotWidget_C_MainPrepass_0");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, BoundWidget) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, CallFunc_IsValid_ReturnValue2) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00001C, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, CallFunc_MakeVector_ReturnValue) == 0x000024, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, CallFunc_IsValid_ReturnValue3) == 0x000060, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000068, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, CallFunc_WeaponIndexToEquipPosition_ReturnValue) == 0x000070, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::CallFunc_WeaponIndexToEquipPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, CallFunc_FinishSpawningActor_ReturnValue) == 0x000078, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, CallFunc_GetItem_ReturnValue) == 0x000080, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::CallFunc_GetItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000088, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, CallFunc_BooleanAND_ReturnValue) == 0x000089, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, K2Node_DynamicCast_AsThrowable_Item) == 0x000090, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::K2Node_DynamicCast_AsThrowable_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, K2Node_DynamicCast_AsWeapon_Item) == 0x0000A0, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::K2Node_DynamicCast_AsWeapon_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_MainPrepass_0, K2Node_DynamicCast_bSuccess2) == 0x0000A8, "Member 'WeaponEquipmentSlotWidget_C_MainPrepass_0::K2Node_DynamicCast_bSuccess2' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.GetWeaponSlotEquipId
// 0x0010 (0x0010 - 0x0000)
struct WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId final
{
public:
	EEquipSlotID                                  EquipSlotID_0;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Variable;                                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEquipSlotID                                  m__byte_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEquipSlotID                                  m__byte_Variable2;                                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEquipSlotID                                  m__byte_Variable3;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEquipSlotID                                  m__byte_Variable4;                                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEquipSlotID                                  m__byte_Variable5;                                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEquipSlotID                                  K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId) == 0x000004, "Wrong alignment on WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId) == 0x000010, "Wrong size on WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId, EquipSlotID_0) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId::EquipSlotID_0' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId, m__int_Variable) == 0x000004, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId::m__int_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId, m__byte_Variable) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId, m__byte_Variable2) == 0x000009, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId, m__byte_Variable3) == 0x00000A, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId::m__byte_Variable3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId, m__byte_Variable4) == 0x00000B, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId::m__byte_Variable4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId, m__byte_Variable5) == 0x00000C, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId::m__byte_Variable5' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId, K2Node_Select_Default) == 0x00000D, "Member 'WeaponEquipmentSlotWidget_C_GetWeaponSlotEquipId::K2Node_Select_Default' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.OnDrop
// 0x0188 (0x0188 - 0x0000)
struct WeaponEquipmentSlotWidget_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotWidgetBaseInterface_C> K2Node_DynamicCast_AsSlot_Widget_Base_Interface;   // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00D8(0x0010)(ZeroConstructor)
	TScriptInterface<class ISlotInterface>        CallFunc_GetSlotItem_SlotItem;                     // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F8(0x0010)(ZeroConstructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWeapon_ReturnValue;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAttachment_ReturnValue;                 // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113[0x5];                                      // 0x0113(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotContainerInterface> CallFunc_GetSlotContainer_SlotContainer;           // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue2;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue2;            // 0x0138(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0148(0x0010)(ZeroConstructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotContainerInterface> CallFunc_DropSlotOnOtherContainer_OtherContainer_CastInput; // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotContainerInterface> CallFunc_DropSlotOnOtherContainer_OtherContainer2_CastInput; // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_OnDrop) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_OnDrop");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_OnDrop) == 0x000188, "Wrong size on WeaponEquipmentSlotWidget_C_OnDrop");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, MyGeometry) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, PointerEvent) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, Operation) == 0x0000B0, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, ReturnValue) == 0x0000B8, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, K2Node_DynamicCast_AsSlot_Widget_Base_Interface) == 0x0000C0, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::K2Node_DynamicCast_AsSlot_Widget_Base_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, CallFunc_Conv_IntToString_ReturnValue) == 0x0000D8, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, CallFunc_GetSlotItem_SlotItem) == 0x0000E8, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::CallFunc_GetSlotItem_SlotItem' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F8, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000108, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, CallFunc_IsWeapon_ReturnValue) == 0x000110, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::CallFunc_IsWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, CallFunc_IsValid_ReturnValue) == 0x000111, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, CallFunc_IsAttachment_ReturnValue) == 0x000112, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::CallFunc_IsAttachment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, CallFunc_GetSlotContainer_SlotContainer) == 0x000118, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::CallFunc_GetSlotContainer_SlotContainer' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, CallFunc_Conv_InterfaceToObject_ReturnValue2) == 0x000128, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::CallFunc_Conv_InterfaceToObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, CallFunc_IsValid_ReturnValue2) == 0x000130, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, CallFunc_Conv_IntToString_ReturnValue2) == 0x000138, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::CallFunc_Conv_IntToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, CallFunc_Concat_StrStr_ReturnValue2) == 0x000148, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, CallFunc_IsValid_ReturnValue3) == 0x000158, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, CallFunc_DropSlotOnOtherContainer_OtherContainer_CastInput) == 0x000160, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::CallFunc_DropSlotOnOtherContainer_OtherContainer_CastInput' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, CallFunc_IsValid_ReturnValue4) == 0x000170, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnDrop, CallFunc_DropSlotOnOtherContainer_OtherContainer2_CastInput) == 0x000178, "Member 'WeaponEquipmentSlotWidget_C_OnDrop::CallFunc_DropSlotOnOtherContainer_OtherContainer2_CastInput' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.IsSlotOn_Bp
// 0x00E0 (0x00E0 - 0x0000)
struct WeaponEquipmentSlotWidget_C_IsSlotOn_Bp final
{
public:
	bool                                          IsOn;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableAction_IsEnableAction;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEquipPosition                         CallFunc_FindEquipableWeaponPosition_WeaponPosition; // 0x0004(0x0008)()
	int32                                         CallFunc_EquipPositionToWeaponIndex_ReturnValue;   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDragDroppingItemWeapon_IsWeapon;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableAction_IsEnableAction2;           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInEquipment_NewParam;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryWidget_C*                     CallFunc_GetInventoryWidget_InventoryWidget;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotInterface>        CallFunc_GetMouseOverItem_Slot;                    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_GetMouseOverItem_Container;               // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UItem*                                  CallFunc_GetMouseOverItem_Item;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UEquipableItem*                         CallFunc_GetMouseOverItem_EquipableItem;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAttachableItem*                        CallFunc_GetMouseOverItem_AttachableItem;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FName                                   CallFunc_GetDefaultActionName_ReturnValue;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWeapon_ReturnValue;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue2;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEquipPosition                         CallFunc_FindEquipableWeaponPosition_WeaponPosition2; // 0x008C(0x0008)()
	int32                                         CallFunc_EquipPositionToWeaponIndex_ReturnValue2;  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue3;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FEquipPosition                         CallFunc_FindEquipableWeaponPosition_ReturnValue;  // 0x009C(0x0008)()
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipableItem*                         CallFunc_GetItem_ReturnValue;                      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_EquipPositionToWeaponIndex_ReturnValue3;  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue4;           // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue2;     // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FName                                   CallFunc_GetActionName_ActionName;                 // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName2_CmpSuccess;                     // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTslItemDragDropOperation_C*            CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragDropOperation_C*            Operation;                                         // 0x00D8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_IsSlotOn_Bp");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp) == 0x0000E0, "Wrong size on WeaponEquipmentSlotWidget_C_IsSlotOn_Bp");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, IsOn) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::IsOn' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_IsEnableAction_IsEnableAction) == 0x000002, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_IsEnableAction_IsEnableAction' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_FindEquipableWeaponPosition_WeaponPosition) == 0x000004, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_FindEquipableWeaponPosition_WeaponPosition' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_EquipPositionToWeaponIndex_ReturnValue) == 0x00000C, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_EquipPositionToWeaponIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_IsDragDroppingItemWeapon_IsWeapon) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_IsDragDroppingItemWeapon_IsWeapon' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x000011, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_IsEnableAction_IsEnableAction2) == 0x000012, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_IsEnableAction_IsEnableAction2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_IsInEquipment_NewParam) == 0x000013, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_IsInEquipment_NewParam' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_GetInventoryWidget_InventoryWidget) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_GetInventoryWidget_InventoryWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_GetMouseOverItem_Slot) == 0x000028, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_GetMouseOverItem_Slot' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_GetMouseOverItem_Container) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_GetMouseOverItem_Container' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_GetMouseOverItem_Item) == 0x000048, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_GetMouseOverItem_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_GetMouseOverItem_EquipableItem) == 0x000050, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_GetMouseOverItem_EquipableItem' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_GetMouseOverItem_AttachableItem) == 0x000058, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_GetMouseOverItem_AttachableItem' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000060, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000068, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_IsValid_ReturnValue2) == 0x000069, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_GetDefaultActionName_ReturnValue) == 0x000070, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_GetDefaultActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_IsWeapon_ReturnValue) == 0x000078, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_IsWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, K2Node_SwitchName_CmpSuccess) == 0x000079, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_Conv_InterfaceToObject_ReturnValue2) == 0x000080, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_Conv_InterfaceToObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_IsValid_ReturnValue3) == 0x000088, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_FindEquipableWeaponPosition_WeaponPosition2) == 0x00008C, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_FindEquipableWeaponPosition_WeaponPosition2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_EquipPositionToWeaponIndex_ReturnValue2) == 0x000094, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_EquipPositionToWeaponIndex_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_EqualEqual_IntInt_ReturnValue3) == 0x000098, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_EqualEqual_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_BooleanAND_ReturnValue) == 0x000099, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00009A, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_BooleanAND_ReturnValue2) == 0x00009B, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_FindEquipableWeaponPosition_ReturnValue) == 0x00009C, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_FindEquipableWeaponPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_GetItem_ReturnValue) == 0x0000A8, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_GetItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_IsValid_ReturnValue4) == 0x0000B0, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_EquipPositionToWeaponIndex_ReturnValue3) == 0x0000B4, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_EquipPositionToWeaponIndex_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_Not_PreBool_ReturnValue) == 0x0000B8, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_EqualEqual_IntInt_ReturnValue4) == 0x0000B9, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_EqualEqual_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_BooleanAND_ReturnValue3) == 0x0000BA, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_EqualEqual_ObjectObject_ReturnValue2) == 0x0000BB, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_EqualEqual_ObjectObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_GetActionName_ActionName) == 0x0000C0, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_GetActionName_ActionName' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_IsValid_ReturnValue5) == 0x0000C8, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, K2Node_SwitchName2_CmpSuccess) == 0x0000C9, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::K2Node_SwitchName2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation) == 0x0000D0, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotOn_Bp, Operation) == 0x0000D8, "Member 'WeaponEquipmentSlotWidget_C_IsSlotOn_Bp::Operation' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.IsSlotSubOn_Bp
// 0x0018 (0x0018 - 0x0000)
struct WeaponEquipmentSlotWidget_C_IsSlotSubOn_Bp final
{
public:
	bool                                          SubOn;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTslItemDragDropOperation_C*            CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_IsSlotSubOn_Bp) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_IsSlotSubOn_Bp");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_IsSlotSubOn_Bp) == 0x000018, "Wrong size on WeaponEquipmentSlotWidget_C_IsSlotSubOn_Bp");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotSubOn_Bp, SubOn) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_IsSlotSubOn_Bp::SubOn' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotSubOn_Bp, CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_IsSlotSubOn_Bp::CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotSubOn_Bp, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_IsSlotSubOn_Bp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotSubOn_Bp, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'WeaponEquipmentSlotWidget_C_IsSlotSubOn_Bp::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.IsSlotMouseOver_Bp
// 0x0018 (0x0018 - 0x0000)
struct WeaponEquipmentSlotWidget_C_IsSlotMouseOver_Bp final
{
public:
	bool                                          IsMouseOver;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAttachmentSlotMouseOver_MouseOver;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTslItemDragDropOperation_C*            CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_IsSlotMouseOver_Bp) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_IsSlotMouseOver_Bp");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_IsSlotMouseOver_Bp) == 0x000018, "Wrong size on WeaponEquipmentSlotWidget_C_IsSlotMouseOver_Bp");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotMouseOver_Bp, IsMouseOver) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_IsSlotMouseOver_Bp::IsMouseOver' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotMouseOver_Bp, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WeaponEquipmentSlotWidget_C_IsSlotMouseOver_Bp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotMouseOver_Bp, CallFunc_IsAttachmentSlotMouseOver_MouseOver) == 0x000002, "Member 'WeaponEquipmentSlotWidget_C_IsSlotMouseOver_Bp::CallFunc_IsAttachmentSlotMouseOver_MouseOver' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotMouseOver_Bp, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'WeaponEquipmentSlotWidget_C_IsSlotMouseOver_Bp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotMouseOver_Bp, CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_IsSlotMouseOver_Bp::CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsSlotMouseOver_Bp, CallFunc_IsValid_ReturnValue2) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_IsSlotMouseOver_Bp::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.IsAttachmentSlotMouseOver
// 0x0028 (0x0028 - 0x0000)
struct WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver final
{
public:
	bool                                          MouseOver;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponAttachmentSlotWidget_C*          CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSlotMouseOver_Bp_IsMouseOver;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver) == 0x000028, "Wrong size on WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver, MouseOver) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver::MouseOver' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver, m__int_Array_Index_Variable) == 0x000004, "Member 'WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver, m__int_Loop_Counter_Variable) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver, CallFunc_Array_Get_Item) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver, CallFunc_IsSlotMouseOver_Bp_IsMouseOver) == 0x000021, "Member 'WeaponEquipmentSlotWidget_C_IsAttachmentSlotMouseOver::CallFunc_IsSlotMouseOver_Bp_IsMouseOver' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.GetItem_Bp
// 0x0018 (0x0018 - 0x0000)
struct WeaponEquipmentSlotWidget_C_GetItem_Bp final
{
public:
	class UItem*                                  Item_0;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FEquipPosition                         CallFunc_WeaponIndexToEquipPosition_ReturnValue;   // 0x0008(0x0008)()
	class UEquipableItem*                         CallFunc_GetItem_ReturnValue;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_GetItem_Bp) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_GetItem_Bp");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_GetItem_Bp) == 0x000018, "Wrong size on WeaponEquipmentSlotWidget_C_GetItem_Bp");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetItem_Bp, Item_0) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_GetItem_Bp::Item_0' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetItem_Bp, CallFunc_WeaponIndexToEquipPosition_ReturnValue) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_GetItem_Bp::CallFunc_WeaponIndexToEquipPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetItem_Bp, CallFunc_GetItem_ReturnValue) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_GetItem_Bp::CallFunc_GetItem_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.On_WeaponCaptureImage_Prepass_0
// 0x0028 (0x0028 - 0x0000)
struct WeaponEquipmentSlotWidget_C_On_WeaponCaptureImage_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UImage*                                 K2Node_DynamicCast_AsImage;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_On_WeaponCaptureImage_Prepass_0) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_On_WeaponCaptureImage_Prepass_0");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_On_WeaponCaptureImage_Prepass_0) == 0x000028, "Wrong size on WeaponEquipmentSlotWidget_C_On_WeaponCaptureImage_Prepass_0");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_WeaponCaptureImage_Prepass_0, BoundWidget) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_On_WeaponCaptureImage_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_WeaponCaptureImage_Prepass_0, K2Node_DynamicCast_AsImage) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_On_WeaponCaptureImage_Prepass_0::K2Node_DynamicCast_AsImage' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_WeaponCaptureImage_Prepass_0, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_On_WeaponCaptureImage_Prepass_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_WeaponCaptureImage_Prepass_0, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_On_WeaponCaptureImage_Prepass_0::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_WeaponCaptureImage_Prepass_0, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_On_WeaponCaptureImage_Prepass_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.OnUpdateWeapon
// 0x00E0 (0x00E0 - 0x0000)
struct WeaponEquipmentSlotWidget_C_OnUpdateWeapon final
{
public:
	int32                                         m__int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* SpawnedActor)>   K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon*                             CallFunc_GetWeaponByIndex_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class ATslWeapon_Gun*                         K2Node_DynamicCast_AsTsl_Weapon_Gun;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEquipPosition                         CallFunc_WeaponIndexToEquipPosition_ReturnValue;   // 0x007C(0x0008)()
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipableItem*                         CallFunc_GetItem_ReturnValue;                      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponAttachmentSlotWidget_C*          CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslHUD*                                K2Node_DynamicCast_AsTsl_HUD;                      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UThrowableItem*                         K2Node_DynamicCast_AsThrowable_Item;               // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponItem*                            K2Node_DynamicCast_AsWeapon_Item;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon) == 0x000010, "Wrong alignment on WeaponEquipmentSlotWidget_C_OnUpdateWeapon");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon) == 0x0000E0, "Wrong size on WeaponEquipmentSlotWidget_C_OnUpdateWeapon");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, m__int_Array_Index_Variable) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, m__int_Loop_Counter_Variable) == 0x000004, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, CallFunc_GetWeaponByIndex_ReturnValue) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::CallFunc_GetWeaponByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, K2Node_DynamicCast_AsTsl_Weapon_Gun) == 0x000070, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::K2Node_DynamicCast_AsTsl_Weapon_Gun' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, CallFunc_WeaponIndexToEquipPosition_ReturnValue) == 0x00007C, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::CallFunc_WeaponIndexToEquipPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, CallFunc_GetItem_ReturnValue) == 0x000088, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::CallFunc_GetItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, CallFunc_Array_Get_Item) == 0x000090, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000A0, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, CallFunc_GetHUD_ReturnValue) == 0x0000A8, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, K2Node_DynamicCast_AsTsl_HUD) == 0x0000B0, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::K2Node_DynamicCast_AsTsl_HUD' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, K2Node_DynamicCast_bSuccess2) == 0x0000B8, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, CallFunc_IsValid_ReturnValue2) == 0x0000B9, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, CallFunc_IsValid_ReturnValue3) == 0x0000BA, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, K2Node_DynamicCast_AsThrowable_Item) == 0x0000C0, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::K2Node_DynamicCast_AsThrowable_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, K2Node_DynamicCast_bSuccess3) == 0x0000C8, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, K2Node_DynamicCast_AsWeapon_Item) == 0x0000D0, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::K2Node_DynamicCast_AsWeapon_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, K2Node_DynamicCast_bSuccess4) == 0x0000D8, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000D9, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnUpdateWeapon, CallFunc_BooleanAND_ReturnValue) == 0x0000DA, "Member 'WeaponEquipmentSlotWidget_C_OnUpdateWeapon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.On_KeyName_Prepass_0
// 0x0078 (0x0078 - 0x0000)
struct WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Variable;                                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FName                                   m__name_Variable;                                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                   m__name_Variable2;                                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                   m__name_Variable3;                                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                   m__name_Variable4;                                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                   m__name_Variable5;                                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                   K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTslInputKey                           CallFunc_GetActionKey_ReturnValue;                 // 0x0040(0x0020)()
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0060(0x0018)()
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0) == 0x000078, "Wrong size on WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0, BoundWidget) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0, m__int_Variable) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0::m__int_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0, m__name_Variable) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0::m__name_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0, m__name_Variable2) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0::m__name_Variable2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0, m__name_Variable3) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0::m__name_Variable3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0, m__name_Variable4) == 0x000028, "Member 'WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0::m__name_Variable4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0, m__name_Variable5) == 0x000030, "Member 'WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0::m__name_Variable5' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0, K2Node_Select_Default) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0, CallFunc_GetActionKey_ReturnValue) == 0x000040, "Member 'WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0::CallFunc_GetActionKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000060, "Member 'WeaponEquipmentSlotWidget_C_On_KeyName_Prepass_0::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.On_WeaponName_Prepass_0
// 0x0008 (0x0008 - 0x0000)
struct WeaponEquipmentSlotWidget_C_On_WeaponName_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_On_WeaponName_Prepass_0) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_On_WeaponName_Prepass_0");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_On_WeaponName_Prepass_0) == 0x000008, "Wrong size on WeaponEquipmentSlotWidget_C_On_WeaponName_Prepass_0");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_WeaponName_Prepass_0, BoundWidget) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_On_WeaponName_Prepass_0::BoundWidget' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.On_WeaponHandsOnLoadedAmmoCount_Prepass_0
// 0x0028 (0x0028 - 0x0000)
struct WeaponEquipmentSlotWidget_C_On_WeaponHandsOnLoadedAmmoCount_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetHandOnLoadedAmmoCount_Count;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_On_WeaponHandsOnLoadedAmmoCount_Prepass_0) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_On_WeaponHandsOnLoadedAmmoCount_Prepass_0");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_On_WeaponHandsOnLoadedAmmoCount_Prepass_0) == 0x000028, "Wrong size on WeaponEquipmentSlotWidget_C_On_WeaponHandsOnLoadedAmmoCount_Prepass_0");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_WeaponHandsOnLoadedAmmoCount_Prepass_0, BoundWidget) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_On_WeaponHandsOnLoadedAmmoCount_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_WeaponHandsOnLoadedAmmoCount_Prepass_0, CallFunc_GetHandOnLoadedAmmoCount_Count) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_On_WeaponHandsOnLoadedAmmoCount_Prepass_0::CallFunc_GetHandOnLoadedAmmoCount_Count' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_WeaponHandsOnLoadedAmmoCount_Prepass_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_On_WeaponHandsOnLoadedAmmoCount_Prepass_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.On_WeaponHandsOnUnloadedAmmoCount_Prepass_0
// 0x0028 (0x0028 - 0x0000)
struct WeaponEquipmentSlotWidget_C_On_WeaponHandsOnUnloadedAmmoCount_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetHandOnUnLoadedAmmoCount_Count;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_On_WeaponHandsOnUnloadedAmmoCount_Prepass_0) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_On_WeaponHandsOnUnloadedAmmoCount_Prepass_0");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_On_WeaponHandsOnUnloadedAmmoCount_Prepass_0) == 0x000028, "Wrong size on WeaponEquipmentSlotWidget_C_On_WeaponHandsOnUnloadedAmmoCount_Prepass_0");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_WeaponHandsOnUnloadedAmmoCount_Prepass_0, BoundWidget) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_On_WeaponHandsOnUnloadedAmmoCount_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_WeaponHandsOnUnloadedAmmoCount_Prepass_0, CallFunc_GetHandOnUnLoadedAmmoCount_Count) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_On_WeaponHandsOnUnloadedAmmoCount_Prepass_0::CallFunc_GetHandOnUnLoadedAmmoCount_Count' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_WeaponHandsOnUnloadedAmmoCount_Prepass_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_On_WeaponHandsOnUnloadedAmmoCount_Prepass_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.On_AmmoInfoLayer_Prepass_0
// 0x0010 (0x0010 - 0x0000)
struct WeaponEquipmentSlotWidget_C_On_AmmoInfoLayer_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_On_AmmoInfoLayer_Prepass_0) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_On_AmmoInfoLayer_Prepass_0");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_On_AmmoInfoLayer_Prepass_0) == 0x000010, "Wrong size on WeaponEquipmentSlotWidget_C_On_AmmoInfoLayer_Prepass_0");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_AmmoInfoLayer_Prepass_0, BoundWidget) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_On_AmmoInfoLayer_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_AmmoInfoLayer_Prepass_0, m__bool_Variable) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_On_AmmoInfoLayer_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_AmmoInfoLayer_Prepass_0, m__byte_Variable) == 0x000009, "Member 'WeaponEquipmentSlotWidget_C_On_AmmoInfoLayer_Prepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_AmmoInfoLayer_Prepass_0, m__byte_Variable2) == 0x00000A, "Member 'WeaponEquipmentSlotWidget_C_On_AmmoInfoLayer_Prepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_AmmoInfoLayer_Prepass_0, CallFunc_IsValid_ReturnValue) == 0x00000B, "Member 'WeaponEquipmentSlotWidget_C_On_AmmoInfoLayer_Prepass_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_AmmoInfoLayer_Prepass_0, K2Node_Select_Default) == 0x00000C, "Member 'WeaponEquipmentSlotWidget_C_On_AmmoInfoLayer_Prepass_0::K2Node_Select_Default' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.On_AmmoName_Prepass_0
// 0x0020 (0x0020 - 0x0000)
struct WeaponEquipmentSlotWidget_C_On_AmmoName_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_GetAmmoName_ItemName;                     // 0x0008(0x0018)()
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_On_AmmoName_Prepass_0) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_On_AmmoName_Prepass_0");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_On_AmmoName_Prepass_0) == 0x000020, "Wrong size on WeaponEquipmentSlotWidget_C_On_AmmoName_Prepass_0");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_AmmoName_Prepass_0, BoundWidget) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_On_AmmoName_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_AmmoName_Prepass_0, CallFunc_GetAmmoName_ItemName) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_On_AmmoName_Prepass_0::CallFunc_GetAmmoName_ItemName' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.GetHandOnLoadedAmmoCount
// 0x000C (0x000C - 0x0000)
struct WeaponEquipmentSlotWidget_C_GetHandOnLoadedAmmoCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentAmmoInClip_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_GetHandOnLoadedAmmoCount) == 0x000004, "Wrong alignment on WeaponEquipmentSlotWidget_C_GetHandOnLoadedAmmoCount");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_GetHandOnLoadedAmmoCount) == 0x00000C, "Wrong size on WeaponEquipmentSlotWidget_C_GetHandOnLoadedAmmoCount");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetHandOnLoadedAmmoCount, Count) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_GetHandOnLoadedAmmoCount::Count' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetHandOnLoadedAmmoCount, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WeaponEquipmentSlotWidget_C_GetHandOnLoadedAmmoCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetHandOnLoadedAmmoCount, CallFunc_GetCurrentAmmoInClip_ReturnValue) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_GetHandOnLoadedAmmoCount::CallFunc_GetCurrentAmmoInClip_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.GetHandOnUnLoadedAmmoCount
// 0x000C (0x000C - 0x0000)
struct WeaponEquipmentSlotWidget_C_GetHandOnUnLoadedAmmoCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentAmmoInInventory_ReturnValue;    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_GetHandOnUnLoadedAmmoCount) == 0x000004, "Wrong alignment on WeaponEquipmentSlotWidget_C_GetHandOnUnLoadedAmmoCount");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_GetHandOnUnLoadedAmmoCount) == 0x00000C, "Wrong size on WeaponEquipmentSlotWidget_C_GetHandOnUnLoadedAmmoCount");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetHandOnUnLoadedAmmoCount, Count) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_GetHandOnUnLoadedAmmoCount::Count' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetHandOnUnLoadedAmmoCount, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WeaponEquipmentSlotWidget_C_GetHandOnUnLoadedAmmoCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetHandOnUnLoadedAmmoCount, CallFunc_GetCurrentAmmoInInventory_ReturnValue) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_GetHandOnUnLoadedAmmoCount::CallFunc_GetCurrentAmmoInInventory_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.GetAmmoIcon
// 0x0180 (0x0180 - 0x0000)
struct WeaponEquipmentSlotWidget_C_GetAmmoIcon final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0090)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon*                             CallFunc_GetWeaponByIndex_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslWeapon_Gun*                         K2Node_DynamicCast_AsTsl_Weapon_Gun;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAmmoItem*                              CallFunc_GetDefaultAmmoObject_ReturnValue;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00B8(0x0028)()
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00F0(0x0090)()
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_GetAmmoIcon) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_GetAmmoIcon");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_GetAmmoIcon) == 0x000180, "Wrong size on WeaponEquipmentSlotWidget_C_GetAmmoIcon");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoIcon, ReturnValue) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoIcon::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoIcon, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoIcon, CallFunc_GetWeaponByIndex_ReturnValue) == 0x000098, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoIcon::CallFunc_GetWeaponByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoIcon, K2Node_DynamicCast_AsTsl_Weapon_Gun) == 0x0000A0, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoIcon::K2Node_DynamicCast_AsTsl_Weapon_Gun' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoIcon, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoIcon, CallFunc_MakeLiteralFloat_ReturnValue) == 0x0000AC, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoIcon::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoIcon, CallFunc_GetDefaultAmmoObject_ReturnValue) == 0x0000B0, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoIcon::CallFunc_GetDefaultAmmoObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoIcon, K2Node_MakeStruct_SlateColor) == 0x0000B8, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoIcon::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoIcon, CallFunc_IsValid_ReturnValue2) == 0x0000E0, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoIcon::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoIcon, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E4, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoIcon::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoIcon, CallFunc_MakeVector2D_ReturnValue) == 0x0000E8, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoIcon::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoIcon, K2Node_MakeStruct_SlateBrush) == 0x0000F0, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoIcon::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.GetAmmoName
// 0x0050 (0x0050 - 0x0000)
struct WeaponEquipmentSlotWidget_C_GetAmmoName final
{
public:
	class FText                                   ItemName;                                          // 0x0000(0x0018)(Parm, OutParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetAmmoItemClass_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FInventoryItem>                 CallFunc_GetAllItemsByType_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryItem                         CallFunc_Array_Get_Item;                           // 0x0040(0x0010)()
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_GetAmmoName) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_GetAmmoName");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_GetAmmoName) == 0x000050, "Wrong size on WeaponEquipmentSlotWidget_C_GetAmmoName");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoName, ItemName) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoName::ItemName' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoName, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoName, CallFunc_IsValid_ReturnValue2) == 0x000019, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoName::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoName, CallFunc_GetAmmoItemClass_ReturnValue) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoName::CallFunc_GetAmmoItemClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoName, CallFunc_GetAllItemsByType_ReturnValue) == 0x000028, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoName::CallFunc_GetAllItemsByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoName, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoName::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetAmmoName, CallFunc_Array_Get_Item) == 0x000040, "Member 'WeaponEquipmentSlotWidget_C_GetAmmoName::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.On_AmmoIcon_Prepass_0
// 0x0098 (0x0098 - 0x0000)
struct WeaponEquipmentSlotWidget_C_On_AmmoIcon_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateBrush                            CallFunc_GetAmmoIcon_ReturnValue;                  // 0x0008(0x0090)()
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_On_AmmoIcon_Prepass_0) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_On_AmmoIcon_Prepass_0");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_On_AmmoIcon_Prepass_0) == 0x000098, "Wrong size on WeaponEquipmentSlotWidget_C_On_AmmoIcon_Prepass_0");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_AmmoIcon_Prepass_0, BoundWidget) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_On_AmmoIcon_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_AmmoIcon_Prepass_0, CallFunc_GetAmmoIcon_ReturnValue) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_On_AmmoIcon_Prepass_0::CallFunc_GetAmmoIcon_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.UpdateWeaponGunInfo
// 0x0010 (0x0010 - 0x0000)
struct WeaponEquipmentSlotWidget_C_UpdateWeaponGunInfo final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_UpdateWeaponGunInfo) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_UpdateWeaponGunInfo");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_UpdateWeaponGunInfo) == 0x000010, "Wrong size on WeaponEquipmentSlotWidget_C_UpdateWeaponGunInfo");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_UpdateWeaponGunInfo, BoundWidget) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_UpdateWeaponGunInfo::BoundWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_UpdateWeaponGunInfo, m__bool_Variable) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_UpdateWeaponGunInfo::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_UpdateWeaponGunInfo, m__byte_Variable) == 0x000009, "Member 'WeaponEquipmentSlotWidget_C_UpdateWeaponGunInfo::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_UpdateWeaponGunInfo, m__byte_Variable2) == 0x00000A, "Member 'WeaponEquipmentSlotWidget_C_UpdateWeaponGunInfo::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_UpdateWeaponGunInfo, CallFunc_IsValid_ReturnValue) == 0x00000B, "Member 'WeaponEquipmentSlotWidget_C_UpdateWeaponGunInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_UpdateWeaponGunInfo, K2Node_Select_Default) == 0x00000C, "Member 'WeaponEquipmentSlotWidget_C_UpdateWeaponGunInfo::K2Node_Select_Default' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.FindEquipableWeaponPosition
// 0x0030 (0x0030 - 0x0000)
struct WeaponEquipmentSlotWidget_C_FindEquipableWeaponPosition final
{
public:
	struct FEquipPosition                         WeaponPosition;                                    // 0x0000(0x0008)(Parm, OutParm)
	class FString                                 CallFunc_GetOptions_Bp_Options;                    // 0x0008(0x0010)(ZeroConstructor)
	class UEquipableItem*                         CallFunc_GetDragDroppingEquipableItem_EquipableItem; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FEquipPosition                         CallFunc_FindEquipableWeaponPosition_ReturnValue;  // 0x0020(0x0008)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_FindEquipableWeaponPosition) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_FindEquipableWeaponPosition");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_FindEquipableWeaponPosition) == 0x000030, "Wrong size on WeaponEquipmentSlotWidget_C_FindEquipableWeaponPosition");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_FindEquipableWeaponPosition, WeaponPosition) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_FindEquipableWeaponPosition::WeaponPosition' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_FindEquipableWeaponPosition, CallFunc_GetOptions_Bp_Options) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_FindEquipableWeaponPosition::CallFunc_GetOptions_Bp_Options' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_FindEquipableWeaponPosition, CallFunc_GetDragDroppingEquipableItem_EquipableItem) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_FindEquipableWeaponPosition::CallFunc_GetDragDroppingEquipableItem_EquipableItem' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_FindEquipableWeaponPosition, CallFunc_FindEquipableWeaponPosition_ReturnValue) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_FindEquipableWeaponPosition::CallFunc_FindEquipableWeaponPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_FindEquipableWeaponPosition, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WeaponEquipmentSlotWidget_C_FindEquipableWeaponPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.GetDragDroppingEquipableItem
// 0x0018 (0x0018 - 0x0000)
struct WeaponEquipmentSlotWidget_C_GetDragDroppingEquipableItem final
{
public:
	class UEquipableItem*                         EquipableItem_0;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragDropOperation_C*            CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_GetDragDroppingEquipableItem) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_GetDragDroppingEquipableItem");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_GetDragDroppingEquipableItem) == 0x000018, "Wrong size on WeaponEquipmentSlotWidget_C_GetDragDroppingEquipableItem");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetDragDroppingEquipableItem, EquipableItem_0) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_GetDragDroppingEquipableItem::EquipableItem_0' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetDragDroppingEquipableItem, CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_GetDragDroppingEquipableItem::CallFunc_GetTslItemDragDropOperation_Bp_TslItemDragDropOperation' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetDragDroppingEquipableItem, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_GetDragDroppingEquipableItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.OnSpawnActorInSceneCaptureWorld
// 0x0018 (0x0018 - 0x0000)
struct WeaponEquipmentSlotWidget_C_OnSpawnActorInSceneCaptureWorld final
{
public:
	class AActor*                                 SpawnedActor;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AItemStudio*                            K2Node_DynamicCast_AsItem_Studio;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_OnSpawnActorInSceneCaptureWorld) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_OnSpawnActorInSceneCaptureWorld");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_OnSpawnActorInSceneCaptureWorld) == 0x000018, "Wrong size on WeaponEquipmentSlotWidget_C_OnSpawnActorInSceneCaptureWorld");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnSpawnActorInSceneCaptureWorld, SpawnedActor) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_OnSpawnActorInSceneCaptureWorld::SpawnedActor' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnSpawnActorInSceneCaptureWorld, K2Node_DynamicCast_AsItem_Studio) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_OnSpawnActorInSceneCaptureWorld::K2Node_DynamicCast_AsItem_Studio' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnSpawnActorInSceneCaptureWorld, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_OnSpawnActorInSceneCaptureWorld::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.InputA
// 0x0038 (0x0038 - 0x0000)
struct WeaponEquipmentSlotWidget_C_InputA final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputA_ReturnValue;                       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_InputA) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_InputA");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_InputA) == 0x000038, "Wrong size on WeaponEquipmentSlotWidget_C_InputA");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InputA, ReturnValue) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_InputA::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InputA, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_InputA::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InputA, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_InputA::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InputA, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_InputA::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InputA, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_InputA::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InputA, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WeaponEquipmentSlotWidget_C_InputA::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InputA, CallFunc_InputA_ReturnValue) == 0x000031, "Member 'WeaponEquipmentSlotWidget_C_InputA::CallFunc_InputA_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.On_FocusColorBG_Prepass_0
// 0x0008 (0x0008 - 0x0000)
struct WeaponEquipmentSlotWidget_C_On_FocusColorBG_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_On_FocusColorBG_Prepass_0) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_On_FocusColorBG_Prepass_0");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_On_FocusColorBG_Prepass_0) == 0x000008, "Wrong size on WeaponEquipmentSlotWidget_C_On_FocusColorBG_Prepass_0");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_On_FocusColorBG_Prepass_0, BoundWidget) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_On_FocusColorBG_Prepass_0::BoundWidget' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.SetFocus
// 0x0040 (0x0040 - 0x0000)
struct WeaponEquipmentSlotWidget_C_SetFocus final
{
public:
	bool                                          NewFocus;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_FindFirstFocusableWidget_FocusableWidget; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue2;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_SetFocus) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_SetFocus");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_SetFocus) == 0x000040, "Wrong size on WeaponEquipmentSlotWidget_C_SetFocus");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_SetFocus, NewFocus) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_SetFocus::NewFocus' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_SetFocus, ReturnValue) == 0x000001, "Member 'WeaponEquipmentSlotWidget_C_SetFocus::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_SetFocus, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_SetFocus::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_SetFocus, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_SetFocus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_SetFocus, CallFunc_SetFocus_ReturnValue) == 0x000019, "Member 'WeaponEquipmentSlotWidget_C_SetFocus::CallFunc_SetFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_SetFocus, CallFunc_FindFirstFocusableWidget_FocusableWidget) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_SetFocus::CallFunc_FindFirstFocusableWidget_FocusableWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_SetFocus, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000028, "Member 'WeaponEquipmentSlotWidget_C_SetFocus::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_SetFocus, K2Node_DynamicCast_bSuccess2) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_SetFocus::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_SetFocus, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'WeaponEquipmentSlotWidget_C_SetFocus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_SetFocus, CallFunc_SetFocus_ReturnValue2) == 0x00003A, "Member 'WeaponEquipmentSlotWidget_C_SetFocus::CallFunc_SetFocus_ReturnValue2' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.Left
// 0x0050 (0x0050 - 0x0000)
struct WeaponEquipmentSlotWidget_C_Left final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue2;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetChildLeftFocusableWidget_LeftWidget;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            Temp;                                              // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_Left) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_Left");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_Left) == 0x000050, "Wrong size on WeaponEquipmentSlotWidget_C_Left");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Left, ReturnValue) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_Left::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Left, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_Left::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Left, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_Left::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Left, CallFunc_SetFocus_ReturnValue) == 0x000019, "Member 'WeaponEquipmentSlotWidget_C_Left::CallFunc_SetFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Left, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_Left::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Left, K2Node_DynamicCast_bSuccess2) == 0x000030, "Member 'WeaponEquipmentSlotWidget_C_Left::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Left, CallFunc_SetFocus_ReturnValue2) == 0x000031, "Member 'WeaponEquipmentSlotWidget_C_Left::CallFunc_SetFocus_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Left, CallFunc_GetChildLeftFocusableWidget_LeftWidget) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_Left::CallFunc_GetChildLeftFocusableWidget_LeftWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Left, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WeaponEquipmentSlotWidget_C_Left::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Left, Temp) == 0x000048, "Member 'WeaponEquipmentSlotWidget_C_Left::Temp' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.Down
// 0x0050 (0x0050 - 0x0000)
struct WeaponEquipmentSlotWidget_C_Down final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetChildDownFocusableWidget_DownWidget;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetChildDownFocusableWidget_DownWidget2;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue;                     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_Down) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_Down");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_Down) == 0x000050, "Wrong size on WeaponEquipmentSlotWidget_C_Down");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Down, ReturnValue) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_Down::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Down, CallFunc_GetChildDownFocusableWidget_DownWidget) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_Down::CallFunc_GetChildDownFocusableWidget_DownWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Down, CallFunc_GetChildDownFocusableWidget_DownWidget2) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_Down::CallFunc_GetChildDownFocusableWidget_DownWidget2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Down, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_Down::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Down, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_Down::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Down, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WeaponEquipmentSlotWidget_C_Down::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Down, CallFunc_SetFocus_ReturnValue) == 0x000031, "Member 'WeaponEquipmentSlotWidget_C_Down::CallFunc_SetFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Down, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_Down::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Down, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'WeaponEquipmentSlotWidget_C_Down::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Down, CallFunc_SetFocus_ReturnValue2) == 0x000049, "Member 'WeaponEquipmentSlotWidget_C_Down::CallFunc_SetFocus_ReturnValue2' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.Right
// 0x0048 (0x0048 - 0x0000)
struct WeaponEquipmentSlotWidget_C_Right final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetChildRightFocusableWidget_RightWidget; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue2;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            Temp;                                              // 0x0040(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_Right) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_Right");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_Right) == 0x000048, "Wrong size on WeaponEquipmentSlotWidget_C_Right");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Right, ReturnValue) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_Right::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Right, CallFunc_GetChildRightFocusableWidget_RightWidget) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_Right::CallFunc_GetChildRightFocusableWidget_RightWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Right, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_Right::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Right, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_Right::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Right, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000028, "Member 'WeaponEquipmentSlotWidget_C_Right::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Right, K2Node_DynamicCast_bSuccess2) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_Right::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Right, CallFunc_SetFocus_ReturnValue) == 0x000039, "Member 'WeaponEquipmentSlotWidget_C_Right::CallFunc_SetFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Right, CallFunc_SetFocus_ReturnValue2) == 0x00003A, "Member 'WeaponEquipmentSlotWidget_C_Right::CallFunc_SetFocus_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Right, CallFunc_IsValid_ReturnValue) == 0x00003B, "Member 'WeaponEquipmentSlotWidget_C_Right::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Right, Temp) == 0x000040, "Member 'WeaponEquipmentSlotWidget_C_Right::Temp' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.Up
// 0x0050 (0x0050 - 0x0000)
struct WeaponEquipmentSlotWidget_C_Up final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetChildUpFocusableWidget_UpWidget;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetChildUpFocusableWidget_UpWidget2;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue;                     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_Up) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_Up");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_Up) == 0x000050, "Wrong size on WeaponEquipmentSlotWidget_C_Up");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Up, ReturnValue) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_Up::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Up, CallFunc_GetChildUpFocusableWidget_UpWidget) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_Up::CallFunc_GetChildUpFocusableWidget_UpWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Up, CallFunc_GetChildUpFocusableWidget_UpWidget2) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_Up::CallFunc_GetChildUpFocusableWidget_UpWidget2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Up, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_Up::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Up, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_Up::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Up, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WeaponEquipmentSlotWidget_C_Up::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Up, CallFunc_SetFocus_ReturnValue) == 0x000031, "Member 'WeaponEquipmentSlotWidget_C_Up::CallFunc_SetFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Up, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_Up::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Up, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'WeaponEquipmentSlotWidget_C_Up::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_Up, CallFunc_SetFocus_ReturnValue2) == 0x000049, "Member 'WeaponEquipmentSlotWidget_C_Up::CallFunc_SetFocus_ReturnValue2' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.OnChildSlotRefreshFocus
// 0x0078 (0x0078 - 0x0000)
struct WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus final
{
public:
	bool                                          m__bool_Variable;                                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_FindFirstFocusableWidget_FocusableWidget; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue2;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusable_ReturnValue;                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue3;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus) == 0x000078, "Wrong size on WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus, m__bool_Variable) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus, CallFunc_FindFirstFocusableWidget_FocusableWidget) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus::CallFunc_FindFirstFocusableWidget_FocusableWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus, CallFunc_SetFocus_ReturnValue) == 0x000021, "Member 'WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus::CallFunc_SetFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus, CallFunc_IsValid_ReturnValue) == 0x000022, "Member 'WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000028, "Member 'WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000030, "Member 'WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3) == 0x000050, "Member 'WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus, K2Node_DynamicCast_bSuccess3) == 0x000060, "Member 'WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus, CallFunc_SetFocus_ReturnValue2) == 0x000061, "Member 'WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus::CallFunc_SetFocus_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus, CallFunc_IsFocusable_ReturnValue) == 0x000062, "Member 'WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus::CallFunc_IsFocusable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus, CallFunc_GetFocusingChildWidget_ReturnValue3) == 0x000068, "Member 'WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus::CallFunc_GetFocusingChildWidget_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus, CallFunc_IsValid_ReturnValue2) == 0x000070, "Member 'WeaponEquipmentSlotWidget_C_OnChildSlotRefreshFocus::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.InputB
// 0x0030 (0x0030 - 0x0000)
struct WeaponEquipmentSlotWidget_C_InputB final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputB_ReturnValue;                       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_InputB) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_InputB");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_InputB) == 0x000030, "Wrong size on WeaponEquipmentSlotWidget_C_InputB");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InputB, ReturnValue) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_InputB::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InputB, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_InputB::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InputB, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_InputB::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InputB, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_InputB::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InputB, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WeaponEquipmentSlotWidget_C_InputB::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InputB, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'WeaponEquipmentSlotWidget_C_InputB::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_InputB, CallFunc_InputB_ReturnValue) == 0x00002A, "Member 'WeaponEquipmentSlotWidget_C_InputB::CallFunc_InputB_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.SetGamepadSelfPutAttachmentFocus
// 0x0028 (0x0028 - 0x0000)
struct WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus final
{
public:
	bool                                          bFocus;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponAttachmentSlotWidget_C*          CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus) == 0x000028, "Wrong size on WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus, bFocus) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus::bFocus' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus, m__int_Array_Index_Variable) == 0x000004, "Member 'WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus, m__int_Loop_Counter_Variable) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus, CallFunc_Array_Get_Item) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_SetGamepadSelfPutAttachmentFocus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.GetSlotContainer
// 0x0030 (0x0030 - 0x0000)
struct WeaponEquipmentSlotWidget_C_GetSlotContainer final
{
public:
	TScriptInterface<class ISlotContainerInterface> SlotContainer;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEquipment*                             CallFunc_GetEquipment_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_GetSlotContainer) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_GetSlotContainer");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_GetSlotContainer) == 0x000030, "Wrong size on WeaponEquipmentSlotWidget_C_GetSlotContainer");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetSlotContainer, SlotContainer) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_GetSlotContainer::SlotContainer' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetSlotContainer, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_GetSlotContainer::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetSlotContainer, CallFunc_GetInventoryFacade_ReturnValue) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_GetSlotContainer::CallFunc_GetInventoryFacade_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetSlotContainer, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_GetSlotContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetSlotContainer, CallFunc_GetEquipment_ReturnValue) == 0x000028, "Member 'WeaponEquipmentSlotWidget_C_GetSlotContainer::CallFunc_GetEquipment_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.GetSlotItem
// 0x0030 (0x0030 - 0x0000)
struct WeaponEquipmentSlotWidget_C_GetSlotItem final
{
public:
	TScriptInterface<class ISlotInterface>        SlotItem;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEquipPosition                         CallFunc_WeaponIndexToEquipPosition_ReturnValue;   // 0x0014(0x0008)()
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipableItem*                         CallFunc_GetItem_ReturnValue;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_GetSlotItem) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_GetSlotItem");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_GetSlotItem) == 0x000030, "Wrong size on WeaponEquipmentSlotWidget_C_GetSlotItem");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetSlotItem, SlotItem) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_GetSlotItem::SlotItem' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetSlotItem, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_GetSlotItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetSlotItem, CallFunc_WeaponIndexToEquipPosition_ReturnValue) == 0x000014, "Member 'WeaponEquipmentSlotWidget_C_GetSlotItem::CallFunc_WeaponIndexToEquipPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetSlotItem, CallFunc_GetItem_ReturnValue) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_GetSlotItem::CallFunc_GetItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetSlotItem, CallFunc_IsValid_ReturnValue2) == 0x000028, "Member 'WeaponEquipmentSlotWidget_C_GetSlotItem::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.IsFocus
// 0x0001 (0x0001 - 0x0000)
struct WeaponEquipmentSlotWidget_C_IsFocus final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_IsFocus) == 0x000001, "Wrong alignment on WeaponEquipmentSlotWidget_C_IsFocus");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_IsFocus) == 0x000001, "Wrong size on WeaponEquipmentSlotWidget_C_IsFocus");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsFocus, ReturnValue) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_IsFocus::ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.FindFirstFocusableWidget
// 0x0028 (0x0028 - 0x0000)
struct WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget final
{
public:
	class UUserWidget*                            FocusableWidget;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Array_Index_Variable;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponAttachmentSlotWidget_C*          CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusable_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget) == 0x000028, "Wrong size on WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget, FocusableWidget) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget::FocusableWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget, m__int_Array_Index_Variable) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget, m__int_Loop_Counter_Variable) == 0x00000C, "Member 'WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget, CallFunc_Array_Get_Item) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget, CallFunc_IsFocusable_ReturnValue) == 0x000025, "Member 'WeaponEquipmentSlotWidget_C_FindFirstFocusableWidget::CallFunc_IsFocusable_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.IsFocusable
// 0x0004 (0x0004 - 0x0000)
struct WeaponEquipmentSlotWidget_C_IsFocusable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_IsFocusable) == 0x000001, "Wrong alignment on WeaponEquipmentSlotWidget_C_IsFocusable");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_IsFocusable) == 0x000004, "Wrong size on WeaponEquipmentSlotWidget_C_IsFocusable");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsFocusable, ReturnValue) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_IsFocusable::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsFocusable, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WeaponEquipmentSlotWidget_C_IsFocusable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsFocusable, CallFunc_IsValid_ReturnValue2) == 0x000002, "Member 'WeaponEquipmentSlotWidget_C_IsFocusable::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_IsFocusable, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'WeaponEquipmentSlotWidget_C_IsFocusable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.GetChildUpFocusableWidget
// 0x0030 (0x0030 - 0x0000)
struct WeaponEquipmentSlotWidget_C_GetChildUpFocusableWidget final
{
public:
	class UUserWidget*                            UpWidget;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusable_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_GetChildUpFocusableWidget) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_GetChildUpFocusableWidget");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_GetChildUpFocusableWidget) == 0x000030, "Wrong size on WeaponEquipmentSlotWidget_C_GetChildUpFocusableWidget");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildUpFocusableWidget, UpWidget) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_GetChildUpFocusableWidget::UpWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildUpFocusableWidget, CallFunc_IsFocusable_ReturnValue) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_GetChildUpFocusableWidget::CallFunc_IsFocusable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildUpFocusableWidget, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_GetChildUpFocusableWidget::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildUpFocusableWidget, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_GetChildUpFocusableWidget::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildUpFocusableWidget, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_GetChildUpFocusableWidget::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildUpFocusableWidget, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WeaponEquipmentSlotWidget_C_GetChildUpFocusableWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.GetChildDownFocusableWidget
// 0x0078 (0x0078 - 0x0000)
struct WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget final
{
public:
	class UUserWidget*                            DownWidget;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            m__object_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetRightWidget_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusable_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusable_ReturnValue2;                 // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CheckSlot;                                         // 0x0070(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget) == 0x000078, "Wrong size on WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget, DownWidget) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget::DownWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget, m__bool_Variable) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget, m__object_Variable) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget::m__object_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget, CallFunc_GetRightWidget_ReturnValue) == 0x000030, "Member 'WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget::CallFunc_GetRightWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget, CallFunc_IsFocusable_ReturnValue) == 0x000049, "Member 'WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget::CallFunc_IsFocusable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget, CallFunc_IsValid_ReturnValue) == 0x00004A, "Member 'WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget, CallFunc_IsFocusable_ReturnValue2) == 0x00004B, "Member 'WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget::CallFunc_IsFocusable_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000050, "Member 'WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000058, "Member 'WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000060, "Member 'WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget, CallFunc_IsValid_ReturnValue2) == 0x000068, "Member 'WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget, CheckSlot) == 0x000070, "Member 'WeaponEquipmentSlotWidget_C_GetChildDownFocusableWidget::CheckSlot' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.GetChildLeftFocusableWidget
// 0x00A0 (0x00A0 - 0x0000)
struct WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget final
{
public:
	class UUserWidget*                            LeftWidget;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            m__object_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetLeftWidget_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            m__object_Variable2;                               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusable_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetLeftWidget_ReturnValue2;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CheckSlot;                                         // 0x0098(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget) == 0x0000A0, "Wrong size on WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget, LeftWidget) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget::LeftWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget, m__bool_Variable) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget, m__object_Variable) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget::m__object_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget, CallFunc_GetLeftWidget_ReturnValue) == 0x000030, "Member 'WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget::CallFunc_GetLeftWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget, m__object_Variable2) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget::m__object_Variable2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000040, "Member 'WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget, K2Node_DynamicCast_bSuccess2) == 0x000050, "Member 'WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget, CallFunc_IsFocusable_ReturnValue) == 0x000051, "Member 'WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget::CallFunc_IsFocusable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000058, "Member 'WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3) == 0x000068, "Member 'WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget, K2Node_DynamicCast_bSuccess3) == 0x000078, "Member 'WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget, CallFunc_GetLeftWidget_ReturnValue2) == 0x000080, "Member 'WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget::CallFunc_GetLeftWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000088, "Member 'WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget, CallFunc_IsValid_ReturnValue2) == 0x000090, "Member 'WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget, CheckSlot) == 0x000098, "Member 'WeaponEquipmentSlotWidget_C_GetChildLeftFocusableWidget::CheckSlot' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.GetChildRightFocusableWidget
// 0x0098 (0x0098 - 0x0000)
struct WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget final
{
public:
	class UUserWidget*                            RightWidget;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            m__object_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            m__object_Variable2;                               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetRightWidget_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusable_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetRightWidget_ReturnValue2;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CheckSlot;                                         // 0x0090(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget) == 0x000098, "Wrong size on WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget, RightWidget) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget::RightWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget, m__object_Variable) == 0x000008, "Member 'WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget::m__object_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget, m__bool_Variable) == 0x000010, "Member 'WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget, m__object_Variable2) == 0x000018, "Member 'WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget::m__object_Variable2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000020, "Member 'WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget, CallFunc_GetRightWidget_ReturnValue) == 0x000038, "Member 'WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget::CallFunc_GetRightWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000040, "Member 'WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget, K2Node_DynamicCast_bSuccess2) == 0x000050, "Member 'WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget, CallFunc_IsFocusable_ReturnValue) == 0x000051, "Member 'WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget::CallFunc_IsFocusable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget, CallFunc_IsValid_ReturnValue) == 0x000052, "Member 'WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000058, "Member 'WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3) == 0x000060, "Member 'WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget, K2Node_DynamicCast_bSuccess3) == 0x000070, "Member 'WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000078, "Member 'WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget, CallFunc_GetRightWidget_ReturnValue2) == 0x000080, "Member 'WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget::CallFunc_GetRightWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget, CallFunc_IsValid_ReturnValue2) == 0x000088, "Member 'WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget, CheckSlot) == 0x000090, "Member 'WeaponEquipmentSlotWidget_C_GetChildRightFocusableWidget::CheckSlot' has a wrong offset!");

// Function WeaponEquipmentSlotWidget.WeaponEquipmentSlotWidget_C.GetFocusingChildWidget
// 0x0008 (0x0008 - 0x0000)
struct WeaponEquipmentSlotWidget_C_GetFocusingChildWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentSlotWidget_C_GetFocusingChildWidget) == 0x000008, "Wrong alignment on WeaponEquipmentSlotWidget_C_GetFocusingChildWidget");
static_assert(sizeof(WeaponEquipmentSlotWidget_C_GetFocusingChildWidget) == 0x000008, "Wrong size on WeaponEquipmentSlotWidget_C_GetFocusingChildWidget");
static_assert(offsetof(WeaponEquipmentSlotWidget_C_GetFocusingChildWidget, ReturnValue) == 0x000000, "Member 'WeaponEquipmentSlotWidget_C_GetFocusingChildWidget::ReturnValue' has a wrong offset!");

}

