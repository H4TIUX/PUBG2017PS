#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BreatheBarWidget

#include "Basic.hpp"

#include "BreatheBarWidget_classes.hpp"
#include "BreatheBarWidget_parameters.hpp"


namespace SDK
{

// Function BreatheBarWidget.BreatheBarWidget_C.ExecuteUbergraph_BreatheBarWidget
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBreatheBarWidget_C::ExecuteUbergraph_BreatheBarWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreatheBarWidget_C", "ExecuteUbergraph_BreatheBarWidget");

	Params::BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BreatheBarWidget.BreatheBarWidget_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBreatheBarWidget_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreatheBarWidget_C", "Tick");

	Params::BreatheBarWidget_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BreatheBarWidget.BreatheBarWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBreatheBarWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreatheBarWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BreatheBarWidget.BreatheBarWidget_C.OnStartBuff
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FName                             BuffName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bStart                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBreatheBarWidget_C::OnStartBuff(struct FName BuffName, bool bStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreatheBarWidget_C", "OnStartBuff");

	Params::BreatheBarWidget_C_OnStartBuff Parms{};

	Parms.BuffName = BuffName;
	Parms.bStart = bStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BreatheBarWidget.BreatheBarWidget_C.UpdateBreathGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBreatheBarWidget_C::UpdateBreathGauge(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreatheBarWidget_C", "UpdateBreathGauge");

	Params::BreatheBarWidget_C_UpdateBreathGauge Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BreatheBarWidget.BreatheBarWidget_C.OnPrepass_0
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBreatheBarWidget_C::OnPrepass_0(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreatheBarWidget_C", "OnPrepass_0");

	Params::BreatheBarWidget_C_OnPrepass_0 Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BreatheBarWidget.BreatheBarWidget_C.GetBreathRatio
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   Breath                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBreatheBarWidget_C::GetBreathRatio(float* Breath) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreatheBarWidget_C", "GetBreathRatio");

	Params::BreatheBarWidget_C_GetBreathRatio Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Breath != nullptr)
		*Breath = Parms.Breath;
}


// Function BreatheBarWidget.BreatheBarWidget_C.GetBreathImageColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   Ratio                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FLinearColor                     Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBreatheBarWidget_C::GetBreathImageColor(float Ratio, struct FLinearColor* Color) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreatheBarWidget_C", "GetBreathImageColor");

	Params::BreatheBarWidget_C_GetBreathImageColor Parms{};

	Parms.Ratio = Ratio;

	UObject::ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function BreatheBarWidget.BreatheBarWidget_C.GetTslCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*                    TslCharacter                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBreatheBarWidget_C::GetTslCharacter(class ATslCharacter** TslCharacter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreatheBarWidget_C", "GetTslCharacter");

	Params::BreatheBarWidget_C_GetTslCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TslCharacter != nullptr)
		*TslCharacter = Parms.TslCharacter;
}


// Function BreatheBarWidget.BreatheBarWidget_C.IsUnderwater
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bIsWater                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBreatheBarWidget_C::IsUnderwater(bool* bIsWater) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreatheBarWidget_C", "IsUnderwater");

	Params::BreatheBarWidget_C_IsUnderwater Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsWater != nullptr)
		*bIsWater = Parms.bIsWater;
}

}

