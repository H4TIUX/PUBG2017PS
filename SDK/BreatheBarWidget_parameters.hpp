#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BreatheBarWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BreatheBarWidget.BreatheBarWidget_C.ExecuteUbergraph_BreatheBarWidget
// 0x0080 (0x0080 - 0x0000)
struct BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(struct FName BuffName, bool bStart)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslHUD*                                K2Node_DynamicCast_AsTsl_HUD;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FName                                   K2Node_CustomEvent_BuffName;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bStart;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0044(0x0034)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget) == 0x000008, "Wrong alignment on BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget");
static_assert(sizeof(BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget) == 0x000080, "Wrong size on BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget");
static_assert(offsetof(BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget, EntryPoint) == 0x000000, "Member 'BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget, CallFunc_GetHUD_ReturnValue) == 0x000020, "Member 'BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget, K2Node_DynamicCast_AsTsl_HUD) == 0x000028, "Member 'BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget::K2Node_DynamicCast_AsTsl_HUD' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget, K2Node_CustomEvent_BuffName) == 0x000038, "Member 'BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget::K2Node_CustomEvent_BuffName' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget, K2Node_CustomEvent_bStart) == 0x000040, "Member 'BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget::K2Node_CustomEvent_bStart' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget, K2Node_SwitchName_CmpSuccess) == 0x000041, "Member 'BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget, K2Node_Event_MyGeometry) == 0x000044, "Member 'BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget, K2Node_Event_InDeltaTime) == 0x000078, "Member 'BreatheBarWidget_C_ExecuteUbergraph_BreatheBarWidget::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function BreatheBarWidget.BreatheBarWidget_C.Tick
// 0x0038 (0x0038 - 0x0000)
struct BreatheBarWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BreatheBarWidget_C_Tick) == 0x000004, "Wrong alignment on BreatheBarWidget_C_Tick");
static_assert(sizeof(BreatheBarWidget_C_Tick) == 0x000038, "Wrong size on BreatheBarWidget_C_Tick");
static_assert(offsetof(BreatheBarWidget_C_Tick, MyGeometry) == 0x000000, "Member 'BreatheBarWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_Tick, InDeltaTime) == 0x000034, "Member 'BreatheBarWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function BreatheBarWidget.BreatheBarWidget_C.OnStartBuff
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) BreatheBarWidget_C_OnStartBuff final
{
public:
	struct FName                                   BuffName;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bStart;                                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BreatheBarWidget_C_OnStartBuff) == 0x000008, "Wrong alignment on BreatheBarWidget_C_OnStartBuff");
static_assert(sizeof(BreatheBarWidget_C_OnStartBuff) == 0x000010, "Wrong size on BreatheBarWidget_C_OnStartBuff");
static_assert(offsetof(BreatheBarWidget_C_OnStartBuff, BuffName) == 0x000000, "Member 'BreatheBarWidget_C_OnStartBuff::BuffName' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnStartBuff, bStart) == 0x000008, "Member 'BreatheBarWidget_C_OnStartBuff::bStart' has a wrong offset!");

// Function BreatheBarWidget.BreatheBarWidget_C.UpdateBreathGauge
// 0x0078 (0x0078 - 0x0000)
struct BreatheBarWidget_C_UpdateBreathGauge final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UImage*                                 K2Node_DynamicCast_AsImage;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetBreathImageColor_Color;                // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue2;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningTslCharacter_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUnderwater_ReturnValue;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue3;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp;                                              // 0x0074(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BreatheBarWidget_C_UpdateBreathGauge) == 0x000008, "Wrong alignment on BreatheBarWidget_C_UpdateBreathGauge");
static_assert(sizeof(BreatheBarWidget_C_UpdateBreathGauge) == 0x000078, "Wrong size on BreatheBarWidget_C_UpdateBreathGauge");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, BoundWidget) == 0x000000, "Member 'BreatheBarWidget_C_UpdateBreathGauge::BoundWidget' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, K2Node_DynamicCast_AsImage) == 0x000008, "Member 'BreatheBarWidget_C_UpdateBreathGauge::K2Node_DynamicCast_AsImage' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BreatheBarWidget_C_UpdateBreathGauge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000011, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_GetBreathImageColor_Color) == 0x000024, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_GetBreathImageColor_Color' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x00003C, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_FClamp_ReturnValue) == 0x000044, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_IsAnimationPlaying_ReturnValue2) == 0x000048, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_IsAnimationPlaying_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_GetOwningTslCharacter_ReturnValue) == 0x000050, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_GetOwningTslCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_IsUnderwater_ReturnValue) == 0x000059, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_IsUnderwater_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00005C, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000060, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_IsAnimationPlaying_ReturnValue3) == 0x000064, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_IsAnimationPlaying_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_SafeDivide_FloatFloat_ReturnValue) == 0x000068, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_SafeDivide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_Add_FloatFloat_ReturnValue) == 0x00006C, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, CallFunc_IsValid_ReturnValue2) == 0x000070, "Member 'BreatheBarWidget_C_UpdateBreathGauge::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_UpdateBreathGauge, Temp) == 0x000074, "Member 'BreatheBarWidget_C_UpdateBreathGauge::Temp' has a wrong offset!");

// Function BreatheBarWidget.BreatheBarWidget_C.OnPrepass_0
// 0x0038 (0x0038 - 0x0000)
struct BreatheBarWidget_C_OnPrepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m__float_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m__float_Variable2;                                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetBreathRatio_Breath;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable2;                                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select2_Default;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue2;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BreatheBarWidget_C_OnPrepass_0) == 0x000008, "Wrong alignment on BreatheBarWidget_C_OnPrepass_0");
static_assert(sizeof(BreatheBarWidget_C_OnPrepass_0) == 0x000038, "Wrong size on BreatheBarWidget_C_OnPrepass_0");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, BoundWidget) == 0x000000, "Member 'BreatheBarWidget_C_OnPrepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, CallFunc_IsVisible_ReturnValue) == 0x000008, "Member 'BreatheBarWidget_C_OnPrepass_0::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000009, "Member 'BreatheBarWidget_C_OnPrepass_0::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'BreatheBarWidget_C_OnPrepass_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, m__byte_Variable) == 0x00000B, "Member 'BreatheBarWidget_C_OnPrepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, m__byte_Variable2) == 0x00000C, "Member 'BreatheBarWidget_C_OnPrepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, m__bool_Variable) == 0x00000D, "Member 'BreatheBarWidget_C_OnPrepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, m__float_Variable) == 0x000010, "Member 'BreatheBarWidget_C_OnPrepass_0::m__float_Variable' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'BreatheBarWidget_C_OnPrepass_0::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, m__float_Variable2) == 0x000018, "Member 'BreatheBarWidget_C_OnPrepass_0::m__float_Variable2' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, K2Node_Select_Default) == 0x00001C, "Member 'BreatheBarWidget_C_OnPrepass_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, K2Node_SwitchEnum_CmpSuccess) == 0x00001D, "Member 'BreatheBarWidget_C_OnPrepass_0::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, CallFunc_IsValid_ReturnValue) == 0x00001E, "Member 'BreatheBarWidget_C_OnPrepass_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001F, "Member 'BreatheBarWidget_C_OnPrepass_0::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, CallFunc_GetBreathRatio_Breath) == 0x000020, "Member 'BreatheBarWidget_C_OnPrepass_0::CallFunc_GetBreathRatio_Breath' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, m__bool_Variable2) == 0x000024, "Member 'BreatheBarWidget_C_OnPrepass_0::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, K2Node_Select2_Default) == 0x000028, "Member 'BreatheBarWidget_C_OnPrepass_0::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, CallFunc_IsValid_ReturnValue2) == 0x00002C, "Member 'BreatheBarWidget_C_OnPrepass_0::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, CallFunc_IsAnimationPlaying_ReturnValue2) == 0x00002D, "Member 'BreatheBarWidget_C_OnPrepass_0::CallFunc_IsAnimationPlaying_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, CallFunc_Not_PreBool_ReturnValue2) == 0x00002E, "Member 'BreatheBarWidget_C_OnPrepass_0::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, CallFunc_BooleanAND_ReturnValue) == 0x00002F, "Member 'BreatheBarWidget_C_OnPrepass_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_OnPrepass_0, CallFunc_BooleanAND_ReturnValue2) == 0x000030, "Member 'BreatheBarWidget_C_OnPrepass_0::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function BreatheBarWidget.BreatheBarWidget_C.GetBreathRatio
// 0x0028 (0x0028 - 0x0000)
struct BreatheBarWidget_C_GetBreathRatio final
{
public:
	float                                         Breath;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetTslCharacter_TslCharacter;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterBreathComponent*              CallFunc_GetBreathComponent_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetBreathRatio_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BreatheBarWidget_C_GetBreathRatio) == 0x000008, "Wrong alignment on BreatheBarWidget_C_GetBreathRatio");
static_assert(sizeof(BreatheBarWidget_C_GetBreathRatio) == 0x000028, "Wrong size on BreatheBarWidget_C_GetBreathRatio");
static_assert(offsetof(BreatheBarWidget_C_GetBreathRatio, Breath) == 0x000000, "Member 'BreatheBarWidget_C_GetBreathRatio::Breath' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_GetBreathRatio, CallFunc_GetTslCharacter_TslCharacter) == 0x000008, "Member 'BreatheBarWidget_C_GetBreathRatio::CallFunc_GetTslCharacter_TslCharacter' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_GetBreathRatio, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BreatheBarWidget_C_GetBreathRatio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_GetBreathRatio, CallFunc_GetBreathComponent_ReturnValue) == 0x000018, "Member 'BreatheBarWidget_C_GetBreathRatio::CallFunc_GetBreathComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_GetBreathRatio, CallFunc_IsValid_ReturnValue2) == 0x000020, "Member 'BreatheBarWidget_C_GetBreathRatio::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_GetBreathRatio, CallFunc_GetBreathRatio_ReturnValue) == 0x000024, "Member 'BreatheBarWidget_C_GetBreathRatio::CallFunc_GetBreathRatio_ReturnValue' has a wrong offset!");

// Function BreatheBarWidget.BreatheBarWidget_C.GetBreathImageColor
// 0x0018 (0x0018 - 0x0000)
struct BreatheBarWidget_C_GetBreathImageColor final
{
public:
	float                                         Ratio;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue2;     // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BreatheBarWidget_C_GetBreathImageColor) == 0x000004, "Wrong alignment on BreatheBarWidget_C_GetBreathImageColor");
static_assert(sizeof(BreatheBarWidget_C_GetBreathImageColor) == 0x000018, "Wrong size on BreatheBarWidget_C_GetBreathImageColor");
static_assert(offsetof(BreatheBarWidget_C_GetBreathImageColor, Ratio) == 0x000000, "Member 'BreatheBarWidget_C_GetBreathImageColor::Ratio' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_GetBreathImageColor, Color) == 0x000004, "Member 'BreatheBarWidget_C_GetBreathImageColor::Color' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_GetBreathImageColor, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'BreatheBarWidget_C_GetBreathImageColor::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_GetBreathImageColor, CallFunc_GreaterEqual_FloatFloat_ReturnValue2) == 0x000015, "Member 'BreatheBarWidget_C_GetBreathImageColor::CallFunc_GreaterEqual_FloatFloat_ReturnValue2' has a wrong offset!");

// Function BreatheBarWidget.BreatheBarWidget_C.GetTslCharacter
// 0x0010 (0x0010 - 0x0000)
struct BreatheBarWidget_C_GetTslCharacter final
{
public:
	class ATslCharacter*                          TslCharacter;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_GetOwningTslCharacter_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BreatheBarWidget_C_GetTslCharacter) == 0x000008, "Wrong alignment on BreatheBarWidget_C_GetTslCharacter");
static_assert(sizeof(BreatheBarWidget_C_GetTslCharacter) == 0x000010, "Wrong size on BreatheBarWidget_C_GetTslCharacter");
static_assert(offsetof(BreatheBarWidget_C_GetTslCharacter, TslCharacter) == 0x000000, "Member 'BreatheBarWidget_C_GetTslCharacter::TslCharacter' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_GetTslCharacter, CallFunc_GetOwningTslCharacter_ReturnValue) == 0x000008, "Member 'BreatheBarWidget_C_GetTslCharacter::CallFunc_GetOwningTslCharacter_ReturnValue' has a wrong offset!");

// Function BreatheBarWidget.BreatheBarWidget_C.IsUnderwater
// 0x0020 (0x0020 - 0x0000)
struct BreatheBarWidget_C_IsUnderwater final
{
public:
	bool                                          bIsWater;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetTslCharacter_TslCharacter;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_GetTslCharacter_TslCharacter2;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUnderwater_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BreatheBarWidget_C_IsUnderwater) == 0x000008, "Wrong alignment on BreatheBarWidget_C_IsUnderwater");
static_assert(sizeof(BreatheBarWidget_C_IsUnderwater) == 0x000020, "Wrong size on BreatheBarWidget_C_IsUnderwater");
static_assert(offsetof(BreatheBarWidget_C_IsUnderwater, bIsWater) == 0x000000, "Member 'BreatheBarWidget_C_IsUnderwater::bIsWater' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_IsUnderwater, CallFunc_GetTslCharacter_TslCharacter) == 0x000008, "Member 'BreatheBarWidget_C_IsUnderwater::CallFunc_GetTslCharacter_TslCharacter' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_IsUnderwater, CallFunc_GetTslCharacter_TslCharacter2) == 0x000010, "Member 'BreatheBarWidget_C_IsUnderwater::CallFunc_GetTslCharacter_TslCharacter2' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_IsUnderwater, CallFunc_IsUnderwater_ReturnValue) == 0x000018, "Member 'BreatheBarWidget_C_IsUnderwater::CallFunc_IsUnderwater_ReturnValue' has a wrong offset!");
static_assert(offsetof(BreatheBarWidget_C_IsUnderwater, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BreatheBarWidget_C_IsUnderwater::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

