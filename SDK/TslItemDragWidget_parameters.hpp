#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TslItemDragWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function TslItemDragWidget.TslItemDragWidget_C.ExecuteUbergraph_TslItemDragWidget
// 0x0048 (0x0048 - 0x0000)
struct TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue2;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue2;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslHUD*                                K2Node_DynamicCast_AsTsl_HUD;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslHUD*                                K2Node_DynamicCast_AsTsl_HUD2;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget) == 0x000008, "Wrong alignment on TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget");
static_assert(sizeof(TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget) == 0x000048, "Wrong size on TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget");
static_assert(offsetof(TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget, EntryPoint) == 0x000000, "Member 'TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget, CallFunc_GetOwningPlayer_ReturnValue2) == 0x000010, "Member 'TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget::CallFunc_GetOwningPlayer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget, CallFunc_GetHUD_ReturnValue) == 0x000018, "Member 'TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget, CallFunc_GetHUD_ReturnValue2) == 0x000020, "Member 'TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget::CallFunc_GetHUD_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget, K2Node_DynamicCast_AsTsl_HUD) == 0x000028, "Member 'TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget::K2Node_DynamicCast_AsTsl_HUD' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget, K2Node_DynamicCast_AsTsl_HUD2) == 0x000038, "Member 'TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget::K2Node_DynamicCast_AsTsl_HUD2' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget, K2Node_DynamicCast_bSuccess2) == 0x000040, "Member 'TslItemDragWidget_C_ExecuteUbergraph_TslItemDragWidget::K2Node_DynamicCast_bSuccess2' has a wrong offset!");

// Function TslItemDragWidget.TslItemDragWidget_C.UpdateIcon
// 0x00C8 (0x00C8 - 0x0000)
struct TslItemDragWidget_C_UpdateIcon final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	class UTexture*                               CallFunc_GetIconTexture_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0038(0x0090)()
};
static_assert(alignof(TslItemDragWidget_C_UpdateIcon) == 0x000008, "Wrong alignment on TslItemDragWidget_C_UpdateIcon");
static_assert(sizeof(TslItemDragWidget_C_UpdateIcon) == 0x0000C8, "Wrong size on TslItemDragWidget_C_UpdateIcon");
static_assert(offsetof(TslItemDragWidget_C_UpdateIcon, BoundWidget) == 0x000000, "Member 'TslItemDragWidget_C_UpdateIcon::BoundWidget' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateIcon, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'TslItemDragWidget_C_UpdateIcon::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateIcon, CallFunc_GetIconTexture_ReturnValue) == 0x000030, "Member 'TslItemDragWidget_C_UpdateIcon::CallFunc_GetIconTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateIcon, K2Node_MakeStruct_SlateBrush) == 0x000038, "Member 'TslItemDragWidget_C_UpdateIcon::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function TslItemDragWidget.TslItemDragWidget_C.UpdateStackCountVisibility
// 0x0010 (0x0010 - 0x0000)
struct TslItemDragWidget_C_UpdateStackCountVisibility final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStackable_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TslItemDragWidget_C_UpdateStackCountVisibility) == 0x000008, "Wrong alignment on TslItemDragWidget_C_UpdateStackCountVisibility");
static_assert(sizeof(TslItemDragWidget_C_UpdateStackCountVisibility) == 0x000010, "Wrong size on TslItemDragWidget_C_UpdateStackCountVisibility");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCountVisibility, BoundWidget) == 0x000000, "Member 'TslItemDragWidget_C_UpdateStackCountVisibility::BoundWidget' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCountVisibility, m__bool_Variable) == 0x000008, "Member 'TslItemDragWidget_C_UpdateStackCountVisibility::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCountVisibility, m__byte_Variable) == 0x000009, "Member 'TslItemDragWidget_C_UpdateStackCountVisibility::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCountVisibility, m__byte_Variable2) == 0x00000A, "Member 'TslItemDragWidget_C_UpdateStackCountVisibility::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCountVisibility, CallFunc_IsStackable_ReturnValue) == 0x00000B, "Member 'TslItemDragWidget_C_UpdateStackCountVisibility::CallFunc_IsStackable_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCountVisibility, K2Node_Select_Default) == 0x00000C, "Member 'TslItemDragWidget_C_UpdateStackCountVisibility::K2Node_Select_Default' has a wrong offset!");

// Function TslItemDragWidget.TslItemDragWidget_C.UpdateStackCount
// 0x00C8 (0x00C8 - 0x0000)
struct TslItemDragWidget_C_UpdateStackCount final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m__text_Variable;                                  // 0x0010(0x0018)()
	int32                                         CallFunc_GetStackCount_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslPlayerController*                   CallFunc_GetShooterPlayerController_ShooterPlayerController; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsItemStackCountHandlingMode_ReturnValue; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable2;                                 // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetStackCount_ReturnValue2;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetAdditionalMaxStackCount_Count;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Select_Default;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
	class FText                                   K2Node_Select2_Default;                            // 0x00B0(0x0018)()
};
static_assert(alignof(TslItemDragWidget_C_UpdateStackCount) == 0x000008, "Wrong alignment on TslItemDragWidget_C_UpdateStackCount");
static_assert(sizeof(TslItemDragWidget_C_UpdateStackCount) == 0x0000C8, "Wrong size on TslItemDragWidget_C_UpdateStackCount");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCount, BoundWidget) == 0x000000, "Member 'TslItemDragWidget_C_UpdateStackCount::BoundWidget' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCount, m__bool_Variable) == 0x000008, "Member 'TslItemDragWidget_C_UpdateStackCount::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCount, m__text_Variable) == 0x000010, "Member 'TslItemDragWidget_C_UpdateStackCount::m__text_Variable' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCount, CallFunc_GetStackCount_ReturnValue) == 0x000028, "Member 'TslItemDragWidget_C_UpdateStackCount::CallFunc_GetStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCount, CallFunc_GetShooterPlayerController_ShooterPlayerController) == 0x000030, "Member 'TslItemDragWidget_C_UpdateStackCount::CallFunc_GetShooterPlayerController_ShooterPlayerController' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'TslItemDragWidget_C_UpdateStackCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCount, CallFunc_IsItemStackCountHandlingMode_ReturnValue) == 0x000039, "Member 'TslItemDragWidget_C_UpdateStackCount::CallFunc_IsItemStackCountHandlingMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCount, m__bool_Variable2) == 0x00003A, "Member 'TslItemDragWidget_C_UpdateStackCount::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCount, CallFunc_BooleanAND_ReturnValue) == 0x00003B, "Member 'TslItemDragWidget_C_UpdateStackCount::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCount, CallFunc_GetStackCount_ReturnValue2) == 0x00003C, "Member 'TslItemDragWidget_C_UpdateStackCount::CallFunc_GetStackCount_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCount, CallFunc_GetAdditionalMaxStackCount_Count) == 0x000040, "Member 'TslItemDragWidget_C_UpdateStackCount::CallFunc_GetAdditionalMaxStackCount_Count' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCount, K2Node_Select_Default) == 0x000044, "Member 'TslItemDragWidget_C_UpdateStackCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCount, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'TslItemDragWidget_C_UpdateStackCount::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCount, K2Node_MakeArray_Array) == 0x000088, "Member 'TslItemDragWidget_C_UpdateStackCount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCount, CallFunc_Format_ReturnValue) == 0x000098, "Member 'TslItemDragWidget_C_UpdateStackCount::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateStackCount, K2Node_Select2_Default) == 0x0000B0, "Member 'TslItemDragWidget_C_UpdateStackCount::K2Node_Select2_Default' has a wrong offset!");

// Function TslItemDragWidget.TslItemDragWidget_C.GetShooterPlayerController
// 0x0028 (0x0028 - 0x0000)
struct TslItemDragWidget_C_GetShooterPlayerController final
{
public:
	class ATslPlayerController*                   ShooterPlayerController_0;                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerController*                   K2Node_DynamicCast_AsTsl_Player_Controller;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TslItemDragWidget_C_GetShooterPlayerController) == 0x000008, "Wrong alignment on TslItemDragWidget_C_GetShooterPlayerController");
static_assert(sizeof(TslItemDragWidget_C_GetShooterPlayerController) == 0x000028, "Wrong size on TslItemDragWidget_C_GetShooterPlayerController");
static_assert(offsetof(TslItemDragWidget_C_GetShooterPlayerController, ShooterPlayerController_0) == 0x000000, "Member 'TslItemDragWidget_C_GetShooterPlayerController::ShooterPlayerController_0' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GetShooterPlayerController, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'TslItemDragWidget_C_GetShooterPlayerController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GetShooterPlayerController, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'TslItemDragWidget_C_GetShooterPlayerController::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GetShooterPlayerController, K2Node_DynamicCast_AsTsl_Player_Controller) == 0x000018, "Member 'TslItemDragWidget_C_GetShooterPlayerController::K2Node_DynamicCast_AsTsl_Player_Controller' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GetShooterPlayerController, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'TslItemDragWidget_C_GetShooterPlayerController::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TslItemDragWidget.TslItemDragWidget_C.GetAdditionalMaxStackCount
// 0x0018 (0x0018 - 0x0000)
struct TslItemDragWidget_C_GetAdditionalMaxStackCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetStackCount_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AInventory*                             CallFunc_GetInventory_Inventory;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAdditionalMaxCount_ReturnValue;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TslItemDragWidget_C_GetAdditionalMaxStackCount) == 0x000008, "Wrong alignment on TslItemDragWidget_C_GetAdditionalMaxStackCount");
static_assert(sizeof(TslItemDragWidget_C_GetAdditionalMaxStackCount) == 0x000018, "Wrong size on TslItemDragWidget_C_GetAdditionalMaxStackCount");
static_assert(offsetof(TslItemDragWidget_C_GetAdditionalMaxStackCount, Count) == 0x000000, "Member 'TslItemDragWidget_C_GetAdditionalMaxStackCount::Count' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GetAdditionalMaxStackCount, CallFunc_GetStackCount_ReturnValue) == 0x000004, "Member 'TslItemDragWidget_C_GetAdditionalMaxStackCount::CallFunc_GetStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GetAdditionalMaxStackCount, CallFunc_GetInventory_Inventory) == 0x000008, "Member 'TslItemDragWidget_C_GetAdditionalMaxStackCount::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GetAdditionalMaxStackCount, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'TslItemDragWidget_C_GetAdditionalMaxStackCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GetAdditionalMaxStackCount, CallFunc_GetAdditionalMaxCount_ReturnValue) == 0x000014, "Member 'TslItemDragWidget_C_GetAdditionalMaxStackCount::CallFunc_GetAdditionalMaxCount_ReturnValue' has a wrong offset!");

// Function TslItemDragWidget.TslItemDragWidget_C.GetInventory
// 0x0030 (0x0030 - 0x0000)
struct TslItemDragWidget_C_GetInventory final
{
public:
	class AInventory*                             Inventory_0;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AInventory*                             CallFunc_GetInventory_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TslItemDragWidget_C_GetInventory) == 0x000008, "Wrong alignment on TslItemDragWidget_C_GetInventory");
static_assert(sizeof(TslItemDragWidget_C_GetInventory) == 0x000030, "Wrong size on TslItemDragWidget_C_GetInventory");
static_assert(offsetof(TslItemDragWidget_C_GetInventory, Inventory_0) == 0x000000, "Member 'TslItemDragWidget_C_GetInventory::Inventory_0' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GetInventory, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000008, "Member 'TslItemDragWidget_C_GetInventory::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GetInventory, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'TslItemDragWidget_C_GetInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GetInventory, CallFunc_GetInventoryFacade_ReturnValue) == 0x000018, "Member 'TslItemDragWidget_C_GetInventory::CallFunc_GetInventoryFacade_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GetInventory, CallFunc_GetInventory_ReturnValue) == 0x000020, "Member 'TslItemDragWidget_C_GetInventory::CallFunc_GetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GetInventory, CallFunc_IsValid_ReturnValue2) == 0x000028, "Member 'TslItemDragWidget_C_GetInventory::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GetInventory, CallFunc_IsValid_ReturnValue3) == 0x000029, "Member 'TslItemDragWidget_C_GetInventory::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GetInventory, CallFunc_IsValid_ReturnValue4) == 0x00002A, "Member 'TslItemDragWidget_C_GetInventory::CallFunc_IsValid_ReturnValue4' has a wrong offset!");

// Function TslItemDragWidget.TslItemDragWidget_C.GetActionName
// 0x0018 (0x0018 - 0x0000)
struct TslItemDragWidget_C_GetActionName final
{
public:
	struct FName                                   ActionName_0;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor)
};
static_assert(alignof(TslItemDragWidget_C_GetActionName) == 0x000008, "Wrong alignment on TslItemDragWidget_C_GetActionName");
static_assert(sizeof(TslItemDragWidget_C_GetActionName) == 0x000018, "Wrong size on TslItemDragWidget_C_GetActionName");
static_assert(offsetof(TslItemDragWidget_C_GetActionName, ActionName_0) == 0x000000, "Member 'TslItemDragWidget_C_GetActionName::ActionName_0' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GetActionName, CallFunc_Conv_NameToString_ReturnValue) == 0x000008, "Member 'TslItemDragWidget_C_GetActionName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");

// Function TslItemDragWidget.TslItemDragWidget_C.GettslItemDragDropOperation
// 0x0020 (0x0020 - 0x0000)
struct TslItemDragWidget_C_GettslItemDragDropOperation final
{
public:
	class UTslItemDragDropOperation_C*            AsTsl_Item_Drag_Drop_Operation;                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UDragDropOperation*                     CallFunc_GetDragDroppingContent_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragDropOperation_C*            K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TslItemDragWidget_C_GettslItemDragDropOperation) == 0x000008, "Wrong alignment on TslItemDragWidget_C_GettslItemDragDropOperation");
static_assert(sizeof(TslItemDragWidget_C_GettslItemDragDropOperation) == 0x000020, "Wrong size on TslItemDragWidget_C_GettslItemDragDropOperation");
static_assert(offsetof(TslItemDragWidget_C_GettslItemDragDropOperation, AsTsl_Item_Drag_Drop_Operation) == 0x000000, "Member 'TslItemDragWidget_C_GettslItemDragDropOperation::AsTsl_Item_Drag_Drop_Operation' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GettslItemDragDropOperation, CallFunc_GetDragDroppingContent_ReturnValue) == 0x000008, "Member 'TslItemDragWidget_C_GettslItemDragDropOperation::CallFunc_GetDragDroppingContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GettslItemDragDropOperation, K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation) == 0x000010, "Member 'TslItemDragWidget_C_GettslItemDragDropOperation::K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_GettslItemDragDropOperation, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'TslItemDragWidget_C_GettslItemDragDropOperation::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TslItemDragWidget.TslItemDragWidget_C.UpdateBackgroundImage
// 0x0040 (0x0040 - 0x0000)
struct TslItemDragWidget_C_UpdateBackgroundImage final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBorder*                                K2Node_DynamicCast_AsBorder;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UImage*                                 K2Node_DynamicCast_AsImage;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue2;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_IsEnable;                        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TslItemDragWidget_C_UpdateBackgroundImage) == 0x000008, "Wrong alignment on TslItemDragWidget_C_UpdateBackgroundImage");
static_assert(sizeof(TslItemDragWidget_C_UpdateBackgroundImage) == 0x000040, "Wrong size on TslItemDragWidget_C_UpdateBackgroundImage");
static_assert(offsetof(TslItemDragWidget_C_UpdateBackgroundImage, BoundWidget) == 0x000000, "Member 'TslItemDragWidget_C_UpdateBackgroundImage::BoundWidget' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateBackgroundImage, K2Node_DynamicCast_AsBorder) == 0x000008, "Member 'TslItemDragWidget_C_UpdateBackgroundImage::K2Node_DynamicCast_AsBorder' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateBackgroundImage, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'TslItemDragWidget_C_UpdateBackgroundImage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateBackgroundImage, K2Node_SwitchName_CmpSuccess) == 0x000011, "Member 'TslItemDragWidget_C_UpdateBackgroundImage::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateBackgroundImage, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'TslItemDragWidget_C_UpdateBackgroundImage::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateBackgroundImage, K2Node_DynamicCast_AsImage) == 0x000020, "Member 'TslItemDragWidget_C_UpdateBackgroundImage::K2Node_DynamicCast_AsImage' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateBackgroundImage, K2Node_DynamicCast_bSuccess2) == 0x000028, "Member 'TslItemDragWidget_C_UpdateBackgroundImage::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateBackgroundImage, CallFunc_GetDynamicMaterial_ReturnValue2) == 0x000030, "Member 'TslItemDragWidget_C_UpdateBackgroundImage::CallFunc_GetDynamicMaterial_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateBackgroundImage, CallFunc_IsEnable_IsEnable) == 0x000038, "Member 'TslItemDragWidget_C_UpdateBackgroundImage::CallFunc_IsEnable_IsEnable' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_UpdateBackgroundImage, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'TslItemDragWidget_C_UpdateBackgroundImage::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function TslItemDragWidget.TslItemDragWidget_C.IsEnable
// 0x0003 (0x0003 - 0x0000)
struct TslItemDragWidget_C_IsEnable final
{
public:
	bool                                          IsEnable_0;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TslItemDragWidget_C_IsEnable) == 0x000001, "Wrong alignment on TslItemDragWidget_C_IsEnable");
static_assert(sizeof(TslItemDragWidget_C_IsEnable) == 0x000003, "Wrong size on TslItemDragWidget_C_IsEnable");
static_assert(offsetof(TslItemDragWidget_C_IsEnable, IsEnable_0) == 0x000000, "Member 'TslItemDragWidget_C_IsEnable::IsEnable_0' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_IsEnable, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000001, "Member 'TslItemDragWidget_C_IsEnable::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_IsEnable, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'TslItemDragWidget_C_IsEnable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function TslItemDragWidget.TslItemDragWidget_C.On_ErrorIcon_Prepass_0
// 0x0010 (0x0010 - 0x0000)
struct TslItemDragWidget_C_On_ErrorIcon_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_IsEnable;                        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TslItemDragWidget_C_On_ErrorIcon_Prepass_0) == 0x000008, "Wrong alignment on TslItemDragWidget_C_On_ErrorIcon_Prepass_0");
static_assert(sizeof(TslItemDragWidget_C_On_ErrorIcon_Prepass_0) == 0x000010, "Wrong size on TslItemDragWidget_C_On_ErrorIcon_Prepass_0");
static_assert(offsetof(TslItemDragWidget_C_On_ErrorIcon_Prepass_0, BoundWidget) == 0x000000, "Member 'TslItemDragWidget_C_On_ErrorIcon_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_On_ErrorIcon_Prepass_0, m__bool_Variable) == 0x000008, "Member 'TslItemDragWidget_C_On_ErrorIcon_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_On_ErrorIcon_Prepass_0, m__byte_Variable) == 0x000009, "Member 'TslItemDragWidget_C_On_ErrorIcon_Prepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_On_ErrorIcon_Prepass_0, m__byte_Variable2) == 0x00000A, "Member 'TslItemDragWidget_C_On_ErrorIcon_Prepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_On_ErrorIcon_Prepass_0, CallFunc_IsEnable_IsEnable) == 0x00000B, "Member 'TslItemDragWidget_C_On_ErrorIcon_Prepass_0::CallFunc_IsEnable_IsEnable' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_On_ErrorIcon_Prepass_0, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'TslItemDragWidget_C_On_ErrorIcon_Prepass_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TslItemDragWidget_C_On_ErrorIcon_Prepass_0, K2Node_Select_Default) == 0x00000D, "Member 'TslItemDragWidget_C_On_ErrorIcon_Prepass_0::K2Node_Select_Default' has a wrong offset!");

}

