#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InventoryWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function InventoryWidget.InventoryWidget_C.ExecuteUbergraph_InventoryWidget
// 0x04E8 (0x04E8 - 0x0000)
struct InventoryWidget_C_ExecuteUbergraph_InventoryWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0038(0x0010)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate5;             // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate6;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate7;             // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable2;                                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotInterface>        K2Node_ComponentBoundEvent_Slot2;                  // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> K2Node_ComponentBoundEvent_SlotContainer2;         // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        K2Node_ComponentBoundEvent_Slot;                   // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> K2Node_ComponentBoundEvent_SlotContainer;          // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate8;             // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IDroppedItemInterface> K2Node_DynamicCast_AsDropped_Item_Interface;       // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem*                                  K2Node_DynamicCast_AsItem;                         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem*                                  CallFunc_GetDroppedItem_ReturnValue;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UEquipableItem*                         K2Node_DynamicCast_AsEquipable_Item;               // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttachableItem*                        K2Node_DynamicCast_AsAttachable_Item;              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue2;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerController*                   K2Node_DynamicCast_AsTsl_Player_Controller;        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslPlayerController*                   K2Node_DynamicCast_AsTsl_Player_Controller2;       // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotInterface>        K2Node_CustomEvent_Slot;                           // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> K2Node_CustomEvent_SlotContainer;                  // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate9;             // 0x01A0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsFiring_ReturnValue;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTargeting_ReturnValue;                  // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B2[0x2];                                      // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry2;                          // 0x01B4(0x0034)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_PointerEvent2;                        // 0x01E8(0x0078)()
	class UDragDropOperation*                     K2Node_Event_Operation2;                           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragDropOperation_C*            K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation; // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_PointerEvent;                         // 0x0278(0x0078)()
	class UDragDropOperation*                     K2Node_Event_Operation;                            // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragDropOperation_C*            K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation2; // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue3;                   // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue4;                   // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputY_ReturnValue;                       // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputX_ReturnValue;                       // 0x0315(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputB_ReturnValue;                       // 0x0316(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputA_ReturnValue;                       // 0x0317(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue;                     // 0x0332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputRB_ReturnValue;                      // 0x0333(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputRT_ReturnValue;                      // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsXBoxOnePlatform_NewParam;               // 0x0335(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsXBoxOnePlatform_NewParam2;              // 0x0336(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337[0x1];                                      // 0x0337(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue2;                    // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352[0x2];                                      // 0x0352(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DeltaTime;                      // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Left_ReturnValue;                         // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Right_ReturnValue;                        // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Up_ReturnValue;                           // 0x035A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Down_ReturnValue;                         // 0x035B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate10;            // 0x0360(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue;        // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue2;       // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38D[0x3];                                      // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0398(0x0034)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGamepadConnected_ReturnValue;           // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGamePadConnected_ReturnValue2;          // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x03D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x03D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate11;            // 0x03D8(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue3;             // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerState*                        K2Node_DynamicCast_AsTsl_Player_State;             // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate12;            // 0x0400(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 CallFunc_GetShortPlayerName_ReturnValue;           // 0x0410(0x0010)(ZeroConstructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0420(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate13;            // 0x0438(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsFocus_ReturnValue;                      // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelfAttachmentPutMode_bResult;          // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelfAttachmentPutMode_bResult2;         // 0x044A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelfAttachmentPutMode_bResult3;         // 0x044B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelfAttachmentPutMode_bResult4;         // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44D[0x3];                                      // 0x044D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslHUD*                                CallFunc_GetTslHUD_ReturnValue;                    // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslHUD*                                CallFunc_GetTslHUD_ReturnValue2;                   // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isEmptyList_ReturnValue;                  // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_462[0x6];                                      // 0x0462(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate14;            // 0x0468(0x0010)(ZeroConstructor, NoDestructor)
	const class UWidgetAnimation*                 K2Node_Select_Default;                             // 0x0478(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWidgetAnimation*                 K2Node_Select2_Default;                            // 0x0488(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue2;          // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Left_ReturnValue2;                        // 0x0492(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_493[0x1];                                      // 0x0493(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate15;            // 0x0498(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Right_ReturnValue2;                       // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AA[0x2];                                      // 0x04AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(TScriptInterface<class ISlotInterface> Slot, TScriptInterface<class ISlotContainerInterface> SlotContainer)> K2Node_CreateDelegate_OutputDelegate16;            // 0x04B0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue2;     // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C1[0x3];                                      // 0x04C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue3;              // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue3;     // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Up_ReturnValue2;                          // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CA[0x6];                                      // 0x04CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate17;            // 0x04D0(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue4;              // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue4;     // 0x04E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Down_ReturnValue2;                        // 0x04E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget) == 0x000008, "Wrong alignment on InventoryWidget_C_ExecuteUbergraph_InventoryWidget");
static_assert(sizeof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget) == 0x0004E8, "Wrong size on InventoryWidget_C_ExecuteUbergraph_InventoryWidget");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, EntryPoint) == 0x000000, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CreateDelegate_OutputDelegate2) == 0x000018, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CreateDelegate_OutputDelegate3) == 0x000028, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_MakeStruct_Margin) == 0x000038, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CreateDelegate_OutputDelegate4) == 0x000048, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CreateDelegate_OutputDelegate5) == 0x000058, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CreateDelegate_OutputDelegate6) == 0x000068, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CreateDelegate_OutputDelegate7) == 0x000078, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, m__bool_Variable) == 0x000088, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, m__bool_Variable2) == 0x000089, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_ComponentBoundEvent_Slot2) == 0x000090, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_ComponentBoundEvent_Slot2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_ComponentBoundEvent_SlotContainer2) == 0x0000A0, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_ComponentBoundEvent_SlotContainer2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_ComponentBoundEvent_Slot) == 0x0000B0, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_ComponentBoundEvent_Slot' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_ComponentBoundEvent_SlotContainer) == 0x0000C0, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_ComponentBoundEvent_SlotContainer' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x0000D0, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CreateDelegate_OutputDelegate8) == 0x0000D8, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_AsDropped_Item_Interface) == 0x0000F0, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_AsDropped_Item_Interface' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_AsItem) == 0x000108, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_AsItem' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_bSuccess2) == 0x000110, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_GetDroppedItem_ReturnValue) == 0x000118, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_GetDroppedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_AsEquipable_Item) == 0x000120, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_AsEquipable_Item' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_bSuccess3) == 0x000128, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_AsAttachable_Item) == 0x000130, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_AsAttachable_Item' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_bSuccess4) == 0x000138, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000140, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_GetOwningPlayer_ReturnValue2) == 0x000148, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_GetOwningPlayer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_AsTsl_Player_Controller) == 0x000150, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_AsTsl_Player_Controller' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_bSuccess5) == 0x000158, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_AsTsl_Player_Controller2) == 0x000160, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_AsTsl_Player_Controller2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_bSuccess6) == 0x000168, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CustomEvent_Slot) == 0x000170, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CustomEvent_Slot' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CustomEvent_SlotContainer) == 0x000180, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CustomEvent_SlotContainer' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000190, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_IsValid_ReturnValue2) == 0x000198, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CreateDelegate_OutputDelegate9) == 0x0001A0, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_IsFiring_ReturnValue) == 0x0001B0, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_IsFiring_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_IsTargeting_ReturnValue) == 0x0001B1, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_IsTargeting_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_Event_MyGeometry2) == 0x0001B4, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_Event_MyGeometry2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_Event_PointerEvent2) == 0x0001E8, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_Event_PointerEvent2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_Event_Operation2) == 0x000260, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_Event_Operation2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation) == 0x000268, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_bSuccess7) == 0x000270, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_Event_PointerEvent) == 0x000278, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_Event_PointerEvent' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_Event_Operation) == 0x0002F0, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_Event_Operation' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation2) == 0x0002F8, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_bSuccess8) == 0x000300, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Array_Add_ReturnValue) == 0x000304, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Array_Add_ReturnValue2) == 0x000308, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Array_Add_ReturnValue3) == 0x00030C, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Array_Add_ReturnValue3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Array_Add_ReturnValue4) == 0x000310, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Array_Add_ReturnValue4' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_InputY_ReturnValue) == 0x000314, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_InputY_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_InputX_ReturnValue) == 0x000315, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_InputX_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_InputB_ReturnValue) == 0x000316, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_InputB_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_InputA_ReturnValue) == 0x000317, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_InputA_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000318, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000320, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_bSuccess9) == 0x000330, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_IsValid_ReturnValue3) == 0x000331, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_SetFocus_ReturnValue) == 0x000332, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_SetFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_InputRB_ReturnValue) == 0x000333, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_InputRB_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_InputRT_ReturnValue) == 0x000334, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_InputRT_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_IsXBoxOnePlatform_NewParam) == 0x000335, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_IsXBoxOnePlatform_NewParam' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_IsXBoxOnePlatform_NewParam2) == 0x000336, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_IsXBoxOnePlatform_NewParam2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000338, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000340, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_bSuccess10) == 0x000350, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_SetFocus_ReturnValue2) == 0x000351, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_SetFocus_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CustomEvent_DeltaTime) == 0x000354, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CustomEvent_DeltaTime' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Left_ReturnValue) == 0x000358, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Right_ReturnValue) == 0x000359, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Up_ReturnValue) == 0x00035A, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Down_ReturnValue) == 0x00035B, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Down_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CreateDelegate_OutputDelegate10) == 0x000360, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_GetViewportSize_ReturnValue) == 0x000370, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_BreakVector2D_X) == 0x000378, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_BreakVector2D_Y) == 0x00037C, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000380, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_SafeDivide_FloatFloat_ReturnValue) == 0x000384, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_SafeDivide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_SafeDivide_FloatFloat_ReturnValue2) == 0x000388, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_SafeDivide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00038C, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000390, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000394, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_Event_MyGeometry) == 0x000398, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_Event_InDeltaTime) == 0x0003CC, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_IsGamepadConnected_ReturnValue) == 0x0003D0, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_IsGamepadConnected_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_IsGamePadConnected_ReturnValue2) == 0x0003D1, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_IsGamePadConnected_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_BooleanOR_ReturnValue) == 0x0003D2, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_BooleanOR_ReturnValue2) == 0x0003D3, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CreateDelegate_OutputDelegate11) == 0x0003D8, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_GetOwningPlayer_ReturnValue3) == 0x0003E8, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_GetOwningPlayer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_AsTsl_Player_State) == 0x0003F0, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_AsTsl_Player_State' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_DynamicCast_bSuccess11) == 0x0003F8, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CreateDelegate_OutputDelegate12) == 0x000400, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_GetShortPlayerName_ReturnValue) == 0x000410, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_GetShortPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Conv_StringToText_ReturnValue) == 0x000420, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CreateDelegate_OutputDelegate13) == 0x000438, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CreateDelegate_OutputDelegate13' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_IsFocus_ReturnValue) == 0x000448, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_IsFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_IsSelfAttachmentPutMode_bResult) == 0x000449, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_IsSelfAttachmentPutMode_bResult' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_IsSelfAttachmentPutMode_bResult2) == 0x00044A, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_IsSelfAttachmentPutMode_bResult2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_IsSelfAttachmentPutMode_bResult3) == 0x00044B, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_IsSelfAttachmentPutMode_bResult3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_IsSelfAttachmentPutMode_bResult4) == 0x00044C, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_IsSelfAttachmentPutMode_bResult4' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_GetTslHUD_ReturnValue) == 0x000450, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_GetTslHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_GetTslHUD_ReturnValue2) == 0x000458, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_GetTslHUD_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_IsValid_ReturnValue4) == 0x000460, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_isEmptyList_ReturnValue) == 0x000461, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_isEmptyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CreateDelegate_OutputDelegate14) == 0x000468, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CreateDelegate_OutputDelegate14' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_Select_Default) == 0x000478, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000480, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_Select2_Default) == 0x000488, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000490, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_IsAnimationPlaying_ReturnValue2) == 0x000491, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_IsAnimationPlaying_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Left_ReturnValue2) == 0x000492, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Left_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Add_FloatFloat_ReturnValue) == 0x000494, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CreateDelegate_OutputDelegate15) == 0x000498, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CreateDelegate_OutputDelegate15' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0004A8, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Right_ReturnValue2) == 0x0004A9, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Right_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Add_FloatFloat_ReturnValue2) == 0x0004AC, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CreateDelegate_OutputDelegate16) == 0x0004B0, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CreateDelegate_OutputDelegate16' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_GreaterEqual_FloatFloat_ReturnValue2) == 0x0004C0, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_GreaterEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Add_FloatFloat_ReturnValue3) == 0x0004C4, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Add_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_GreaterEqual_FloatFloat_ReturnValue3) == 0x0004C8, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_GreaterEqual_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Up_ReturnValue2) == 0x0004C9, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Up_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, K2Node_CreateDelegate_OutputDelegate17) == 0x0004D0, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::K2Node_CreateDelegate_OutputDelegate17' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Add_FloatFloat_ReturnValue4) == 0x0004E0, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Add_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_GreaterEqual_FloatFloat_ReturnValue4) == 0x0004E4, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_GreaterEqual_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_ExecuteUbergraph_InventoryWidget, CallFunc_Down_ReturnValue2) == 0x0004E5, "Member 'InventoryWidget_C_ExecuteUbergraph_InventoryWidget::CallFunc_Down_ReturnValue2' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.Tick
// 0x0038 (0x0038 - 0x0000)
struct InventoryWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_Tick) == 0x000004, "Wrong alignment on InventoryWidget_C_Tick");
static_assert(sizeof(InventoryWidget_C_Tick) == 0x000038, "Wrong size on InventoryWidget_C_Tick");
static_assert(offsetof(InventoryWidget_C_Tick, MyGeometry) == 0x000000, "Member 'InventoryWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Tick, InDeltaTime) == 0x000034, "Member 'InventoryWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.MoveTick
// 0x0004 (0x0004 - 0x0000)
struct InventoryWidget_C_MoveTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_MoveTick) == 0x000004, "Wrong alignment on InventoryWidget_C_MoveTick");
static_assert(sizeof(InventoryWidget_C_MoveTick) == 0x000004, "Wrong size on InventoryWidget_C_MoveTick");
static_assert(offsetof(InventoryWidget_C_MoveTick, DeltaTime) == 0x000000, "Member 'InventoryWidget_C_MoveTick::DeltaTime' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.OnDragLeave
// 0x0080 (0x0080 - 0x0000)
struct InventoryWidget_C_OnDragLeave final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0078)(Parm)
	class UDragDropOperation*                     Operation;                                         // 0x0078(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_OnDragLeave) == 0x000008, "Wrong alignment on InventoryWidget_C_OnDragLeave");
static_assert(sizeof(InventoryWidget_C_OnDragLeave) == 0x000080, "Wrong size on InventoryWidget_C_OnDragLeave");
static_assert(offsetof(InventoryWidget_C_OnDragLeave, PointerEvent) == 0x000000, "Member 'InventoryWidget_C_OnDragLeave::PointerEvent' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnDragLeave, Operation) == 0x000078, "Member 'InventoryWidget_C_OnDragLeave::Operation' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.OnDragEnter
// 0x00B8 (0x00B8 - 0x0000)
struct InventoryWidget_C_OnDragEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_OnDragEnter) == 0x000008, "Wrong alignment on InventoryWidget_C_OnDragEnter");
static_assert(sizeof(InventoryWidget_C_OnDragEnter) == 0x0000B8, "Wrong size on InventoryWidget_C_OnDragEnter");
static_assert(offsetof(InventoryWidget_C_OnDragEnter, MyGeometry) == 0x000000, "Member 'InventoryWidget_C_OnDragEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnDragEnter, PointerEvent) == 0x000038, "Member 'InventoryWidget_C_OnDragEnter::PointerEvent' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnDragEnter, Operation) == 0x0000B0, "Member 'InventoryWidget_C_OnDragEnter::Operation' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.OnItemSlotFocus
// 0x0020 (0x0020 - 0x0000)
struct InventoryWidget_C_OnItemSlotFocus final
{
public:
	TScriptInterface<class ISlotInterface>        Slot_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> SlotContainer_0;                                   // 0x0010(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_OnItemSlotFocus) == 0x000008, "Wrong alignment on InventoryWidget_C_OnItemSlotFocus");
static_assert(sizeof(InventoryWidget_C_OnItemSlotFocus) == 0x000020, "Wrong size on InventoryWidget_C_OnItemSlotFocus");
static_assert(offsetof(InventoryWidget_C_OnItemSlotFocus, Slot_0) == 0x000000, "Member 'InventoryWidget_C_OnItemSlotFocus::Slot_0' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnItemSlotFocus, SlotContainer_0) == 0x000010, "Member 'InventoryWidget_C_OnItemSlotFocus::SlotContainer_0' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.BndEvt__Backpack_K2Node_ComponentBoundEvent_40_OnChildSlotFocus__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct InventoryWidget_C_BndEvt__Backpack_K2Node_ComponentBoundEvent_40_OnChildSlotFocus__DelegateSignature final
{
public:
	TScriptInterface<class ISlotInterface>        Slot_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> SlotContainer_0;                                   // 0x0010(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_BndEvt__Backpack_K2Node_ComponentBoundEvent_40_OnChildSlotFocus__DelegateSignature) == 0x000008, "Wrong alignment on InventoryWidget_C_BndEvt__Backpack_K2Node_ComponentBoundEvent_40_OnChildSlotFocus__DelegateSignature");
static_assert(sizeof(InventoryWidget_C_BndEvt__Backpack_K2Node_ComponentBoundEvent_40_OnChildSlotFocus__DelegateSignature) == 0x000020, "Wrong size on InventoryWidget_C_BndEvt__Backpack_K2Node_ComponentBoundEvent_40_OnChildSlotFocus__DelegateSignature");
static_assert(offsetof(InventoryWidget_C_BndEvt__Backpack_K2Node_ComponentBoundEvent_40_OnChildSlotFocus__DelegateSignature, Slot_0) == 0x000000, "Member 'InventoryWidget_C_BndEvt__Backpack_K2Node_ComponentBoundEvent_40_OnChildSlotFocus__DelegateSignature::Slot_0' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_BndEvt__Backpack_K2Node_ComponentBoundEvent_40_OnChildSlotFocus__DelegateSignature, SlotContainer_0) == 0x000010, "Member 'InventoryWidget_C_BndEvt__Backpack_K2Node_ComponentBoundEvent_40_OnChildSlotFocus__DelegateSignature::SlotContainer_0' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.BndEvt__Vicinity_K2Node_ComponentBoundEvent_36_OnChildSlotFocus__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct InventoryWidget_C_BndEvt__Vicinity_K2Node_ComponentBoundEvent_36_OnChildSlotFocus__DelegateSignature final
{
public:
	TScriptInterface<class ISlotInterface>        Slot_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> SlotContainer_0;                                   // 0x0010(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_BndEvt__Vicinity_K2Node_ComponentBoundEvent_36_OnChildSlotFocus__DelegateSignature) == 0x000008, "Wrong alignment on InventoryWidget_C_BndEvt__Vicinity_K2Node_ComponentBoundEvent_36_OnChildSlotFocus__DelegateSignature");
static_assert(sizeof(InventoryWidget_C_BndEvt__Vicinity_K2Node_ComponentBoundEvent_36_OnChildSlotFocus__DelegateSignature) == 0x000020, "Wrong size on InventoryWidget_C_BndEvt__Vicinity_K2Node_ComponentBoundEvent_36_OnChildSlotFocus__DelegateSignature");
static_assert(offsetof(InventoryWidget_C_BndEvt__Vicinity_K2Node_ComponentBoundEvent_36_OnChildSlotFocus__DelegateSignature, Slot_0) == 0x000000, "Member 'InventoryWidget_C_BndEvt__Vicinity_K2Node_ComponentBoundEvent_36_OnChildSlotFocus__DelegateSignature::Slot_0' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_BndEvt__Vicinity_K2Node_ComponentBoundEvent_36_OnChildSlotFocus__DelegateSignature, SlotContainer_0) == 0x000010, "Member 'InventoryWidget_C_BndEvt__Vicinity_K2Node_ComponentBoundEvent_36_OnChildSlotFocus__DelegateSignature::SlotContainer_0' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.InitializeWidget
// 0x00E0 (0x00E0 - 0x0000)
struct InventoryWidget_C_InitializeWidget final
{
public:
	TDelegate<void()>                             OnInventoryUpdated;                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	TDelegate<void()>                             OnEquipmentUpdated;                                // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	TDelegate<void()>                             OnUpdateItemList;                                  // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor)
	TDelegate<void(TScriptInterface<class ISlotInterface> Slot, TScriptInterface<class ISlotContainerInterface> SlotContainer)> OnItemSlotFocus;                                   // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0xF];                                       // 0x0051(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ANearbyInteractiveItemExplorer*         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter2; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter3; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue2;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AEquipment*                             CallFunc_GetEquipment_ReturnValue;                 // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AInventory*                             CallFunc_GetInventory_ReturnValue;                 // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_InitializeWidget) == 0x000010, "Wrong alignment on InventoryWidget_C_InitializeWidget");
static_assert(sizeof(InventoryWidget_C_InitializeWidget) == 0x0000E0, "Wrong size on InventoryWidget_C_InitializeWidget");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, OnInventoryUpdated) == 0x000000, "Member 'InventoryWidget_C_InitializeWidget::OnInventoryUpdated' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, OnEquipmentUpdated) == 0x000010, "Member 'InventoryWidget_C_InitializeWidget::OnEquipmentUpdated' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, OnUpdateItemList) == 0x000020, "Member 'InventoryWidget_C_InitializeWidget::OnUpdateItemList' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, OnItemSlotFocus) == 0x000030, "Member 'InventoryWidget_C_InitializeWidget::OnItemSlotFocus' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'InventoryWidget_C_InitializeWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000048, "Member 'InventoryWidget_C_InitializeWidget::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, CallFunc_IsValid_ReturnValue2) == 0x000050, "Member 'InventoryWidget_C_InitializeWidget::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'InventoryWidget_C_InitializeWidget::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000090, "Member 'InventoryWidget_C_InitializeWidget::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, CallFunc_FinishSpawningActor_ReturnValue) == 0x000098, "Member 'InventoryWidget_C_InitializeWidget::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, CallFunc_GetOwningShooterCharacter_ShooterCharacter2) == 0x0000A0, "Member 'InventoryWidget_C_InitializeWidget::CallFunc_GetOwningShooterCharacter_ShooterCharacter2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, CallFunc_GetOwningShooterCharacter_ShooterCharacter3) == 0x0000A8, "Member 'InventoryWidget_C_InitializeWidget::CallFunc_GetOwningShooterCharacter_ShooterCharacter3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, CallFunc_IsValid_ReturnValue3) == 0x0000B0, "Member 'InventoryWidget_C_InitializeWidget::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, CallFunc_IsValid_ReturnValue4) == 0x0000B1, "Member 'InventoryWidget_C_InitializeWidget::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, CallFunc_GetInventoryFacade_ReturnValue) == 0x0000B8, "Member 'InventoryWidget_C_InitializeWidget::CallFunc_GetInventoryFacade_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, CallFunc_GetInventoryFacade_ReturnValue2) == 0x0000C0, "Member 'InventoryWidget_C_InitializeWidget::CallFunc_GetInventoryFacade_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, CallFunc_GetEquipment_ReturnValue) == 0x0000C8, "Member 'InventoryWidget_C_InitializeWidget::CallFunc_GetEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, CallFunc_GetInventory_ReturnValue) == 0x0000D0, "Member 'InventoryWidget_C_InitializeWidget::CallFunc_GetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, CallFunc_IsValid_ReturnValue5) == 0x0000D8, "Member 'InventoryWidget_C_InitializeWidget::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InitializeWidget, CallFunc_IsValid_ReturnValue6) == 0x0000D9, "Member 'InventoryWidget_C_InitializeWidget::CallFunc_IsValid_ReturnValue6' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.FinalizeWidget
// 0x0068 (0x0068 - 0x0000)
struct InventoryWidget_C_FinalizeWidget final
{
public:
	TDelegate<void()>                             OnInventoryUpdated;                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	TDelegate<void()>                             OnEquipmentUpdated;                                // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AEquipment*                             CallFunc_GetEquipment_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter2; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue2;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AInventory*                             CallFunc_GetInventory_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_FinalizeWidget) == 0x000008, "Wrong alignment on InventoryWidget_C_FinalizeWidget");
static_assert(sizeof(InventoryWidget_C_FinalizeWidget) == 0x000068, "Wrong size on InventoryWidget_C_FinalizeWidget");
static_assert(offsetof(InventoryWidget_C_FinalizeWidget, OnInventoryUpdated) == 0x000000, "Member 'InventoryWidget_C_FinalizeWidget::OnInventoryUpdated' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_FinalizeWidget, OnEquipmentUpdated) == 0x000010, "Member 'InventoryWidget_C_FinalizeWidget::OnEquipmentUpdated' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_FinalizeWidget, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000020, "Member 'InventoryWidget_C_FinalizeWidget::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_FinalizeWidget, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'InventoryWidget_C_FinalizeWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_FinalizeWidget, CallFunc_GetInventoryFacade_ReturnValue) == 0x000030, "Member 'InventoryWidget_C_FinalizeWidget::CallFunc_GetInventoryFacade_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_FinalizeWidget, CallFunc_GetEquipment_ReturnValue) == 0x000038, "Member 'InventoryWidget_C_FinalizeWidget::CallFunc_GetEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_FinalizeWidget, CallFunc_GetOwningShooterCharacter_ShooterCharacter2) == 0x000040, "Member 'InventoryWidget_C_FinalizeWidget::CallFunc_GetOwningShooterCharacter_ShooterCharacter2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_FinalizeWidget, CallFunc_IsValid_ReturnValue2) == 0x000048, "Member 'InventoryWidget_C_FinalizeWidget::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_FinalizeWidget, CallFunc_GetInventoryFacade_ReturnValue2) == 0x000050, "Member 'InventoryWidget_C_FinalizeWidget::CallFunc_GetInventoryFacade_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_FinalizeWidget, CallFunc_GetInventory_ReturnValue) == 0x000058, "Member 'InventoryWidget_C_FinalizeWidget::CallFunc_GetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_FinalizeWidget, CallFunc_IsValid_ReturnValue3) == 0x000060, "Member 'InventoryWidget_C_FinalizeWidget::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_FinalizeWidget, CallFunc_IsValid_ReturnValue4) == 0x000061, "Member 'InventoryWidget_C_FinalizeWidget::CallFunc_IsValid_ReturnValue4' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.UpdateDragDroppingObject
// 0x0008 (0x0008 - 0x0000)
struct InventoryWidget_C_UpdateDragDroppingObject final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_UpdateDragDroppingObject) == 0x000008, "Wrong alignment on InventoryWidget_C_UpdateDragDroppingObject");
static_assert(sizeof(InventoryWidget_C_UpdateDragDroppingObject) == 0x000008, "Wrong size on InventoryWidget_C_UpdateDragDroppingObject");
static_assert(offsetof(InventoryWidget_C_UpdateDragDroppingObject, BoundWidget) == 0x000000, "Member 'InventoryWidget_C_UpdateDragDroppingObject::BoundWidget' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.On_VicinityInfoBlock_Prepass_0
// 0x0008 (0x0008 - 0x0000)
struct InventoryWidget_C_On_VicinityInfoBlock_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_On_VicinityInfoBlock_Prepass_0) == 0x000008, "Wrong alignment on InventoryWidget_C_On_VicinityInfoBlock_Prepass_0");
static_assert(sizeof(InventoryWidget_C_On_VicinityInfoBlock_Prepass_0) == 0x000008, "Wrong size on InventoryWidget_C_On_VicinityInfoBlock_Prepass_0");
static_assert(offsetof(InventoryWidget_C_On_VicinityInfoBlock_Prepass_0, BoundWidget) == 0x000000, "Member 'InventoryWidget_C_On_VicinityInfoBlock_Prepass_0::BoundWidget' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.PlayFadeInAnim
// 0x0008 (0x0008 - 0x0000)
struct InventoryWidget_C_PlayFadeInAnim final
{
public:
	float                                         Playback_Speed;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_PlayFadeInAnim) == 0x000004, "Wrong alignment on InventoryWidget_C_PlayFadeInAnim");
static_assert(sizeof(InventoryWidget_C_PlayFadeInAnim) == 0x000008, "Wrong size on InventoryWidget_C_PlayFadeInAnim");
static_assert(offsetof(InventoryWidget_C_PlayFadeInAnim, Playback_Speed) == 0x000000, "Member 'InventoryWidget_C_PlayFadeInAnim::Playback_Speed' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_PlayFadeInAnim, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000004, "Member 'InventoryWidget_C_PlayFadeInAnim::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.GetMouseOverItem
// 0x0038 (0x0038 - 0x0000)
struct InventoryWidget_C_GetMouseOverItem final
{
public:
	TScriptInterface<class ISlotInterface>        Slot_0;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> Container;                                         // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UItem*                                  Item;                                              // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UEquipableItem*                         EquipableItem;                                     // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAttachableItem*                        AttachableItem;                                    // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_GetMouseOverItem) == 0x000008, "Wrong alignment on InventoryWidget_C_GetMouseOverItem");
static_assert(sizeof(InventoryWidget_C_GetMouseOverItem) == 0x000038, "Wrong size on InventoryWidget_C_GetMouseOverItem");
static_assert(offsetof(InventoryWidget_C_GetMouseOverItem, Slot_0) == 0x000000, "Member 'InventoryWidget_C_GetMouseOverItem::Slot_0' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetMouseOverItem, Container) == 0x000010, "Member 'InventoryWidget_C_GetMouseOverItem::Container' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetMouseOverItem, Item) == 0x000020, "Member 'InventoryWidget_C_GetMouseOverItem::Item' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetMouseOverItem, EquipableItem) == 0x000028, "Member 'InventoryWidget_C_GetMouseOverItem::EquipableItem' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetMouseOverItem, AttachableItem) == 0x000030, "Member 'InventoryWidget_C_GetMouseOverItem::AttachableItem' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.OnDrop
// 0x0118 (0x0118 - 0x0000)
struct InventoryWidget_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotWidgetBaseInterface_C> K2Node_DynamicCast_AsSlot_Widget_Base_Interface;   // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotInterface>        CallFunc_GetSlotItem_SlotItem;                     // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_GetSlotContainer_SlotContainer;           // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAkAudioEvent*                          CallFunc_GetDropSound_ReturnValue;                 // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                   CallFunc_GetActionName_ReturnValue;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_OnDrop) == 0x000008, "Wrong alignment on InventoryWidget_C_OnDrop");
static_assert(sizeof(InventoryWidget_C_OnDrop) == 0x000118, "Wrong size on InventoryWidget_C_OnDrop");
static_assert(offsetof(InventoryWidget_C_OnDrop, MyGeometry) == 0x000000, "Member 'InventoryWidget_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnDrop, PointerEvent) == 0x000038, "Member 'InventoryWidget_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnDrop, Operation) == 0x0000B0, "Member 'InventoryWidget_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnDrop, ReturnValue) == 0x0000B8, "Member 'InventoryWidget_C_OnDrop::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnDrop, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x0000C0, "Member 'InventoryWidget_C_OnDrop::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnDrop, K2Node_DynamicCast_AsSlot_Widget_Base_Interface) == 0x0000C8, "Member 'InventoryWidget_C_OnDrop::K2Node_DynamicCast_AsSlot_Widget_Base_Interface' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnDrop, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'InventoryWidget_C_OnDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnDrop, CallFunc_GetSlotItem_SlotItem) == 0x0000E0, "Member 'InventoryWidget_C_OnDrop::CallFunc_GetSlotItem_SlotItem' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnDrop, CallFunc_GetSlotContainer_SlotContainer) == 0x0000F0, "Member 'InventoryWidget_C_OnDrop::CallFunc_GetSlotContainer_SlotContainer' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnDrop, CallFunc_GetDropSound_ReturnValue) == 0x000100, "Member 'InventoryWidget_C_OnDrop::CallFunc_GetDropSound_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnDrop, CallFunc_GetActionName_ReturnValue) == 0x000108, "Member 'InventoryWidget_C_OnDrop::CallFunc_GetActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnDrop, CallFunc_PostEvent_ReturnValue) == 0x000110, "Member 'InventoryWidget_C_OnDrop::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnDrop, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000114, "Member 'InventoryWidget_C_OnDrop::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnDrop, CallFunc_IsValid_ReturnValue) == 0x000115, "Member 'InventoryWidget_C_OnDrop::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.On_TextType_Prepass_0
// 0x0038 (0x0038 - 0x0000)
struct InventoryWidget_C_On_TextType_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0010(0x0028)()
};
static_assert(alignof(InventoryWidget_C_On_TextType_Prepass_0) == 0x000008, "Wrong alignment on InventoryWidget_C_On_TextType_Prepass_0");
static_assert(sizeof(InventoryWidget_C_On_TextType_Prepass_0) == 0x000038, "Wrong size on InventoryWidget_C_On_TextType_Prepass_0");
static_assert(offsetof(InventoryWidget_C_On_TextType_Prepass_0, BoundWidget) == 0x000000, "Member 'InventoryWidget_C_On_TextType_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_TextType_Prepass_0, m__bool_Variable) == 0x000008, "Member 'InventoryWidget_C_On_TextType_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_TextType_Prepass_0, K2Node_Select_Default) == 0x000010, "Member 'InventoryWidget_C_On_TextType_Prepass_0::K2Node_Select_Default' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.On_TextTime_Prepass_0
// 0x0038 (0x0038 - 0x0000)
struct InventoryWidget_C_On_TextTime_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0010(0x0028)()
};
static_assert(alignof(InventoryWidget_C_On_TextTime_Prepass_0) == 0x000008, "Wrong alignment on InventoryWidget_C_On_TextTime_Prepass_0");
static_assert(sizeof(InventoryWidget_C_On_TextTime_Prepass_0) == 0x000038, "Wrong size on InventoryWidget_C_On_TextTime_Prepass_0");
static_assert(offsetof(InventoryWidget_C_On_TextTime_Prepass_0, BoundWidget) == 0x000000, "Member 'InventoryWidget_C_On_TextTime_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_TextTime_Prepass_0, m__bool_Variable) == 0x000008, "Member 'InventoryWidget_C_On_TextTime_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_TextTime_Prepass_0, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'InventoryWidget_C_On_TextTime_Prepass_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_TextTime_Prepass_0, K2Node_Select_Default) == 0x000010, "Member 'InventoryWidget_C_On_TextTime_Prepass_0::K2Node_Select_Default' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.On_SortingButtonListBorder_Prepass_0
// 0x0048 (0x0048 - 0x0000)
struct InventoryWidget_C_On_SortingButtonListBorder_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           m__struct_Variable;                                // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           m__struct_Variable2;                               // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetContentCount_Count;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_On_SortingButtonListBorder_Prepass_0) == 0x000008, "Wrong alignment on InventoryWidget_C_On_SortingButtonListBorder_Prepass_0");
static_assert(sizeof(InventoryWidget_C_On_SortingButtonListBorder_Prepass_0) == 0x000048, "Wrong size on InventoryWidget_C_On_SortingButtonListBorder_Prepass_0");
static_assert(offsetof(InventoryWidget_C_On_SortingButtonListBorder_Prepass_0, BoundWidget) == 0x000000, "Member 'InventoryWidget_C_On_SortingButtonListBorder_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_SortingButtonListBorder_Prepass_0, m__bool_Variable) == 0x000008, "Member 'InventoryWidget_C_On_SortingButtonListBorder_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_SortingButtonListBorder_Prepass_0, m__struct_Variable) == 0x00000C, "Member 'InventoryWidget_C_On_SortingButtonListBorder_Prepass_0::m__struct_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_SortingButtonListBorder_Prepass_0, m__struct_Variable2) == 0x00001C, "Member 'InventoryWidget_C_On_SortingButtonListBorder_Prepass_0::m__struct_Variable2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_SortingButtonListBorder_Prepass_0, CallFunc_GetContentCount_Count) == 0x00002C, "Member 'InventoryWidget_C_On_SortingButtonListBorder_Prepass_0::CallFunc_GetContentCount_Count' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_SortingButtonListBorder_Prepass_0, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'InventoryWidget_C_On_SortingButtonListBorder_Prepass_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_SortingButtonListBorder_Prepass_0, K2Node_Select_Default) == 0x000034, "Member 'InventoryWidget_C_On_SortingButtonListBorder_Prepass_0::K2Node_Select_Default' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.OnPrepass_0
// 0x0008 (0x0008 - 0x0000)
struct InventoryWidget_C_OnPrepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_OnPrepass_0) == 0x000008, "Wrong alignment on InventoryWidget_C_OnPrepass_0");
static_assert(sizeof(InventoryWidget_C_OnPrepass_0) == 0x000008, "Wrong size on InventoryWidget_C_OnPrepass_0");
static_assert(offsetof(InventoryWidget_C_OnPrepass_0, BoundWidget) == 0x000000, "Member 'InventoryWidget_C_OnPrepass_0::BoundWidget' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.OnChildWidgetRefresh
// 0x0078 (0x0078 - 0x0000)
struct InventoryWidget_C_OnChildWidgetRefresh final
{
public:
	bool                                          m__bool_Variable;                                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFirstFocusableChildWidgetIndex_Index;  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue3;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusable_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_OnChildWidgetRefresh) == 0x000008, "Wrong alignment on InventoryWidget_C_OnChildWidgetRefresh");
static_assert(sizeof(InventoryWidget_C_OnChildWidgetRefresh) == 0x000078, "Wrong size on InventoryWidget_C_OnChildWidgetRefresh");
static_assert(offsetof(InventoryWidget_C_OnChildWidgetRefresh, m__bool_Variable) == 0x000000, "Member 'InventoryWidget_C_OnChildWidgetRefresh::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnChildWidgetRefresh, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000008, "Member 'InventoryWidget_C_OnChildWidgetRefresh::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnChildWidgetRefresh, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000010, "Member 'InventoryWidget_C_OnChildWidgetRefresh::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnChildWidgetRefresh, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'InventoryWidget_C_OnChildWidgetRefresh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnChildWidgetRefresh, CallFunc_SetFocus_ReturnValue) == 0x000021, "Member 'InventoryWidget_C_OnChildWidgetRefresh::CallFunc_SetFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnChildWidgetRefresh, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000022, "Member 'InventoryWidget_C_OnChildWidgetRefresh::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnChildWidgetRefresh, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000028, "Member 'InventoryWidget_C_OnChildWidgetRefresh::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnChildWidgetRefresh, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000030, "Member 'InventoryWidget_C_OnChildWidgetRefresh::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnChildWidgetRefresh, K2Node_DynamicCast_bSuccess2) == 0x000040, "Member 'InventoryWidget_C_OnChildWidgetRefresh::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnChildWidgetRefresh, CallFunc_GetFirstFocusableChildWidgetIndex_Index) == 0x000044, "Member 'InventoryWidget_C_OnChildWidgetRefresh::CallFunc_GetFirstFocusableChildWidgetIndex_Index' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnChildWidgetRefresh, CallFunc_SetFocus_ReturnValue2) == 0x000048, "Member 'InventoryWidget_C_OnChildWidgetRefresh::CallFunc_SetFocus_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnChildWidgetRefresh, CallFunc_GetFocusingChildWidget_ReturnValue3) == 0x000050, "Member 'InventoryWidget_C_OnChildWidgetRefresh::CallFunc_GetFocusingChildWidget_ReturnValue3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnChildWidgetRefresh, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'InventoryWidget_C_OnChildWidgetRefresh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnChildWidgetRefresh, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3) == 0x000060, "Member 'InventoryWidget_C_OnChildWidgetRefresh::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnChildWidgetRefresh, K2Node_DynamicCast_bSuccess3) == 0x000070, "Member 'InventoryWidget_C_OnChildWidgetRefresh::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnChildWidgetRefresh, CallFunc_IsFocusable_ReturnValue) == 0x000071, "Member 'InventoryWidget_C_OnChildWidgetRefresh::CallFunc_IsFocusable_ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.On_XBoxHelpTextBorder_Prepass_0
// 0x0028 (0x0028 - 0x0000)
struct InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Variable;                                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Variable2;                                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelfAttachmentPutMode_bResult;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGamepadConnected_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsXBoxOnePlatform_NewParam;               // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWidget*                                NewLocalVar_0;                                     // 0x0020(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0) == 0x000008, "Wrong alignment on InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0");
static_assert(sizeof(InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0) == 0x000028, "Wrong size on InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0");
static_assert(offsetof(InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0, BoundWidget) == 0x000000, "Member 'InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0, m__bool_Variable) == 0x000008, "Member 'InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0, m__int_Variable) == 0x00000C, "Member 'InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0::m__int_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0, m__int_Variable2) == 0x000010, "Member 'InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0::m__int_Variable2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0, CallFunc_IsSelfAttachmentPutMode_bResult) == 0x000014, "Member 'InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0::CallFunc_IsSelfAttachmentPutMode_bResult' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0, K2Node_SwitchInteger_CmpSuccess) == 0x000015, "Member 'InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0, K2Node_Select_Default) == 0x000018, "Member 'InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0, CallFunc_IsGamepadConnected_ReturnValue) == 0x00001C, "Member 'InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0::CallFunc_IsGamepadConnected_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00001D, "Member 'InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0, CallFunc_IsXBoxOnePlatform_NewParam) == 0x00001E, "Member 'InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0::CallFunc_IsXBoxOnePlatform_NewParam' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0, CallFunc_BooleanOR_ReturnValue) == 0x00001F, "Member 'InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0, NewLocalVar_0) == 0x000020, "Member 'InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0::NewLocalVar_0' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.OnPrepass_1
// 0x0010 (0x0010 - 0x0000)
struct InventoryWidget_C_OnPrepass_1 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGamepadConnected_ReturnValue;           // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_OnPrepass_1) == 0x000008, "Wrong alignment on InventoryWidget_C_OnPrepass_1");
static_assert(sizeof(InventoryWidget_C_OnPrepass_1) == 0x000010, "Wrong size on InventoryWidget_C_OnPrepass_1");
static_assert(offsetof(InventoryWidget_C_OnPrepass_1, BoundWidget) == 0x000000, "Member 'InventoryWidget_C_OnPrepass_1::BoundWidget' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnPrepass_1, m__bool_Variable) == 0x000008, "Member 'InventoryWidget_C_OnPrepass_1::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnPrepass_1, m__byte_Variable) == 0x000009, "Member 'InventoryWidget_C_OnPrepass_1::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnPrepass_1, m__byte_Variable2) == 0x00000A, "Member 'InventoryWidget_C_OnPrepass_1::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnPrepass_1, CallFunc_IsGamepadConnected_ReturnValue) == 0x00000B, "Member 'InventoryWidget_C_OnPrepass_1::CallFunc_IsGamepadConnected_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_OnPrepass_1, K2Node_Select_Default) == 0x00000C, "Member 'InventoryWidget_C_OnPrepass_1::K2Node_Select_Default' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.Up
// 0x0028 (0x0028 - 0x0000)
struct InventoryWidget_C_Up final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Up_ReturnValue;                           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_Up) == 0x000008, "Wrong alignment on InventoryWidget_C_Up");
static_assert(sizeof(InventoryWidget_C_Up) == 0x000028, "Wrong size on InventoryWidget_C_Up");
static_assert(offsetof(InventoryWidget_C_Up, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_Up::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Up, CallFunc_Array_Get_Item) == 0x000008, "Member 'InventoryWidget_C_Up::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Up, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000010, "Member 'InventoryWidget_C_Up::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Up, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'InventoryWidget_C_Up::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Up, CallFunc_Up_ReturnValue) == 0x000021, "Member 'InventoryWidget_C_Up::CallFunc_Up_ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.Right
// 0x0088 (0x0088 - 0x0000)
struct InventoryWidget_C_Right final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GeRightFocusableIndex_Index;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item2;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue2;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GeRightFocusableIndex_Index2;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item3;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Right_ReturnValue;                        // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_Right) == 0x000008, "Wrong alignment on InventoryWidget_C_Right");
static_assert(sizeof(InventoryWidget_C_Right) == 0x000088, "Wrong size on InventoryWidget_C_Right");
static_assert(offsetof(InventoryWidget_C_Right, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_Right::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Right, CallFunc_GeRightFocusableIndex_Index) == 0x000004, "Member 'InventoryWidget_C_Right::CallFunc_GeRightFocusableIndex_Index' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Right, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000008, "Member 'InventoryWidget_C_Right::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Right, CallFunc_Array_Get_Item) == 0x000010, "Member 'InventoryWidget_C_Right::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Right, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000018, "Member 'InventoryWidget_C_Right::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Right, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'InventoryWidget_C_Right::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Right, CallFunc_Array_Get_Item2) == 0x000030, "Member 'InventoryWidget_C_Right::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Right, CallFunc_SetFocus_ReturnValue) == 0x000038, "Member 'InventoryWidget_C_Right::CallFunc_SetFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Right, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000040, "Member 'InventoryWidget_C_Right::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Right, K2Node_DynamicCast_bSuccess2) == 0x000050, "Member 'InventoryWidget_C_Right::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Right, CallFunc_SetFocus_ReturnValue2) == 0x000051, "Member 'InventoryWidget_C_Right::CallFunc_SetFocus_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Right, CallFunc_GeRightFocusableIndex_Index2) == 0x000054, "Member 'InventoryWidget_C_Right::CallFunc_GeRightFocusableIndex_Index2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Right, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'InventoryWidget_C_Right::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Right, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'InventoryWidget_C_Right::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Right, CallFunc_Array_Get_Item3) == 0x000060, "Member 'InventoryWidget_C_Right::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Right, CallFunc_BooleanAND_ReturnValue) == 0x000068, "Member 'InventoryWidget_C_Right::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Right, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3) == 0x000070, "Member 'InventoryWidget_C_Right::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Right, K2Node_DynamicCast_bSuccess3) == 0x000080, "Member 'InventoryWidget_C_Right::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Right, CallFunc_Right_ReturnValue) == 0x000081, "Member 'InventoryWidget_C_Right::CallFunc_Right_ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.Left
// 0x0070 (0x0070 - 0x0000)
struct InventoryWidget_C_Left final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLeftFocusableIndex_Index;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetLeftFocusableIndex_Index2;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item2;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item3;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Left_ReturnValue;                         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_Left) == 0x000008, "Wrong alignment on InventoryWidget_C_Left");
static_assert(sizeof(InventoryWidget_C_Left) == 0x000070, "Wrong size on InventoryWidget_C_Left");
static_assert(offsetof(InventoryWidget_C_Left, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_Left::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Left, CallFunc_GetLeftFocusableIndex_Index) == 0x000004, "Member 'InventoryWidget_C_Left::CallFunc_GetLeftFocusableIndex_Index' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Left, CallFunc_GetLeftFocusableIndex_Index2) == 0x000008, "Member 'InventoryWidget_C_Left::CallFunc_GetLeftFocusableIndex_Index2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Left, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00000C, "Member 'InventoryWidget_C_Left::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Left, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000D, "Member 'InventoryWidget_C_Left::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Left, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'InventoryWidget_C_Left::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Left, CallFunc_Array_Get_Item) == 0x000010, "Member 'InventoryWidget_C_Left::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Left, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000018, "Member 'InventoryWidget_C_Left::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Left, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'InventoryWidget_C_Left::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Left, CallFunc_SetFocus_ReturnValue) == 0x000029, "Member 'InventoryWidget_C_Left::CallFunc_SetFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Left, CallFunc_Array_Get_Item2) == 0x000030, "Member 'InventoryWidget_C_Left::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Left, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000038, "Member 'InventoryWidget_C_Left::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Left, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'InventoryWidget_C_Left::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Left, CallFunc_SetFocus_ReturnValue2) == 0x000049, "Member 'InventoryWidget_C_Left::CallFunc_SetFocus_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Left, CallFunc_Array_Get_Item3) == 0x000050, "Member 'InventoryWidget_C_Left::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Left, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3) == 0x000058, "Member 'InventoryWidget_C_Left::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Left, K2Node_DynamicCast_bSuccess3) == 0x000068, "Member 'InventoryWidget_C_Left::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Left, CallFunc_Left_ReturnValue) == 0x000069, "Member 'InventoryWidget_C_Left::CallFunc_Left_ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.Down
// 0x0028 (0x0028 - 0x0000)
struct InventoryWidget_C_Down final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Down_ReturnValue;                         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_Down) == 0x000008, "Wrong alignment on InventoryWidget_C_Down");
static_assert(sizeof(InventoryWidget_C_Down) == 0x000028, "Wrong size on InventoryWidget_C_Down");
static_assert(offsetof(InventoryWidget_C_Down, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_Down::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Down, CallFunc_Array_Get_Item) == 0x000008, "Member 'InventoryWidget_C_Down::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Down, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000010, "Member 'InventoryWidget_C_Down::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Down, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'InventoryWidget_C_Down::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_Down, CallFunc_Down_ReturnValue) == 0x000021, "Member 'InventoryWidget_C_Down::CallFunc_Down_ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.SetFocus
// 0x0002 (0x0002 - 0x0000)
struct InventoryWidget_C_SetFocus final
{
public:
	bool                                          NewFocus;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_SetFocus) == 0x000001, "Wrong alignment on InventoryWidget_C_SetFocus");
static_assert(sizeof(InventoryWidget_C_SetFocus) == 0x000002, "Wrong size on InventoryWidget_C_SetFocus");
static_assert(offsetof(InventoryWidget_C_SetFocus, NewFocus) == 0x000000, "Member 'InventoryWidget_C_SetFocus::NewFocus' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_SetFocus, ReturnValue) == 0x000001, "Member 'InventoryWidget_C_SetFocus::ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.InputY
// 0x0030 (0x0030 - 0x0000)
struct InventoryWidget_C_InputY final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputY_ReturnValue;                       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_InputY) == 0x000008, "Wrong alignment on InventoryWidget_C_InputY");
static_assert(sizeof(InventoryWidget_C_InputY) == 0x000030, "Wrong size on InventoryWidget_C_InputY");
static_assert(offsetof(InventoryWidget_C_InputY, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_InputY::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputY, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000008, "Member 'InventoryWidget_C_InputY::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputY, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000010, "Member 'InventoryWidget_C_InputY::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputY, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000018, "Member 'InventoryWidget_C_InputY::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputY, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'InventoryWidget_C_InputY::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputY, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'InventoryWidget_C_InputY::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputY, CallFunc_InputY_ReturnValue) == 0x00002A, "Member 'InventoryWidget_C_InputY::CallFunc_InputY_ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.InputX
// 0x0030 (0x0030 - 0x0000)
struct InventoryWidget_C_InputX final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputX_ReturnValue;                       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_InputX) == 0x000008, "Wrong alignment on InventoryWidget_C_InputX");
static_assert(sizeof(InventoryWidget_C_InputX) == 0x000030, "Wrong size on InventoryWidget_C_InputX");
static_assert(offsetof(InventoryWidget_C_InputX, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_InputX::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputX, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000008, "Member 'InventoryWidget_C_InputX::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputX, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000010, "Member 'InventoryWidget_C_InputX::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputX, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000018, "Member 'InventoryWidget_C_InputX::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputX, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'InventoryWidget_C_InputX::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputX, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'InventoryWidget_C_InputX::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputX, CallFunc_InputX_ReturnValue) == 0x00002A, "Member 'InventoryWidget_C_InputX::CallFunc_InputX_ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.InputB
// 0x0030 (0x0030 - 0x0000)
struct InventoryWidget_C_InputB final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputB_ReturnValue;                       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_InputB) == 0x000008, "Wrong alignment on InventoryWidget_C_InputB");
static_assert(sizeof(InventoryWidget_C_InputB) == 0x000030, "Wrong size on InventoryWidget_C_InputB");
static_assert(offsetof(InventoryWidget_C_InputB, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_InputB::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputB, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000008, "Member 'InventoryWidget_C_InputB::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputB, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000010, "Member 'InventoryWidget_C_InputB::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputB, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000018, "Member 'InventoryWidget_C_InputB::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputB, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'InventoryWidget_C_InputB::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputB, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'InventoryWidget_C_InputB::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputB, CallFunc_InputB_ReturnValue) == 0x00002A, "Member 'InventoryWidget_C_InputB::CallFunc_InputB_ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.InputA
// 0x0030 (0x0030 - 0x0000)
struct InventoryWidget_C_InputA final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputA_ReturnValue;                       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_InputA) == 0x000008, "Wrong alignment on InventoryWidget_C_InputA");
static_assert(sizeof(InventoryWidget_C_InputA) == 0x000030, "Wrong size on InventoryWidget_C_InputA");
static_assert(offsetof(InventoryWidget_C_InputA, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_InputA::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputA, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000008, "Member 'InventoryWidget_C_InputA::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputA, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000010, "Member 'InventoryWidget_C_InputA::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputA, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000018, "Member 'InventoryWidget_C_InputA::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputA, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'InventoryWidget_C_InputA::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputA, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'InventoryWidget_C_InputA::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputA, CallFunc_InputA_ReturnValue) == 0x00002A, "Member 'InventoryWidget_C_InputA::CallFunc_InputA_ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.InputRT
// 0x0030 (0x0030 - 0x0000)
struct InventoryWidget_C_InputRT final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputRT_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_InputRT) == 0x000008, "Wrong alignment on InventoryWidget_C_InputRT");
static_assert(sizeof(InventoryWidget_C_InputRT) == 0x000030, "Wrong size on InventoryWidget_C_InputRT");
static_assert(offsetof(InventoryWidget_C_InputRT, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_InputRT::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputRT, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000008, "Member 'InventoryWidget_C_InputRT::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputRT, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'InventoryWidget_C_InputRT::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputRT, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000018, "Member 'InventoryWidget_C_InputRT::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputRT, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'InventoryWidget_C_InputRT::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputRT, CallFunc_InputRT_ReturnValue) == 0x000029, "Member 'InventoryWidget_C_InputRT::CallFunc_InputRT_ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.InputRB
// 0x0030 (0x0030 - 0x0000)
struct InventoryWidget_C_InputRB final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputRB_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_InputRB) == 0x000008, "Wrong alignment on InventoryWidget_C_InputRB");
static_assert(sizeof(InventoryWidget_C_InputRB) == 0x000030, "Wrong size on InventoryWidget_C_InputRB");
static_assert(offsetof(InventoryWidget_C_InputRB, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_InputRB::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputRB, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000008, "Member 'InventoryWidget_C_InputRB::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputRB, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'InventoryWidget_C_InputRB::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputRB, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000018, "Member 'InventoryWidget_C_InputRB::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputRB, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'InventoryWidget_C_InputRB::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_InputRB, CallFunc_InputRB_ReturnValue) == 0x000029, "Member 'InventoryWidget_C_InputRB::CallFunc_InputRB_ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.InputLT
// 0x0001 (0x0001 - 0x0000)
struct InventoryWidget_C_InputLT final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_InputLT) == 0x000001, "Wrong alignment on InventoryWidget_C_InputLT");
static_assert(sizeof(InventoryWidget_C_InputLT) == 0x000001, "Wrong size on InventoryWidget_C_InputLT");
static_assert(offsetof(InventoryWidget_C_InputLT, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_InputLT::ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.InputLB
// 0x0001 (0x0001 - 0x0000)
struct InventoryWidget_C_InputLB final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_InputLB) == 0x000001, "Wrong alignment on InventoryWidget_C_InputLB");
static_assert(sizeof(InventoryWidget_C_InputLB) == 0x000001, "Wrong size on InventoryWidget_C_InputLB");
static_assert(offsetof(InventoryWidget_C_InputLB, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_InputLB::ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.GetLeftFocusableIndex
// 0x0040 (0x0040 - 0x0000)
struct InventoryWidget_C_GetLeftFocusableIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusable_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp;                                              // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_GetLeftFocusableIndex) == 0x000008, "Wrong alignment on InventoryWidget_C_GetLeftFocusableIndex");
static_assert(sizeof(InventoryWidget_C_GetLeftFocusableIndex) == 0x000040, "Wrong size on InventoryWidget_C_GetLeftFocusableIndex");
static_assert(offsetof(InventoryWidget_C_GetLeftFocusableIndex, Index_0) == 0x000000, "Member 'InventoryWidget_C_GetLeftFocusableIndex::Index_0' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetLeftFocusableIndex, m__bool_Variable) == 0x000004, "Member 'InventoryWidget_C_GetLeftFocusableIndex::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetLeftFocusableIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'InventoryWidget_C_GetLeftFocusableIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetLeftFocusableIndex, CallFunc_Array_Get_Item) == 0x000010, "Member 'InventoryWidget_C_GetLeftFocusableIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetLeftFocusableIndex, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000018, "Member 'InventoryWidget_C_GetLeftFocusableIndex::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetLeftFocusableIndex, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'InventoryWidget_C_GetLeftFocusableIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetLeftFocusableIndex, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000029, "Member 'InventoryWidget_C_GetLeftFocusableIndex::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetLeftFocusableIndex, CallFunc_IsFocusable_ReturnValue) == 0x00002A, "Member 'InventoryWidget_C_GetLeftFocusableIndex::CallFunc_IsFocusable_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetLeftFocusableIndex, CallFunc_IsValid_ReturnValue) == 0x00002B, "Member 'InventoryWidget_C_GetLeftFocusableIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetLeftFocusableIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'InventoryWidget_C_GetLeftFocusableIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetLeftFocusableIndex, CallFunc_Subtract_IntInt_ReturnValue2) == 0x000030, "Member 'InventoryWidget_C_GetLeftFocusableIndex::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetLeftFocusableIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'InventoryWidget_C_GetLeftFocusableIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetLeftFocusableIndex, Temp) == 0x000038, "Member 'InventoryWidget_C_GetLeftFocusableIndex::Temp' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.GeRightFocusableIndex
// 0x0048 (0x0048 - 0x0000)
struct InventoryWidget_C_GeRightFocusableIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusable_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp;                                              // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_GeRightFocusableIndex) == 0x000008, "Wrong alignment on InventoryWidget_C_GeRightFocusableIndex");
static_assert(sizeof(InventoryWidget_C_GeRightFocusableIndex) == 0x000048, "Wrong size on InventoryWidget_C_GeRightFocusableIndex");
static_assert(offsetof(InventoryWidget_C_GeRightFocusableIndex, Index_0) == 0x000000, "Member 'InventoryWidget_C_GeRightFocusableIndex::Index_0' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GeRightFocusableIndex, m__bool_Variable) == 0x000004, "Member 'InventoryWidget_C_GeRightFocusableIndex::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GeRightFocusableIndex, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'InventoryWidget_C_GeRightFocusableIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GeRightFocusableIndex, CallFunc_Array_Length_ReturnValue2) == 0x00000C, "Member 'InventoryWidget_C_GeRightFocusableIndex::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GeRightFocusableIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'InventoryWidget_C_GeRightFocusableIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GeRightFocusableIndex, CallFunc_Array_Get_Item) == 0x000018, "Member 'InventoryWidget_C_GeRightFocusableIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GeRightFocusableIndex, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000020, "Member 'InventoryWidget_C_GeRightFocusableIndex::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GeRightFocusableIndex, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'InventoryWidget_C_GeRightFocusableIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GeRightFocusableIndex, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000031, "Member 'InventoryWidget_C_GeRightFocusableIndex::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GeRightFocusableIndex, CallFunc_IsFocusable_ReturnValue) == 0x000032, "Member 'InventoryWidget_C_GeRightFocusableIndex::CallFunc_IsFocusable_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GeRightFocusableIndex, CallFunc_IsValid_ReturnValue) == 0x000033, "Member 'InventoryWidget_C_GeRightFocusableIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GeRightFocusableIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'InventoryWidget_C_GeRightFocusableIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GeRightFocusableIndex, CallFunc_Add_IntInt_ReturnValue2) == 0x000038, "Member 'InventoryWidget_C_GeRightFocusableIndex::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GeRightFocusableIndex, CallFunc_Less_IntInt_ReturnValue2) == 0x00003C, "Member 'InventoryWidget_C_GeRightFocusableIndex::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GeRightFocusableIndex, Temp) == 0x000040, "Member 'InventoryWidget_C_GeRightFocusableIndex::Temp' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.GetFirstFocusableChildWidgetIndex
// 0x0040 (0x0040 - 0x0000)
struct InventoryWidget_C_GetFirstFocusableChildWidgetIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusable_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_GetFirstFocusableChildWidgetIndex) == 0x000008, "Wrong alignment on InventoryWidget_C_GetFirstFocusableChildWidgetIndex");
static_assert(sizeof(InventoryWidget_C_GetFirstFocusableChildWidgetIndex) == 0x000040, "Wrong size on InventoryWidget_C_GetFirstFocusableChildWidgetIndex");
static_assert(offsetof(InventoryWidget_C_GetFirstFocusableChildWidgetIndex, Index_0) == 0x000000, "Member 'InventoryWidget_C_GetFirstFocusableChildWidgetIndex::Index_0' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetFirstFocusableChildWidgetIndex, m__int_Array_Index_Variable) == 0x000004, "Member 'InventoryWidget_C_GetFirstFocusableChildWidgetIndex::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetFirstFocusableChildWidgetIndex, m__int_Loop_Counter_Variable) == 0x000008, "Member 'InventoryWidget_C_GetFirstFocusableChildWidgetIndex::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetFirstFocusableChildWidgetIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'InventoryWidget_C_GetFirstFocusableChildWidgetIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetFirstFocusableChildWidgetIndex, m__bool_Variable) == 0x000010, "Member 'InventoryWidget_C_GetFirstFocusableChildWidgetIndex::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetFirstFocusableChildWidgetIndex, CallFunc_Array_Get_Item) == 0x000018, "Member 'InventoryWidget_C_GetFirstFocusableChildWidgetIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetFirstFocusableChildWidgetIndex, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'InventoryWidget_C_GetFirstFocusableChildWidgetIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetFirstFocusableChildWidgetIndex, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000028, "Member 'InventoryWidget_C_GetFirstFocusableChildWidgetIndex::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetFirstFocusableChildWidgetIndex, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'InventoryWidget_C_GetFirstFocusableChildWidgetIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetFirstFocusableChildWidgetIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'InventoryWidget_C_GetFirstFocusableChildWidgetIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetFirstFocusableChildWidgetIndex, CallFunc_IsFocusable_ReturnValue) == 0x00003A, "Member 'InventoryWidget_C_GetFirstFocusableChildWidgetIndex::CallFunc_IsFocusable_ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.IsFocus
// 0x0001 (0x0001 - 0x0000)
struct InventoryWidget_C_IsFocus final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_IsFocus) == 0x000001, "Wrong alignment on InventoryWidget_C_IsFocus");
static_assert(sizeof(InventoryWidget_C_IsFocus) == 0x000001, "Wrong size on InventoryWidget_C_IsFocus");
static_assert(offsetof(InventoryWidget_C_IsFocus, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_IsFocus::ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.GetUpWidget
// 0x0008 (0x0008 - 0x0000)
struct InventoryWidget_C_GetUpWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_GetUpWidget) == 0x000008, "Wrong alignment on InventoryWidget_C_GetUpWidget");
static_assert(sizeof(InventoryWidget_C_GetUpWidget) == 0x000008, "Wrong size on InventoryWidget_C_GetUpWidget");
static_assert(offsetof(InventoryWidget_C_GetUpWidget, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_GetUpWidget::ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.GetRightWidget
// 0x0008 (0x0008 - 0x0000)
struct InventoryWidget_C_GetRightWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_GetRightWidget) == 0x000008, "Wrong alignment on InventoryWidget_C_GetRightWidget");
static_assert(sizeof(InventoryWidget_C_GetRightWidget) == 0x000008, "Wrong size on InventoryWidget_C_GetRightWidget");
static_assert(offsetof(InventoryWidget_C_GetRightWidget, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_GetRightWidget::ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.GetLeftWidget
// 0x0008 (0x0008 - 0x0000)
struct InventoryWidget_C_GetLeftWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_GetLeftWidget) == 0x000008, "Wrong alignment on InventoryWidget_C_GetLeftWidget");
static_assert(sizeof(InventoryWidget_C_GetLeftWidget) == 0x000008, "Wrong size on InventoryWidget_C_GetLeftWidget");
static_assert(offsetof(InventoryWidget_C_GetLeftWidget, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_GetLeftWidget::ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.GetDownWidget
// 0x0008 (0x0008 - 0x0000)
struct InventoryWidget_C_GetDownWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_GetDownWidget) == 0x000008, "Wrong alignment on InventoryWidget_C_GetDownWidget");
static_assert(sizeof(InventoryWidget_C_GetDownWidget) == 0x000008, "Wrong size on InventoryWidget_C_GetDownWidget");
static_assert(offsetof(InventoryWidget_C_GetDownWidget, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_GetDownWidget::ReturnValue' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.GetFocusingChildWidget
// 0x0018 (0x0018 - 0x0000)
struct InventoryWidget_C_GetFocusingChildWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_GetFocusingChildWidget) == 0x000008, "Wrong alignment on InventoryWidget_C_GetFocusingChildWidget");
static_assert(sizeof(InventoryWidget_C_GetFocusingChildWidget) == 0x000018, "Wrong size on InventoryWidget_C_GetFocusingChildWidget");
static_assert(offsetof(InventoryWidget_C_GetFocusingChildWidget, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_GetFocusingChildWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetFocusingChildWidget, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000008, "Member 'InventoryWidget_C_GetFocusingChildWidget::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWidget_C_GetFocusingChildWidget, CallFunc_Array_Get_Item) == 0x000010, "Member 'InventoryWidget_C_GetFocusingChildWidget::CallFunc_Array_Get_Item' has a wrong offset!");

// Function InventoryWidget.InventoryWidget_C.IsFocusable
// 0x0001 (0x0001 - 0x0000)
struct InventoryWidget_C_IsFocusable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InventoryWidget_C_IsFocusable) == 0x000001, "Wrong alignment on InventoryWidget_C_IsFocusable");
static_assert(sizeof(InventoryWidget_C_IsFocusable) == 0x000001, "Wrong size on InventoryWidget_C_IsFocusable");
static_assert(offsetof(InventoryWidget_C_IsFocusable, ReturnValue) == 0x000000, "Member 'InventoryWidget_C_IsFocusable::ReturnValue' has a wrong offset!");

}

