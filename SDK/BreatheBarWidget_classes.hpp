#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BreatheBarWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BreatheBarWidget.BreatheBarWidget_C
// 0x0060 (0x02A0 - 0x0240)
class UBreatheBarWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Cooldown;                                          // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UWidgetAnimation*                       Emerging;                                          // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UWidgetAnimation*                       Vanishing;                                         // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UWidgetAnimation*                       Drowning;                                          // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UWidgetAnimation*                       Breathing;                                         // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 BreathGaugeBG;                                     // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UMaterialInstanceDynamic*               BreathMaterial;                                    // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          isVanishing;                                       // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BreathRatioDisplay;                                // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          isEmerged;                                         // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          RefCharacter;                                      // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         BreathRatio;                                       // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          isCooldown;                                        // 0x029C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bEventBindig;                                      // 0x029D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BreatheBarWidget(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void OnStartBuff(struct FName BuffName, bool bStart);
	void UpdateBreathGauge(class UWidget* BoundWidget);
	void OnPrepass_0(class UWidget* BoundWidget);

	void GetBreathRatio(float* Breath) const;
	void GetBreathImageColor(float Ratio, struct FLinearColor* Color) const;
	void GetTslCharacter(class ATslCharacter** TslCharacter) const;
	void IsUnderwater(bool* bIsWater) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BreatheBarWidget_C">();
	}
	static class UBreatheBarWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBreatheBarWidget_C>();
	}
};
static_assert(alignof(UBreatheBarWidget_C) == 0x000008, "Wrong alignment on UBreatheBarWidget_C");
static_assert(sizeof(UBreatheBarWidget_C) == 0x0002A0, "Wrong size on UBreatheBarWidget_C");
static_assert(offsetof(UBreatheBarWidget_C, UberGraphFrame) == 0x000240, "Member 'UBreatheBarWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBreatheBarWidget_C, Cooldown) == 0x000248, "Member 'UBreatheBarWidget_C::Cooldown' has a wrong offset!");
static_assert(offsetof(UBreatheBarWidget_C, Emerging) == 0x000250, "Member 'UBreatheBarWidget_C::Emerging' has a wrong offset!");
static_assert(offsetof(UBreatheBarWidget_C, Vanishing) == 0x000258, "Member 'UBreatheBarWidget_C::Vanishing' has a wrong offset!");
static_assert(offsetof(UBreatheBarWidget_C, Drowning) == 0x000260, "Member 'UBreatheBarWidget_C::Drowning' has a wrong offset!");
static_assert(offsetof(UBreatheBarWidget_C, Breathing) == 0x000268, "Member 'UBreatheBarWidget_C::Breathing' has a wrong offset!");
static_assert(offsetof(UBreatheBarWidget_C, BreathGaugeBG) == 0x000270, "Member 'UBreatheBarWidget_C::BreathGaugeBG' has a wrong offset!");
static_assert(offsetof(UBreatheBarWidget_C, BreathMaterial) == 0x000278, "Member 'UBreatheBarWidget_C::BreathMaterial' has a wrong offset!");
static_assert(offsetof(UBreatheBarWidget_C, isVanishing) == 0x000280, "Member 'UBreatheBarWidget_C::isVanishing' has a wrong offset!");
static_assert(offsetof(UBreatheBarWidget_C, BreathRatioDisplay) == 0x000284, "Member 'UBreatheBarWidget_C::BreathRatioDisplay' has a wrong offset!");
static_assert(offsetof(UBreatheBarWidget_C, isEmerged) == 0x000288, "Member 'UBreatheBarWidget_C::isEmerged' has a wrong offset!");
static_assert(offsetof(UBreatheBarWidget_C, RefCharacter) == 0x000290, "Member 'UBreatheBarWidget_C::RefCharacter' has a wrong offset!");
static_assert(offsetof(UBreatheBarWidget_C, BreathRatio) == 0x000298, "Member 'UBreatheBarWidget_C::BreathRatio' has a wrong offset!");
static_assert(offsetof(UBreatheBarWidget_C, isCooldown) == 0x00029C, "Member 'UBreatheBarWidget_C::isCooldown' has a wrong offset!");
static_assert(offsetof(UBreatheBarWidget_C, bEventBindig) == 0x00029D, "Member 'UBreatheBarWidget_C::bEventBindig' has a wrong offset!");

}

