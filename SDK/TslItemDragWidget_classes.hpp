#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TslItemDragWidget

#include "Basic.hpp"

#include "TslGame_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass TslItemDragWidget.TslItemDragWidget_C
// 0x0070 (0x02B0 - 0x0240)
class UTslItemDragWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Background;                                        // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 ErrorIcon;                                         // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 ItemIcon;                                          // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             StackCountText;                                    // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	TScriptInterface<class ISlotInterface>        ItemInterface;                                     // 0x0268(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	class UItem*                                  ItemInstance;                                      // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	class ATslPlayerController*                   ShooterPlayerController;                           // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AInventory*                             Inventory;                                         // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               BackgroundMaterial;                                // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FName                                   ActionName;                                        // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bEnableAction;                                     // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bVicinityItem;                                     // 0x02A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2A2[0x2];                                      // 0x02A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MouseOverWeaponSlotIndex;                          // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         DragDroppingWeaponIndex;                           // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EEquipSlotID                                  DragDroppingSlotId;                                // 0x02AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EEquipSlotID                                  MouseOverSlotId;                                   // 0x02AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_TslItemDragWidget(int32 EntryPoint);
	void Destruct();
	void Construct();
	void UpdateIcon(class UWidget* BoundWidget);
	void UpdateStackCountVisibility(class UWidget* BoundWidget);
	void UpdateStackCount(class UWidget* BoundWidget);
	void GetShooterPlayerController(class ATslPlayerController** ShooterPlayerController_0);
	void GetAdditionalMaxStackCount(int32* Count);
	void GetInventory(class AInventory** Inventory_0);
	void GetActionName(struct FName* ActionName_0);
	void GettslItemDragDropOperation(class UTslItemDragDropOperation_C** AsTsl_Item_Drag_Drop_Operation);
	void UpdateBackgroundImage(class UWidget* BoundWidget);
	void IsEnable(bool* IsEnable_0);
	void On_ErrorIcon_Prepass_0(class UWidget* BoundWidget);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TslItemDragWidget_C">();
	}
	static class UTslItemDragWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTslItemDragWidget_C>();
	}
};
static_assert(alignof(UTslItemDragWidget_C) == 0x000008, "Wrong alignment on UTslItemDragWidget_C");
static_assert(sizeof(UTslItemDragWidget_C) == 0x0002B0, "Wrong size on UTslItemDragWidget_C");
static_assert(offsetof(UTslItemDragWidget_C, UberGraphFrame) == 0x000240, "Member 'UTslItemDragWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTslItemDragWidget_C, Background) == 0x000248, "Member 'UTslItemDragWidget_C::Background' has a wrong offset!");
static_assert(offsetof(UTslItemDragWidget_C, ErrorIcon) == 0x000250, "Member 'UTslItemDragWidget_C::ErrorIcon' has a wrong offset!");
static_assert(offsetof(UTslItemDragWidget_C, ItemIcon) == 0x000258, "Member 'UTslItemDragWidget_C::ItemIcon' has a wrong offset!");
static_assert(offsetof(UTslItemDragWidget_C, StackCountText) == 0x000260, "Member 'UTslItemDragWidget_C::StackCountText' has a wrong offset!");
static_assert(offsetof(UTslItemDragWidget_C, ItemInterface) == 0x000268, "Member 'UTslItemDragWidget_C::ItemInterface' has a wrong offset!");
static_assert(offsetof(UTslItemDragWidget_C, ItemInstance) == 0x000278, "Member 'UTslItemDragWidget_C::ItemInstance' has a wrong offset!");
static_assert(offsetof(UTslItemDragWidget_C, ShooterPlayerController) == 0x000280, "Member 'UTslItemDragWidget_C::ShooterPlayerController' has a wrong offset!");
static_assert(offsetof(UTslItemDragWidget_C, Inventory) == 0x000288, "Member 'UTslItemDragWidget_C::Inventory' has a wrong offset!");
static_assert(offsetof(UTslItemDragWidget_C, BackgroundMaterial) == 0x000290, "Member 'UTslItemDragWidget_C::BackgroundMaterial' has a wrong offset!");
static_assert(offsetof(UTslItemDragWidget_C, ActionName) == 0x000298, "Member 'UTslItemDragWidget_C::ActionName' has a wrong offset!");
static_assert(offsetof(UTslItemDragWidget_C, bEnableAction) == 0x0002A0, "Member 'UTslItemDragWidget_C::bEnableAction' has a wrong offset!");
static_assert(offsetof(UTslItemDragWidget_C, bVicinityItem) == 0x0002A1, "Member 'UTslItemDragWidget_C::bVicinityItem' has a wrong offset!");
static_assert(offsetof(UTslItemDragWidget_C, MouseOverWeaponSlotIndex) == 0x0002A4, "Member 'UTslItemDragWidget_C::MouseOverWeaponSlotIndex' has a wrong offset!");
static_assert(offsetof(UTslItemDragWidget_C, DragDroppingWeaponIndex) == 0x0002A8, "Member 'UTslItemDragWidget_C::DragDroppingWeaponIndex' has a wrong offset!");
static_assert(offsetof(UTslItemDragWidget_C, DragDroppingSlotId) == 0x0002AC, "Member 'UTslItemDragWidget_C::DragDroppingSlotId' has a wrong offset!");
static_assert(offsetof(UTslItemDragWidget_C, MouseOverSlotId) == 0x0002AD, "Member 'UTslItemDragWidget_C::MouseOverSlotId' has a wrong offset!");

}

